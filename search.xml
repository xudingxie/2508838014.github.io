<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C Sharp 枚举</title>
      <link href="/2024/07/09/C%20Sharp/C%20Sharp%20%E6%9E%9A%E4%B8%BE/"/>
      <url>/2024/07/09/C%20Sharp/C%20Sharp%20%E6%9E%9A%E4%B8%BE/</url>
      
        <content type="html"><![CDATA[<h2 id="C-Sharp-枚举-Enum"><a href="#C-Sharp-枚举-Enum" class="headerlink" title="C Sharp 枚举(Enum)"></a>C Sharp 枚举(Enum)</h2><p>这个应该叫做基础知识的范围。但是这部分的方法我一直都是一知半解。所以特意这边梳理一下。</p><p>并且根据我的经验实际上还是各种转换实际使用上使用比较多，所以本文主要讲解不同类型的转换。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ParseTest</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Flags</span>]</span><br><span class="line">    <span class="built_in">enum</span> Colors &#123; Red = <span class="number">1</span>, Green = <span class="number">2</span>, Blue = <span class="number">4</span>, Yellow = <span class="number">8</span> &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;The entries of the Colors enumeration are:&quot;</span>);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="built_in">string</span> colorName <span class="keyword">in</span> Enum.GetNames(<span class="keyword">typeof</span>(Colors)))</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;&#123;0&#125; = &#123;1:D&#125;&quot;</span>, colorName,</span><br><span class="line">                                         Enum.Parse(<span class="keyword">typeof</span>(Colors), colorName));</span><br><span class="line">        &#125;</span><br><span class="line">        Console.WriteLine();</span><br><span class="line"></span><br><span class="line">        Colors orange = (Colors) Enum.Parse(<span class="keyword">typeof</span>(Colors), <span class="string">&quot;Red, Yellow&quot;</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;The orange value &#123;0:D&#125; has the combined entries of &#123;0&#125;&quot;</span>,</span><br><span class="line">                           orange);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">This code example produces the following results:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">The entries of the Colors Enum are:</span></span><br><span class="line"><span class="comment">Red = 1</span></span><br><span class="line"><span class="comment">Green = 2</span></span><br><span class="line"><span class="comment">Blue = 4</span></span><br><span class="line"><span class="comment">Yellow = 8</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">The orange value 9 has the combined entries of Red, Yellow</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="StringToEnum"><a href="#StringToEnum" class="headerlink" title="StringToEnum"></a>StringToEnum</h2><p>字符串转Int，一般人可能很奇怪为什么我要先转成int.因为我似乎没有看到直接转Enum的方案。其中String的内容如下图。不仅仅可以是Red,也可以是1，2这种数字的字符串的表达形势。</p><p><strong>String是大小写敏感的</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MyEnum res=(MyEnum)Enum.Parse(<span class="keyword">typeof</span>(MyEnum),str);</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line">[<span class="meta">Flags</span>] <span class="built_in">enum</span> Colors &#123; None=<span class="number">0</span>, Red = <span class="number">1</span>, Green = <span class="number">2</span>, Blue = <span class="number">4</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Example</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">string</span>[] colorStrings = &#123; <span class="string">&quot;0&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;8&quot;</span>, <span class="string">&quot;blue&quot;</span>, <span class="string">&quot;Blue&quot;</span>, <span class="string">&quot;Yellow&quot;</span>, <span class="string">&quot;Red, Green&quot;</span> &#125;;</span><br><span class="line">      <span class="keyword">foreach</span> (<span class="built_in">string</span> colorString <span class="keyword">in</span> colorStrings)</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">try</span> &#123;</span><br><span class="line">            Colors colorValue = (Colors) Enum.Parse(<span class="keyword">typeof</span>(Colors), colorString);</span><br><span class="line">            <span class="keyword">if</span> (Enum.IsDefined(<span class="keyword">typeof</span>(Colors), colorValue) | colorValue.ToString().Contains(<span class="string">&quot;,&quot;</span>))</span><br><span class="line">               Console.WriteLine(<span class="string">&quot;Converted &#x27;&#123;0&#125;&#x27; to &#123;1&#125;.&quot;</span>, colorString, colorValue.ToString());</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">               Console.WriteLine(<span class="string">&quot;&#123;0&#125; is not an underlying value of the Colors enumeration.&quot;</span>, colorString);</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">catch</span> (ArgumentException) &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;&#x27;&#123;0&#125;&#x27; is not a member of the Colors enumeration.&quot;</span>, colorString);</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// The example displays the following output:</span></span><br><span class="line"><span class="comment">//       Converted &#x27;0&#x27; to None.</span></span><br><span class="line"><span class="comment">//       Converted &#x27;2&#x27; to Green.</span></span><br><span class="line"><span class="comment">//       8 is not an underlying value of the Colors enumeration.</span></span><br><span class="line"><span class="comment">//       &#x27;blue&#x27; is not a member of the Colors enumeration.</span></span><br><span class="line"><span class="comment">//       Converted &#x27;Blue&#x27; to Blue.</span></span><br><span class="line"><span class="comment">//       &#x27;Yellow&#x27; is not a member of the Colors enumeration.</span></span><br><span class="line"><span class="comment">//       Converted &#x27;Red, Green&#x27; to Red, Green.</span></span><br></pre></td></tr></table></figure><h2 id="EnumToString与IntToString"><a href="#EnumToString与IntToString" class="headerlink" title="EnumToString与IntToString"></a>EnumToString与IntToString</h2><h3 id="方案1：Enum-GetName-Type-Object"><a href="#方案1：Enum-GetName-Type-Object" class="headerlink" title="方案1：Enum.GetName(Type,Object)"></a>方案1：Enum.GetName(Type,Object)</h3><p>这个可以用于保存Enum类型到数据库的时候使用.直接ToString()方法即可。返回的字符表达式</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> str=GetName(Type, Object);</span><br></pre></td></tr></table></figure><ul><li><p>enumType</p><p><a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.type?view=net-8.0">Type</a></p></li></ul><p>枚举类型。</p><ul><li><p>value</p><p><a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.object?view=net-8.0">Object</a></p></li></ul><p>特定枚举常量的值（根据其基础类型）</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GetNameTest</span> &#123;</span><br><span class="line">    <span class="built_in">enum</span> Colors &#123; Red, Green, Blue, Yellow &#125;;</span><br><span class="line">    <span class="built_in">enum</span> Styles &#123; Plaid, Striped, Tartan, Corduroy &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span> &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;The 4th value of the Colors Enum is &#123;0&#125;&quot;</span>, Enum.GetName(<span class="keyword">typeof</span>(Colors), <span class="number">3</span>));</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;The 4th value of the Styles Enum is &#123;0&#125;&quot;</span>, Enum.GetName(<span class="keyword">typeof</span>(Styles), Styles.Corduroy));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// The example displays the following output:</span></span><br><span class="line"><span class="comment">//       The 4th value of the Colors Enum is Yellow</span></span><br><span class="line"><span class="comment">//       The 4th value of the Styles Enum is Corduroy</span></span><br></pre></td></tr></table></figure><h3 id="方案2：ToString"><a href="#方案2：ToString" class="headerlink" title="方案2：ToString()"></a>方案2：ToString()</h3><p>仅限EnumToString</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">enum</span> Colors &#123; Red, Green, Blue, Yellow &#125;;</span><br><span class="line"><span class="built_in">string</span> str=Colors.Red.ToString():</span><br></pre></td></tr></table></figure><h2 id="IntToEnum"><a href="#IntToEnum" class="headerlink" title="IntToEnum"></a>IntToEnum</h2><h3 id="直接转化"><a href="#直接转化" class="headerlink" title="直接转化"></a>直接转化</h3><p>直接强行转化</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Colors color = (Colors)<span class="number">2</span> </span><br></pre></td></tr></table></figure><p>那么color即为Colors.Blue</p><h3 id="转成Object再转化"><a href="#转成Object再转化" class="headerlink" title="转成Object再转化"></a>转成Object再转化</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">ToObject</span>(<span class="params">Type enumType,<span class="built_in">int</span> <span class="keyword">value</span></span>)</span></span><br></pre></td></tr></table></figure><p>例如：Colors color &#x3D; (Colors)Enum.ToObject(typeof(Colors), 2)，那么color即为Colors.Blue</p><h2 id="EnumToInt"><a href="#EnumToInt" class="headerlink" title="EnumToInt"></a>EnumToInt</h2><p>因为枚举的基类型是除 Char 外的整型，所以可以进行强制转换。<br>例如：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> a=(<span class="built_in">int</span>)Colors.Red;</span><br><span class="line"><span class="built_in">byte</span> b=(<span class="built_in">byte</span>)Colors.Green</span><br></pre></td></tr></table></figure><h2 id="判断是否是枚举类型"><a href="#判断是否是枚举类型" class="headerlink" title="判断是否是枚举类型"></a>判断是否是枚举类型</h2><p>判断某个整型是否定义在枚举中的方法：Enum.IsDefined</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">IsDefined</span>(<span class="params">Type enumType,Object <span class="keyword">value</span></span>)</span></span><br></pre></td></tr></table></figure><p>例如：Enum.IsDefined(typeof(Colors), n)).</p><p>示例参考StringToEnum中的内容。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ol><li>微软官方Enum.Parse 方法解释<a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.enum.parse?view=net-8.0">https://learn.microsoft.com/zh-cn/dotnet/api/system.enum.parse?view=net-8.0</a></li><li>其他人的文章<a href="https://blog.csdn.net/zys91011_muse/article/details/76282945">https://blog.csdn.net/zys91011_muse/article/details/76282945</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C Sharp 迭代器</title>
      <link href="/2024/07/09/C%20Sharp/C%20Sharp%20%20%E8%BF%AD%E4%BB%A3%E5%99%A8/"/>
      <url>/2024/07/09/C%20Sharp/C%20Sharp%20%20%E8%BF%AD%E4%BB%A3%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h1><p>平时使用中经常看到IEnumerable与IEnumerator这两个在遍历时发挥作用。</p><p>但是对于它们却一无所知。仅仅知道IEnumerable时List，Array这类的接口。可以通过IEnumerable来实现彼此转换或者说更加自由的输入与输出。</p><p>它们一起提供了一种在集合上进行循环迭代的通用方式。</p><h3 id="IEnumerable-接口"><a href="#IEnumerable-接口" class="headerlink" title="IEnumerable 接口"></a>IEnumerable 接口</h3><p><code>IEnumerable</code> 接口定义了一种方法，用于返回一个实现了 <code>IEnumerator</code> 接口的迭代器。它有一个方法：<code>IEnumerable</code> 接口定义了一种方法，用于返回一个实现了 <code>IEnumerator</code> 接口的迭代器。它有一个方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">csharpCopy codepublic interface IEnumerable</span><br><span class="line">&#123;</span><br><span class="line">    IEnumerator GetEnumerator();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>GetEnumerator()</code> 方法返回一个 <code>IEnumerator</code> 对象，该对象允许你遍历集合中的每个元素。</p><h3 id="IEnumerator-接口"><a href="#IEnumerator-接口" class="headerlink" title="IEnumerator 接口"></a>IEnumerator 接口</h3><p><code>IEnumerator</code> 接口定义了用于访问集合中元素的方法和属性。它有以下成员：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">csharpCopy codepublic interface IEnumerator</span><br><span class="line">&#123;</span><br><span class="line">    object Current &#123; get; &#125;  // 返回集合中的当前元素</span><br><span class="line">    bool MoveNext();          // 将迭代器移到集合的下一个元素</span><br><span class="line">    void Reset();             // 将迭代器重置到初始位置</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>Current</code> 属性返回集合中当前位置的元素。</li><li><code>MoveNext()</code> 方法将迭代器移动到集合的下一个元素，并返回 <code>true</code> 如果有更多的元素可用，否则返回 <code>false</code>。</li><li><code>Reset()</code> 方法将迭代器重置到集合的开头。</li></ul><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>使用 <code>IEnumerable</code> 和 <code>IEnumerator</code> 的一般模式是：</p><ol><li>创建实现了 <code>IEnumerable</code> 接口的集合类。</li><li>在该集合类中，实现 <code>GetEnumerator()</code> 方法来返回一个实现了 <code>IEnumerator</code> 接口的迭代器。</li><li>使用 <code>foreach</code> 循环或手动调用 <code>IEnumerator</code> 的方法来遍历集合中的元素。</li></ol><p>这样的设计允许你以一种通用的方式来迭代不同类型的集合，包括数组、列表、字典等。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">csharpCopy code// 示例：遍历一个数组</span><br><span class="line">int[] numbers = &#123; 1, 2, 3, 4, 5 &#125;;</span><br><span class="line">IEnumerable enumerable = numbers;</span><br><span class="line">IEnumerator enumerator = enumerable.GetEnumerator();</span><br><span class="line">while (enumerator.MoveNext())</span><br><span class="line">&#123;</span><br><span class="line">    int current = (int)enumerator.Current;</span><br><span class="line">    Console.WriteLine(current);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段代码创建了一个整数数组，并通过将其转换为 <code>IEnumerable</code> 接口来获得一个迭代器。然后，通过调用 <code>MoveNext()</code> 和访问 <code>Current</code> 属性来遍历数组中的元素。</p><p>总之，<code>IEnumerable</code> 和 <code>IEnumerator</code> 接口提供了一种通用的迭代机制，使得可以以一种一致的方式遍历不同类型的集合。</p><h2 id="一些心得"><a href="#一些心得" class="headerlink" title="一些心得"></a>一些心得</h2><ul><li><p>IEnumerator本身是惰性的，在声明并赋值中并不触发生成本身的逻辑（如果有的话），只有在访问Current的时候才会去触发。</p></li><li><p>没有执行MoveNext()就访问Current会进行报错，复合第一条，惰性特点。因为本身没有到达第一个元素。</p></li><li><p>第一次moveNext()之后到达第一个元素。</p></li><li><p>一个常见的类型想要实现Foreach的循环的条件-本质就是迭代器的实现。</p><ul><li>方案1.继承:IEnumerable然后实现GetEnumerator()来访问实际可以遍历的元素。</li><li>方案2.手动实现IEnumerable.即手动建立GetEnumerator()方法返回一个IEnumerator的对象。在这个对象中继承IEnumerator并且实现MoveNext()，ReSet(),Current的方法与属性。</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C Sharp Interlocked.Exchange</title>
      <link href="/2024/07/08/C%20Sharp/C%20Sharp%20Interlocked.Exchange()/"/>
      <url>/2024/07/08/C%20Sharp/C%20Sharp%20Interlocked.Exchange()/</url>
      
        <content type="html"><![CDATA[<h2 id="C-Sharp-Interlocked-Exchange"><a href="#C-Sharp-Interlocked-Exchange" class="headerlink" title="C Sharp Interlocked.Exchange"></a>C Sharp Interlocked.Exchange</h2><p>我是在别人的代码中看到有这么一个方法。觉得后面可能会有用，于是打算学习下来。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> intLock = <span class="number">0</span>; </span><br><span class="line"><span class="keyword">if</span> (Interlocked.Exchange(<span class="keyword">ref</span> intLock, <span class="number">1</span>) == <span class="number">0</span> )</span><br><span class="line"> &#123;</span><br><span class="line">     <span class="comment">//TODO</span></span><br><span class="line">     <span class="comment">//。。。</span></span><br><span class="line">     Interlocked.Exchange(<span class="keyword">ref</span> intLock, <span class="number">0</span>);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>返回值是传入的参数的原始值。作用是把intLock赋值</p><h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><p>从这个示例中也大致可以看出来其中的作用。有点类似lock这种方法。避免多线程导致的堵塞。但是我在这里为为什么要专门拿出来呢？因为我觉得这个可能会有一些比较有意思的内容。因为这个的优势我看来是什么？这个示例中就是在Timer中适合使用的。</p><ol><li>如果上一个还没有执行完毕，if条件会直接不成立。就很舒服。</li><li>如果有多个想同时实现，那就是if进行判断就会报错了。</li></ol><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol><li><p>通过汇编的方式查看了实际发生的事情，并且避免一种错误使用方式<a href="https://www.cnblogs.com/Zachary-Fan/p/interlocked.html">https://www.cnblogs.com/Zachary-Fan/p/interlocked.html</a></p></li><li><p>C# 浅谈线程同步Lock、Monitor、Interlocked、Mutex等多种线程锁及测试汇总<a href="https://blog.csdn.net/qq_42537006/article/details/104949841">https://blog.csdn.net/qq_42537006/article/details/104949841</a></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C Sharp 单实例运行</title>
      <link href="/2024/07/08/C%20Sharp/C%20Sharp%20%E7%A8%8B%E5%BA%8F%E5%8D%95%E5%AE%9E%E4%BE%8B%E8%BF%90%E8%A1%8C/"/>
      <url>/2024/07/08/C%20Sharp/C%20Sharp%20%E7%A8%8B%E5%BA%8F%E5%8D%95%E5%AE%9E%E4%BE%8B%E8%BF%90%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<h2 id="C-Sharp-单实例运行"><a href="#C-Sharp-单实例运行" class="headerlink" title="C Sharp 单实例运行"></a>C Sharp 单实例运行</h2><p>在学习中看到有人的代码在界面入口处有这样的内容。经过判断后，这个是用于让程序单例运行。觉得有的时候还是挺实用的。所以特此记录。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 单例运行</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ProcessExist</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> proc = Process.GetCurrentProcess().ProcessName;</span><br><span class="line">    Process[] processes = Process.GetProcessesByName(proc);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (processes.Length &gt; <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        Process p = Process.GetCurrentProcess();</span><br><span class="line">        <span class="built_in">int</span> n = <span class="number">0</span>;        <span class="comment">// assume the other process is at index 0</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// if this process id is OUR process ID...</span></span><br><span class="line">        <span class="keyword">if</span> (processes[<span class="number">0</span>].Id == p.Id)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// then the other process is at index 1 </span></span><br><span class="line">            n = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// get the window handle</span></span><br><span class="line">        IntPtr hWnd = processes[n].MainWindowHandle;</span><br><span class="line">        <span class="comment">// if iconic, we need to restore the window </span></span><br><span class="line">        <span class="keyword">if</span> (IsIconic(hWnd))</span><br><span class="line">        &#123;</span><br><span class="line">            ShowWindowAsync(hWnd, SW_RESTORE);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// bring it to the foreground </span></span><br><span class="line">        SetForegroundWindow(hWnd);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// it takes about 3s for program exit, so wait 3s</span></span><br><span class="line">        Thread.Sleep(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// if the other process is still running, exit our process </span></span><br><span class="line">        processes = Process.GetProcessesByName(proc);</span><br><span class="line">        <span class="keyword">if</span> (processes.Length &gt; <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Window.GetWindow(<span class="keyword">this</span>).Close();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="学习一下"><a href="#学习一下" class="headerlink" title="学习一下"></a>学习一下</h2>]]></content>
      
      
      <categories>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Log中文乱码</title>
      <link href="/2024/07/05/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/log%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/"/>
      <url>/2024/07/05/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/log%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h1 id="中文乱码"><a href="#中文乱码" class="headerlink" title="中文乱码"></a>中文乱码</h1><p>我的问题是log文件在现场的电脑上能够正常浏览。但是一旦把文件拷贝到自己的电脑中就会发现问题。英文还好，都能够正常的显示，但是所有的中文都是显示成为了一堆乱码。</p><p>之前也知道可能是编码的问题，尝试用UTF-8，UTF-16或者ANSI编码来打开都出现了错误。在放弃的时候找到了这个方案。</p><p><a href="https://blog.csdn.net/Junson142099/article/details/121357538">https://blog.csdn.net/Junson142099/article/details/121357538</a></p><p>根据他的描述该是旧电脑的TXT默认是以GB2312编码模式编辑保存的，但是新电脑是默认以UTF-8（中文版操作系统）或ANSI编码模式（英文版操作系统）编辑的，因为编码不一样所以导致中文乱码的产生。</p><p>他使用notepad++。不过我懒得下载，于是我选择使用sublime来打开这个文件，同时下载一个GBK相关的插件，用GBK的编码去打开，索性是一次性成功。</p><p>我记录一下解决方法，以免以后遗忘。</p>]]></content>
      
      
      <categories>
          
          <category> 问题解决 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Log中文乱码 </tag>
            
            <tag> 奇思妙想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PgAdmin 4 数据库导出失败</title>
      <link href="/2024/05/30/%E6%95%B0%E6%8D%AE%E5%BA%93/PgAdmin%204%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AF%BC%E5%87%BA%E5%A4%B1%E8%B4%A5/"/>
      <url>/2024/05/30/%E6%95%B0%E6%8D%AE%E5%BA%93/PgAdmin%204%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AF%BC%E5%87%BA%E5%A4%B1%E8%B4%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="PgAdmin-4-数据库导出失败"><a href="#PgAdmin-4-数据库导出失败" class="headerlink" title="PgAdmin 4 数据库导出失败"></a>PgAdmin 4 数据库导出失败</h1><p>因为某些原因我要把PG SQL数据库的中一个库备份到另外一台设备。</p><p>但是使用熟悉的Navicate进行数据库的导出导入的时候，在导入之后意外发生了。在查看表的信息的时候报错：</p><p><strong>错误: 作为一个表达式使用的子查询返回了多列</strong></p><p>因为Postgres SQL的特殊性。我怀疑是Navicat的问题。所以采用PgAdmin 4的备份还原方式：Backup与Restore来实现当前的内容。</p><p>但是意外还是发生了，在选择导出的时候，总是导出失败。类似下图的报错：</p><p><img src="https://i.sstatic.net/zChkC.png" alt="error message"></p><p>很荣幸我查找过程中我找到了解决方案：</p><p><a href="https://stackoverflow.com/questions/77462578/pgadmin-error-when-restoring-database-from-tar-file">https://stackoverflow.com/questions/77462578/pgadmin-error-when-restoring-database-from-tar-file</a></p><p>简单描述一下，大致就是PostgresSQL的版本选择错误了。更新路径中的版本内容的文件夹来解决这个问题.</p><p><strong>Steps: Select Databases &gt; File &gt; Preferences &gt; Paths &gt; Binary paths. Then edit to <code>C:\Program Files\PostgreSQL\15\bin.</code></strong></p><p><strong>You’ll need to use a different path if you’re on a different version of PostgreSQL.</strong></p><p>设置之后，导出就正常了。还原过程也很顺利。</p><p>还原之后的数据在使用Navicate查询时正常访问。完全没有任何问题。</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WinForm最小化托盘</title>
      <link href="/2024/05/29/WinForm/WinForm%E6%9C%80%E5%B0%8F%E5%8C%96%E6%89%98%E7%9B%98/"/>
      <url>/2024/05/29/WinForm/WinForm%E6%9C%80%E5%B0%8F%E5%8C%96%E6%89%98%E7%9B%98/</url>
      
        <content type="html"><![CDATA[<h1 id="WinForm最小化托盘"><a href="#WinForm最小化托盘" class="headerlink" title="WinForm最小化托盘"></a>WinForm最小化托盘</h1><p>虽然网上有很多教学。但是我觉得教学质量不一。所以我在此处还是重新整理一下。</p><h2 id="预先准备"><a href="#预先准备" class="headerlink" title="预先准备"></a>预先准备</h2><ul><li>winform环境</li><li>图标</li><li>带上脑子</li></ul><h2 id="实现方案"><a href="#实现方案" class="headerlink" title="实现方案"></a>实现方案</h2><p>核心原理：最小化的时候界面隐藏，退出最小化的时候界面恢复。</p><p>此处的示例是启动自动最小化，然后双击图标恢复原样。</p><p>Load时隐藏窗口</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MainForm_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//默认最小化</span></span><br><span class="line">    <span class="keyword">this</span>.WindowState = FormWindowState.Minimized;</span><br><span class="line">    <span class="comment">//任务栏取消图标</span></span><br><span class="line">    <span class="keyword">this</span>.ShowInTaskbar = <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">//隐藏窗口</span></span><br><span class="line">    <span class="keyword">this</span>.Hide();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>绑定窗体的大小改变事件</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 当窗体最小化时隐藏任务栏的图标只显示托盘区图标</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;sender&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;e&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MainForm_SizeChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (WindowState == FormWindowState.Minimized)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.ShowInTaskbar = <span class="literal">false</span>;</span><br><span class="line">        <span class="comment">//托盘区图标隐藏</span></span><br><span class="line">        notifyIcon1.Visible = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">this</span>.Hide();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.Activate();</span><br><span class="line">        <span class="comment">//任务栏区显示图标</span></span><br><span class="line">        <span class="keyword">this</span>.ShowInTaskbar = <span class="literal">true</span>;</span><br><span class="line">        <span class="comment">//托盘区图标隐藏</span></span><br><span class="line">        notifyIcon1.Visible = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>绑定notifyIcon1的双击事件</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">notifyIcon1_MouseDoubleClick</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">this</span>.Show();</span><br><span class="line">    <span class="keyword">this</span>.WindowState = FormWindowState.Normal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>notifyIcon1也可以在其contextMenuStrip属性中设置合适的contextMenuStrip1来实现在最小化的图标的时候可以右键点击退出程序。</p>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C Sharp Extension</title>
      <link href="/2024/04/23/C%20Sharp/C%20Sharp%20Exection/"/>
      <url>/2024/04/23/C%20Sharp/C%20Sharp%20Exection/</url>
      
        <content type="html"><![CDATA[<h1 id="Extension"><a href="#Extension" class="headerlink" title="Extension"></a>Extension</h1><p>It’s better than never!</p><p>拓展方法：一个我觉得很神奇的方法。这个的好处我最大的感受就是方便挂载各种乱七八糟的方法在原本类型上。实现面对不同情况的各种事情。</p><p>我对于这个的认识是。直接在原本的classA中额外添加了一个方法。虽然说是在静态方法中传入classA的对象，然后返回对应的结果也可以。但是还是这样直接附着在原本的对象上让别人看着更加直观。</p><h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><p>测试方法A</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">Test.Extension</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TestClass</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>拓展类</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">Test.Extension</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">MyExtension</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetMyAge</span>(<span class="params"><span class="keyword">this</span> TestClass myClass</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;my age is &quot;</span> + myClass.age;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行特点</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Test.Extension;</span><br><span class="line">TestClass testClass = <span class="keyword">new</span> TestClass();</span><br><span class="line">testClass.age = <span class="number">18</span>;</span><br><span class="line">Console.WriteLine(testClass.GetMyAge());</span><br></pre></td></tr></table></figure><p>其中有几个需要注意的点：</p><ol><li>执行时必须显式的引用拓展方法所在的命名空间此处时:Test.Extension</li><li>我在编写示例的时候时需要使用pulic的。不确定是否一定必须</li><li>我在查找资料时发现。拓展不一定是一个class。哪怕是一个接口也是可以的。</li></ol><h2 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h2><p>这个特点岂不是在多个类公用一个方法的时候有了很舒服的特点。</p><p>不过继承还是比不了原生。加入多个子类都是同一种方法，但是就是有个别甚者是独树一帜。如果是用抽象类，那样这极个别者还是可以通过override修改，但是这个静态类就不舒服了。</p><p>不过如果遇到使用封装好的类。在新的情况下需要额外的功能。那样就非常的舒服了。</p>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C Sharp log4net</title>
      <link href="/2024/04/23/C%20Sharp/C%20Sharp%20log4net/"/>
      <url>/2024/04/23/C%20Sharp/C%20Sharp%20log4net/</url>
      
        <content type="html"><![CDATA[<h1 id="Log4net"><a href="#Log4net" class="headerlink" title="Log4net"></a>Log4net</h1><p>这一篇就全部用来介绍这个C Sharp中的日志记录产品。</p><p>明确。C#本身是存在一个记录日志的功能的。但是生活中大家更乐意使用第三方的。所以第三方需要接管第一方的日志功能。</p><h2 id="记录流程"><a href="#记录流程" class="headerlink" title="记录流程"></a>记录流程</h2><p>这边简单说明一下log4net内部在记录时做了什么。</p><p>假设执行log4net.LogManager.GetLogger().Info(“hello world!”)</p><p><img src="https://cdn.jsdelivr.net/gh/xudingxie/DrawingBed/pictures/o_log4netProcess.png" alt="img"></p><p>流程顺序：</p><ol start="0"><li><p>你发布了个任务，记录数据hello world。</p></li><li><p>LogManager会首先会通过调用LogManager.GetLogger()寻找到对应的干活的工人(logger).</p></li></ol><p>​这个中间也有各种麻烦事情。首先工人(logger)只提供void Log(string callerFullName, Level level, object message, Exception t)。这方法不好用啊。那工人就有一个包工头（IloggerWrapper）。包工头（IloggerWrapper）只有一个方法就是获取Ilogger实例（包工头的作用就是用于找到工人嘛）。但是包工头能找到工人了，可是活从哪里来啊。所以包工头（IloggerWrapper）还要有标书（实现Ilog），凭证在市场里找活。这个标书（ILog）就是一个真正平时人们发布任务需要的东西。</p><p>​所以最后什么活还是可以到达工人手里。</p><ol start="2"><li>工人(logger)收到活了，但是他也会根据自己的配置，先看看这活我接不接，配置了info。那低于info的信息，比如debug我就不干。如果干，那就付出性能代价（一个函数调用和一个整数形式的级别比较）,重新包装任务。于是，工人Logger就创建一个任务包LoggingEvent，把你要做的事儿用任务包的形式包起来，以后的流程就都针对任务包LoggingEvent处理了。</li></ol><p>​任务包LoggingEvent里信息丰富，包含：时间代码位置、工人的名字、信息、线程名、用户名、信息、异常、上下文等等。 </p><ol start="3"><li>工人(logger)确定干活后。就是Appender(临时工)上场了。原来工人也偷懒，把活都给临时工去做。ConsoleAppender就去控制台，FileAppender就去文件。有几个临时工全看当时设置的时候这个活是几个人份的。全看最初的策划。</li></ol><table><thead><tr><th><strong>临时工</strong></th><th><strong>特长</strong></th></tr></thead><tbody><tr><td>ConsoleAppender</td><td>在控制台上写日志</td></tr><tr><td>ColoredConsoleAppender</td><td>ConsoleAppender的徒弟，青出于蓝，写出来的东东还可以带颜色，花花绿绿的，煞是好看</td></tr><tr><td>FileAppender</td><td>往文件里写日志</td></tr><tr><td>RollingFileAppender</td><td>往可滚动的文件里写日志，就是说它会按客户要求控制文件大小和数量，一个文件写满就帮你再开另一个接着写</td></tr><tr><td>ForwardingAppender</td><td>帮其他Appender传任务包的人，当然自己可以干一点雁过拔毛的事（做一些过滤的事情，比如说你要写的东东里包含不雅的词汇，它可以让你变得文明一些）</td></tr><tr><td>NetSendAppender</td><td>往Windows的Messager写日志</td></tr><tr><td>ASPNetTraceAppender</td><td>在Asp.Net的Trace里写日志</td></tr><tr><td>ADONetAppender</td><td>往数据库里写日志</td></tr><tr><td>EventLogAppender</td><td>往Windows事件里写日志</td></tr><tr><td>RemotingAppender</td><td>把日志转给另外的Remoting服务，如：一个专门的集中的日志服务器</td></tr><tr><td>SmtpAppender</td><td>通过邮件把日志发出去</td></tr><tr><td>SmtpPickupDirAppender</td><td>把日志包成邮件，发在指定目录，等待专门的Smtp代理去发送</td></tr><tr><td>TelnetAppender</td><td>把日志发到Telnet控制台</td></tr><tr><td>UdpAppender</td><td>通过UDP协议把日志发给另外的一个主机，或者组播给一些主机</td></tr></tbody></table><p>当然，你可以自己搞个临时工，比如发个短信什么的，可以取名叫MobilePagerAppender（<strong>从<strong><strong>AppenderSkeleton</strong></strong>继承</strong>），通过配置告诉log4net就行。 </p><ol start="4"><li><p>但是临时工也是有尊严的，只做合法的活。检查员Filter登场。这活最终究竟干不干，马仔还得通过Decide()再问问检查员们。注意，这里说得是“检查员们”，就是说所有在册的检查员都点头，这话才能干。如何让检查员在册，看配置文件，如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;FF&quot;</span> <span class="attr">type</span>=<span class="string">&quot;log4net.Appender.ForwardingAppender&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span> <span class="attr">type</span>=<span class="string">&quot;log4net.Filter.LevelRangeFilter&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;LevelMin&quot;</span> <span class="attr">value</span>=<span class="string">&quot;DEBUG&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;LevelMax&quot;</span> <span class="attr">value</span>=<span class="string">&quot;INFO&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;ConsoleAppender&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br></pre></td></tr></table></figure><p>雁过拔毛的临时工ForwardingAppender和检查员LevelRangeFilter配合工作，把大于Debug和小于Info的东东通知给马仔ConsoleAppender，让它写到控制台上。</p><p>检查员都有自己的关注的内容</p></li></ol><table><thead><tr><th>LevelMatchFilter</th><th>日志级别等于指定的级别才放行</th></tr></thead><tbody><tr><td>LevelRangeFilter</td><td>按日志级别范围做比较，可取区间内的放行。如必须大于Warn小于Info</td></tr><tr><td>StringMatchFilter</td><td>对你的言论进行检查，符合字符串比对条件的放行。如：必须包含“芝麻开门”的字符串才让写。比对条件可以是简单的带通配符的字符串，也可以是正则表达式（帅！）</td></tr><tr><td>PropertyFilter</td><td>StringMatchFilter的徒弟，对LoggingEvent的某个属性进行检查，符合字符串匹配条件才放行</td></tr><tr><td>LoggerMatchFilter</td><td>检查工头(Logger)的名字，如果是以指定的字符串开头的才放行。如：只要是姓“张”的工头发下来的任务包，都让过。</td></tr><tr><td>DenyAllFilter</td><td>这个检查员最黑，什么都不让过</td></tr></tbody></table><ol start="5"><li>检查员们点头后，这事就必须要干了。怎么干？客户要写的东东究竟用什么格式输出？这活由排版员Layout来干。下面是排版员的名单：</li></ol><table><thead><tr><th><strong>排版员</strong></th><th><strong>特长</strong></th></tr></thead><tbody><tr><td><a href="http://logging.apache.org/log4net/release/sdk/log4net.Layout.ExceptionLayout.html">ExceptionLayout</a></td><td>对LoggingEvent中的异常信息message进行排版</td></tr><tr><td><a href="http://logging.apache.org/log4net/release/sdk/log4net.Layout.PatternLayout.html">PatternLayout</a></td><td>最常用的排版员，通过一堆标识符来决定版式。如：”%date %-5level- %message” 表示要以此输出日志日期、级别（5个字母的宽度）、信息</td></tr><tr><td><a href="http://logging.apache.org/log4net/release/sdk/log4net.Layout.SimpleLayout.html">SimpleLayout</a></td><td>最简单的版式:  [level] - [message]</td></tr><tr><td><a href="http://logging.apache.org/log4net/release/sdk/log4net.Layout.XmlLayout.html">XmlLayout</a></td><td>把日志写到XML文件中去，写成一个Element</td></tr><tr><td><a href="http://logging.apache.org/log4net/release/sdk/log4net.Layout.XmlLayoutSchemaLog4j.html">XmlLayoutSchemaLog4j</a></td><td>把日志写到XML文件中去，写成一个Element，其格式需符合log4j对事件定义的DTD.</td></tr></tbody></table><p>排版员需要排版LoggingEvent的信息的字符串内容RenderedMessage，例如文章开头的“hello world!”。除了“hello world!”这样的字符串，信息message还可以是任意的对象。因此需要针对对象进行专门的排版，由Render（对象打印机）来干。<br>  你可以针对自己的信息对象搞Render。如打印订单信息的OrderRenader，一旦在订单处理中发生错误，把订单的主要信息打印出来，方便调试。<strong>别忘了：<strong><strong>OrderRenader</strong></strong>必须实现log4net.ObjectRenderer.IObjectRenderer****。</strong></p><ol start="6"><li><p>一切就绪，各个马仔就做最后的输出，有打印屏幕的，有写文件的，有在网络上发数据的，八仙过海，各显神通。 </p><p>  整个流程走完，相信我们接触到的Logger、Appender、Filter、Layout、Render都已不再陌生。log4net良好的实现了事件过滤、格式排版的高度扩展性和可配置性。<br>  log4net的这处理模式可以看作是一种扩展的Publish&#x2F;Subscribe模式，完全可以应用到我们自己的应用程序中去，比如说订单处理，可以实现对不同订单的过滤，实现不同的订单的提交目的地（写数据库、发邮件、短信通知等等）。</p><p>  最后，给出Repository、Appender、Filter、Layout、Render的关系简图：</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/xudingxie/DrawingBed/pictures/o_log4netObjectRelations.png" alt="img"></p><p>其中 核心是Repository是什么。</p><p>Repository可以说成基于一个log4net配置节创建的log4net容器，它根据log4net配置节的指示创建其他所有对象（Logger&#x2F;Appender&#x2F;Filter&#x2F;Layout等等）并保有他们的实例，随时为你所用。</p><p>​    每个Repository都有自己唯一的名字，如 root。</p><p>​    一般而言一个AppDomain(或者说一个进程)有一个Repository，该AppDomain下所有程序集Assembly都可以使用这个Repository。Repository需要实现ILoggerRepository，log4net中log4net.Repository.Hierarchy.Hierarchy就通过继承LoggerRepositorySkeleton实现了ILoggerRepository，它也是log4net中唯一实现ILoggerRepository的类。   </p><p><strong>Hierarchy</strong></p><p>​    那么Hierarchy是什么呢？</p><p>​    Hierarchy里存放着通过配置文件创建的所有Logger。由于Logger们是有父子关系的，因此Hierarchy通过继承树来存放所有的Logger。根节点就是我们熟悉的Root，如例：</p><table><thead><tr><th><strong>Logger</strong> <strong>名</strong></th><th><strong>日志级别</strong></th><th><strong>从父<strong><strong>Logger</strong></strong>继承的级别</strong></th></tr></thead><tbody><tr><td><em>root</em></td><td>INFO</td><td>INFO</td></tr><tr><td>my</td><td>none</td><td>INFO</td></tr><tr><td>my.net</td><td>DEBUG</td><td>DEBUG</td></tr><tr><td>my.net.tcp</td><td>none</td><td>DEBUG</td></tr></tbody></table><p>对应的配置文件就是</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">level</span> <span class="attr">value</span>=<span class="string">&quot;INFO&quot;</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;ConsoleAppender&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot; my&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;ConsoleAppender&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot; my.net &quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;ConsoleAppender&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot; my.net.tcp&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">filter</span> <span class="attr">type</span>=<span class="string">&quot;log4net.Filter.LevelRangeFilter&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;LevelMin&quot;</span> <span class="attr">value</span>=<span class="string">&quot;DEBUG&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;LevelMax&quot;</span> <span class="attr">value</span>=<span class="string">&quot;INFO&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot; ColoredConsoleAppender&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上例中，定义了三个Logger，都将存放在Hierarchy中。三个Logger形成继承关系，<strong>子<strong><strong>Logger</strong></strong>中未定义的属性都将从父Logger****中继承</strong>。</p><p>​    一旦你的应用程序通过log4net.LogManager.GetLogger()得到ILog（也就是logger的代理），那么将从Hierarchy的继承树中找出对应的Logger。</p><p>  log4net.LogManager.GetLogger() 得到 root<br>  log4net.LogManager.GetLogger(“my”) 得到 my logger  </p><p>  这样，你就可以为程序集中不同的命名空间甚至是某个类设置相应的log4net配置。如上例“my.net.tcp”就可以实现和其父Logger不同的日志行为。 </p><p><strong>使用不同的****Repository</strong></p><p>   如果你的应用程序中不同程序集需要使用不同<log4net>…</log4net>配置节，或者说需要使用不同的log4net配置文件，那就使用不同的Repository。</p><p>​    如在my.net.tcp程序集中，加入语句：[assembly: log4net.Config.DOMConfigurator(ConfigFile&#x3D;”my.net.tcp.config”, Watch&#x3D;true)]</p><p>  这样，你的就可以单独使用一份配置文件，创建一个新的Repository。</p><p>​    你也可以为自己的Repository命名： [assembly: log4net.Config.AliasRepository(“myrepository”)] </p><p><strong>如何共用****Repository</strong></p><p>   不作上面所说的所有改动，一个AppDomain中所有程序集都共用缺省的Repository，但是当需要共用另一个Repository时，就需要做一些工作。产生这样的需求包括：</p><ol><li>两个应用程序共用一份log4net配置，对日志做同样的处理</li><li>两个AppDomain需要共用一份log4net配置，对日志做同样的处理。特别时在运行时动态升级程序集时，这个需求显得尤其关键。</li></ol><p>首先记载log4net的程序集需要为Repository命名：[assembly: log4net.Config.AliasRepository(“myrepository”)]</p><p>后续的程序集，只需要引用它即可：[assembly: log4net.Config.Repository(“myrepository”)]</p><p> 这种方式下，两个AppDomain写同一份日志文件时，可能产生文件共享冲突的错误（文件已经被锁定，不能写），需要修改配置，在RollingLogFileAppender中加入lockingModel配置，如： </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;RollingLogFileAppender&quot;</span> <span class="attr">type</span>=<span class="string">&quot;log4net.Appender.RollingFileAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;File&quot;</span> <span class="attr">value</span>=<span class="string">&quot;log\\TaskScheduleServer.log&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">lockingModel</span> <span class="attr">type</span>=<span class="string">&quot;log4net.Appender.FileAppender+MinimalLock&quot;</span> /&gt;</span>   </span><br><span class="line"><span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="参考内容"><a href="#参考内容" class="headerlink" title="参考内容"></a>参考内容</h2><ol><li><p><a href="https://www.cnblogs.com/itrust/archive/2005/01/25/97225.html">log4net面面观之工作原理</a></p></li><li><p><a href="https://www.cnblogs.com/itrust/archive/2006/07/17/452895.html">log4net面面观之Repository</a></p></li><li><p><a href="https://www.cnblogs.com/zhuispeed/archive/2009/11/14/1603181.html">Log4net Logger模块 结构</a>这个看着很高端，但是看不懂</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C Sharp 尝试读取或写入受保护的内存。这通常指示其他内存已损坏</title>
      <link href="/2024/04/23/C%20Sharp/C%20Sharp%20%E5%B0%9D%E8%AF%95%E8%AF%BB%E5%8F%96%E6%88%96%E5%86%99%E5%85%A5%E5%8F%97%E4%BF%9D%E6%8A%A4%E7%9A%84%E5%86%85%E5%AD%98%E3%80%82%E8%BF%99%E9%80%9A%E5%B8%B8%E6%8C%87%E7%A4%BA%E5%85%B6%E4%BB%96%E5%86%85%E5%AD%98%E5%B7%B2%E6%8D%9F%E5%9D%8F/"/>
      <url>/2024/04/23/C%20Sharp/C%20Sharp%20%E5%B0%9D%E8%AF%95%E8%AF%BB%E5%8F%96%E6%88%96%E5%86%99%E5%85%A5%E5%8F%97%E4%BF%9D%E6%8A%A4%E7%9A%84%E5%86%85%E5%AD%98%E3%80%82%E8%BF%99%E9%80%9A%E5%B8%B8%E6%8C%87%E7%A4%BA%E5%85%B6%E4%BB%96%E5%86%85%E5%AD%98%E5%B7%B2%E6%8D%9F%E5%9D%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="尝试读取或写入受保护的内存。这通常指示其他内存已损坏"><a href="#尝试读取或写入受保护的内存。这通常指示其他内存已损坏" class="headerlink" title="尝试读取或写入受保护的内存。这通常指示其他内存已损坏"></a>尝试读取或写入受保护的内存。这通常指示其他内存已损坏</h1><p>已知有程序已经使用这个dll。所以进行反编译后。我重新调用dll执行方法时中出现这个问题。</p><p>目前开始排查原因。</p><p>经过在百度上屎里淘金，看到最直接的解释是：</p><p><code>尝试读取或写入受保护的内存。这通常指示其他内存已损坏</code></p><p>但是还是很迷茫：</p><p>可能的原因是哪些呢</p><table><thead><tr><th>原因</th><th>排查方案</th></tr></thead><tbody><tr><td>权限不足，管理员权限启动vs然后访问</td><td>vs关闭后，管理员权限执行启动，执行程序。</td></tr><tr><td>消息格式出错，导致指针访问不存在的地址</td><td>消息格式进行对照。错误更新后依旧存在异常</td></tr><tr><td>传值的时候使用指针，使用指针去访问内容，手动读取与释放</td><td>不太可能啊，别的也是这么执行的。</td></tr><tr><td></td><td></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>眼镜配镜</title>
      <link href="/2024/04/21/%E6%97%A5%E8%AE%B0/%E7%9C%BC%E9%95%9C%E9%85%8D%E9%95%9C/"/>
      <url>/2024/04/21/%E6%97%A5%E8%AE%B0/%E7%9C%BC%E9%95%9C%E9%85%8D%E9%95%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="眼镜配镜"><a href="#眼镜配镜" class="headerlink" title="眼镜配镜"></a>眼镜配镜</h1><p>自己买了个音频眼镜。需要重新配一副眼镜。然后做了一些功课。发现自己很多坑。下面我把我中间的功课归纳一下。</p><p>首先我把一些配镜的关键参数记录一下</p><ul><li>镜框：镜框尺寸 53口20-162<ul><li>镜片宽度53</li><li>中梁20</li><li>镜腿长度162</li></ul></li><li>镜片：学问更多了<ul><li>镜片类型：自由曲度，非球面，球面</li><li>折射率：1.5、1.67、1.74等</li><li>品牌：罗敦司得，蔡司，依视路，明月等。</li></ul></li><li>人：每个人要有自己的参数<ul><li>近视度数：毫无疑问，配镜的起点。</li><li>瞳距：眼睛的中心点—-和镜片宽度与中梁一起引申出<code>移心量</code></li><li>散光：配镜的一大原因。</li></ul></li></ul><p>下面是对于参数的思考。参数顺序按照我心中的需要理解的重要程度来实现。</p><h2 id="折射率"><a href="#折射率" class="headerlink" title="折射率"></a>折射率</h2><p>这个是商家最常表述的内容,不同价位往往差距也很大。可以说价格影响的第一个要素。所以第一个讲。</p><p>折射率越高只是越薄，不表示更轻，也不表示更清晰。</p><p>越薄，只能说体积会更小。但是1.74的镜片的密度会更大，甚至会更重。</p><p>我高度近视650+750。看功课基本只是推荐1.67,1.74自由曲面似乎在小框下可以是1.60。</p><h2 id="移心量"><a href="#移心量" class="headerlink" title="移心量"></a>移心量</h2><p>这个很多功课里提及的比较少。但是我觉得这个是选择困难症的福音。前面说过人.瞳距+镜框.镜片宽度+镜框.中梁&#x3D;&gt;镜片.移心量。计算公式:</p><p><strong>(人.瞳距+镜框.镜片宽度+镜框.中梁)&#x2F;2&#x3D;&#x3D;镜片.移心量</strong></p><p>一般来说3以内比较好。</p><p>人是固定的。那这样就可以筛选很大一批的镜框了。</p><p>那移心量小的优势是什么：</p><ol><li>镜片会更薄，在高度近视中甚至超过折射率的影响。因为眼镜片原本是中间薄，边缘厚的。然后留下镜框大小范围的内容。留哪些就和移心量有关了。移心量越小，越接近中间。所以更薄</li><li>折射率选择空间更大。既然你镜片更薄了，那岂不是可以选择低一档的折射率了。</li></ol><h2 id="品牌"><a href="#品牌" class="headerlink" title="品牌"></a>品牌</h2><p>不同品牌之间的差距也很大。其中基本就是一线国外大牌子：罗敦司得，蔡司，依视路，二线国内的明月等，三线：不建议考虑。</p><p>一线的品牌的内容也更贵。但是据说也会更加清晰。所以有能力上大牌。</p><p>据说蔡司的智睿，泽瑞系列有翻车风险。站烤麸的配镜非常不推荐。</p><h2 id="近视度数"><a href="#近视度数" class="headerlink" title="近视度数"></a>近视度数</h2><p>为什么把这个放到这里。因为第一时间没有想起来。我这边暂时是选择相信B站烤麸的配镜的文档来的。</p><p>里面比较详细，不多叙述。</p><h2 id="镜片类型"><a href="#镜片类型" class="headerlink" title="镜片类型"></a>镜片类型</h2><p>自由曲度&gt;非球面&gt;球面。</p><p>双面复合镜片：边缘扭曲，虚化，投诉率极高</p>]]></content>
      
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C Sharp yield</title>
      <link href="/2024/04/19/C%20Sharp/C%20Sharp%20yield/"/>
      <url>/2024/04/19/C%20Sharp/C%20Sharp%20yield/</url>
      
        <content type="html"><![CDATA[<h1 id="yield"><a href="#yield" class="headerlink" title="yield"></a>yield</h1><p>在复习语法的时候突然看到有这么一个东西。自己从来没有看到并且用过。此处用作自己进行简单的学习。</p><p>yield通常与return一起使用。我对于这个的理解就是</p><ul><li>用于异步返回。返回一个集合，集合中的元素会先行返回，不用常规的堵塞集合，等集合全部完成后返回。</li></ul><p>使用示例：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">internal</span> <span class="keyword">class</span> <span class="title">GameMove</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> IEnumerator _cross;</span><br><span class="line">    <span class="keyword">private</span> IEnumerator _cricle;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> _move = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="built_in">int</span> MaxMove = <span class="number">9</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">GameMove</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        _cross = Cross();</span><br><span class="line">        _cricle = Circle();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> IEnumerator <span class="title">Cross</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">$&quot;Cross 当前的步数<span class="subst">&#123;_move&#125;</span>&quot;</span> );</span><br><span class="line">            <span class="keyword">if</span> (++_move &gt;= MaxMove)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">yield</span> <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">yield</span> <span class="keyword">return</span> _cricle;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> IEnumerator <span class="title">Circle</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">$&quot;Cricle 当前的步数<span class="subst">&#123;_move&#125;</span>&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (++_move &gt;= MaxMove)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">yield</span> <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">yield</span> <span class="keyword">return</span> _cross;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>具体使用:</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> game = <span class="keyword">new</span> GameMove();</span><br><span class="line">IEnumerator enumerator = game.Cross();</span><br><span class="line"><span class="keyword">while</span> (enumerator.MoveNext())</span><br><span class="line">&#123;</span><br><span class="line">    enumerator = enumerator.Current <span class="keyword">as</span> IEnumerator;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出如下</span></span><br><span class="line"><span class="comment">//Cross 当前的步数0</span></span><br><span class="line"><span class="comment">//Cricle 当前的步数1</span></span><br><span class="line"><span class="comment">//Cross 当前的步数2</span></span><br><span class="line"><span class="comment">//Cricle 当前的步数3</span></span><br><span class="line"><span class="comment">//Cross 当前的步数4</span></span><br><span class="line"><span class="comment">//Cricle 当前的步数5</span></span><br><span class="line"><span class="comment">//Cross 当前的步数6</span></span><br><span class="line"><span class="comment">//Cricle 当前的步数7</span></span><br><span class="line"><span class="comment">//Cross 当前的步数8</span></span><br></pre></td></tr></table></figure><p>其中巧妙使用了enumerator与yield的特点。</p><p>利用enumerator.MoveNext()的惰性的特点。第一次执行会返回移动至第一个元素，然后返回true。此时在其中访问Current属性。也就是说执行Cross()方法。然后返回一个新的IEnumerator对象。并且将这个对象赋值给enumerator即将新的crircle对象返回给原来的内容。</p><p>其中yield目前来看只是帮助返回一个IEnumator的对象。但是实际上这个对象也是最常使用多个对象。</p><h2 id="yield返回的顺序"><a href="#yield返回的顺序" class="headerlink" title="yield返回的顺序"></a>yield返回的顺序</h2><p>来自官网的案例但是很好的说明的返回的顺序</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> numbers = ProduceEvenNumbers(<span class="number">5</span>);</span><br><span class="line">Console.WriteLine(<span class="string">&quot;Caller: about to iterate.&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="built_in">int</span> i <span class="keyword">in</span> numbers)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">$&quot;Caller: <span class="subst">&#123;i&#125;</span>&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">IEnumerable&lt;<span class="built_in">int</span>&gt; <span class="title">ProduceEvenNumbers</span>(<span class="params"><span class="built_in">int</span> upto</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;Iterator: start.&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt;= upto; i += <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;Iterator: about to yield <span class="subst">&#123;i&#125;</span>&quot;</span>);</span><br><span class="line">        <span class="keyword">yield</span> <span class="keyword">return</span> i;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;Iterator: yielded <span class="subst">&#123;i&#125;</span>&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;Iterator: end.&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Output:</span></span><br><span class="line"><span class="comment">// Caller: about to iterate.</span></span><br><span class="line"><span class="comment">// Iterator: start.</span></span><br><span class="line"><span class="comment">// Iterator: about to yield 0</span></span><br><span class="line"><span class="comment">// Caller: 0</span></span><br><span class="line"><span class="comment">// Iterator: yielded 0</span></span><br><span class="line"><span class="comment">// Iterator: about to yield 2</span></span><br><span class="line"><span class="comment">// Caller: 2</span></span><br><span class="line"><span class="comment">// Iterator: yielded 2</span></span><br><span class="line"><span class="comment">// Iterator: about to yield 4</span></span><br><span class="line"><span class="comment">// Caller: 4</span></span><br><span class="line"><span class="comment">// Iterator: yielded 4</span></span><br><span class="line"><span class="comment">// Iterator: end.</span></span><br></pre></td></tr></table></figure><p>根据输出就可以看出来。所有的返回都是立刻返回能被外部所捕获并且执行。然后继续原本迭代器继续生成剩下内容。</p><p>在这种情况下。如果遇见一些非常消耗时间的事情。比如说是机器学习等，这种方式可以大大的节约时间。</p><h2 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h2><p>虽然看着很美好。但是我觉得还是有很多的时候完全可以不使用这个yield的时候。比如前面所说的分布执行。我在最开始的遍历直接不反悔，而是建立一个Task，然后配合使用Task.ContinueWith()也完全可以实现本身的需求。</p>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C Sharp Task学习</title>
      <link href="/2024/04/15/C%20Sharp/C%20Sharp%20Task%E5%AD%A6%E4%B9%A0/"/>
      <url>/2024/04/15/C%20Sharp/C%20Sharp%20Task%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>C Sharp Task学习</p><p>学习使用Task</p><p>对于Task的理解初步的认识是开启一个异步的子线程来完成功能。比较常用的也就是<code>await Task.Delay(1000);</code>这种用于延迟的操作。但是后面在学习中发现这个功能应该非常强大。用好是嘎嘎好用的。可以非常好的简化逻辑。</p><p>接下来我就用这么几个方法来完善自己对于Task的学习。</p><h2 id="Task-Run-与Task-Start"><a href="#Task-Run-与Task-Start" class="headerlink" title="Task.Run(()&#x3D;&gt;{})与Task.Start()"></a>Task.Run(()&#x3D;&gt;{})与Task.Start()</h2><p>我为什么要把这两个放在一起。因为这是我最先接触到的Task的用法。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Task.Run(() =&gt; Console.WriteLine(<span class="string">&quot;132&quot;</span>));</span><br><span class="line">Task myTask = <span class="keyword">new</span> Task(() =&gt; &#123; Console.WriteLine(<span class="string">&quot;my new Task&quot;</span>); &#125;);</span><br><span class="line">myTask.Start();</span><br></pre></td></tr></table></figure><p>这两种都可以执行简单的异步方法。所以区别就是执行的实际。第一种run方法是立刻执行的。然而如果是使用返回的话就需要start的方法来手动触发执行。</p><h2 id="Task-Delay-1000-10"><a href="#Task-Delay-1000-10" class="headerlink" title="Task.Delay(1000*10)"></a>Task.Delay(1000*10)</h2><p>比较常用的延迟的方式。注意，需要配置await一起使用，才是在当前位置进行暂停。否则是另外开辟线程进行执行。是否可以用这个来判断是否超时啊。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Task.Delay(<span class="number">1000</span>*<span class="number">10</span>);</span><br></pre></td></tr></table></figure><h2 id="myTask-ContinueWith-t"><a href="#myTask-ContinueWith-t" class="headerlink" title="myTask.ContinueWith(t&#x3D;&gt;{})"></a>myTask.ContinueWith(t&#x3D;&gt;{})</h2><p>在myTask的任务完成之后执行。在出现异常结果后也可以使用t进行判断来执行不同的结果。</p><p>看到比较心动的方法。其中t是必要的参数，就是myTask这个Task类型的参数。</p><p>比较容易想到的应用就是在设备连接成功之后去读取相应的触发信号，这样在多线程的情况下就不用等待前面的内容全部完成了。并且逻辑更加清晰，便于理解。</p><p>特性：</p><ul><li>无论myTask任务被取消，成功，失败都会继续执行下面的任务。可以根据t的状态来执行不同的任务。</li><li>如果myTask任务已经完成，会立刻执行下个任务。如果没有完成，则会等待完成之后继续执行下面内容。似乎也可以理解成追加的任务是ok的。</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Task myTask = <span class="keyword">new</span> Task(() =&gt; &#123; Console.WriteLine(<span class="string">&quot;my new Task&quot;</span>); &#125;);</span><br><span class="line">myTask.Start();</span><br><span class="line">myTask.ContinueWith((task) =&gt; Console.WriteLine(<span class="string">&quot;continueWith&quot;</span>));</span><br></pre></td></tr></table></figure><h2 id="有返回值的Task"><a href="#有返回值的Task" class="headerlink" title="有返回值的Task&lt;T&gt;"></a>有返回值的Task&lt;T&gt;</h2><p>最常见的Task&lt;T&gt;的类型</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Task&lt;<span class="built_in">int</span>&gt; firstTask = Task.Run(() =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 这是第一个任务，返回一个整数值</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">5</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 在第一个任务完成后执行后续任务</span></span><br><span class="line"><span class="built_in">string</span> finalResult = <span class="keyword">await</span> firstTask.ContinueWith(prevTask =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 获取前一个任务的返回值</span></span><br><span class="line">    <span class="built_in">int</span> result = prevTask.Result;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用前一个任务的返回值进行一些操作</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">$&quot;Previous task returned: <span class="subst">&#123;result&#125;</span>&quot;</span>;</span><br><span class="line">&#125;);</span><br><span class="line">Console.WriteLine(finalResult); <span class="comment">// 输出: Previous task returned: 5</span></span><br></pre></td></tr></table></figure><p>在这个示例中出现了两种获取返回值的方式。<code>task.result</code>与<code>await task</code>这两种都是可以获取到正确的结果。并且result也是堵塞当前线程的。实际上在体验上与await一样阻塞当前线程。另外，如果在task中抛出了异常，那样result会使用<code>AggregateException</code>把原始的异常重新包装，但是await不会，他只是默默把自己添加到堆栈中。</p><p>综上<code>只推荐使用await</code>获取最后的结果的值。</p>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react 组件中点击切换状态</title>
      <link href="/2024/03/29/%E5%89%8D%E7%AB%AF/react/react%20%E7%BB%84%E4%BB%B6%E4%B8%AD%E7%82%B9%E5%87%BB%E5%88%87%E6%8D%A2%E7%8A%B6%E6%80%81/"/>
      <url>/2024/03/29/%E5%89%8D%E7%AB%AF/react/react%20%E7%BB%84%E4%BB%B6%E4%B8%AD%E7%82%B9%E5%87%BB%E5%88%87%E6%8D%A2%E7%8A%B6%E6%80%81/</url>
      
        <content type="html"><![CDATA[<h1 id="react-组件中点击切换状态"><a href="#react-组件中点击切换状态" class="headerlink" title="react 组件中点击切换状态"></a>react 组件中点击切换状态</h1><p>我实际上是看教程。然后发现自己的设计思路还是有待提升。</p><p><a href="https://zh-hans.react.dev/learn/reacting-to-input-with-state">官方教程</a></p><p>其中最后修复部分，第一个点击图片切换状态。</p><p>其中我的第一个想法是设置一个标志，分别表示对应的含义。然后每次执行这个方法就会切换一下图片及其背景状态。</p><p>但是由于并不是单一点击图片就切换，所以只好设置一个参数表示不同的设备，同时还要判断当前的点击位置。不过传入的方法并不能传入参数。只好说是多个方法来调用前面的方法，但是这样就很蠢。</p><p>这边的思路就很巧妙了。大家都是根据点击设置最终结果。那我只要在需要的时候阻止一下冒泡的结果就行了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">import &#123; useState &#125; from &#x27;react&#x27;;</span><br><span class="line"></span><br><span class="line">export default function Picture() &#123;</span><br><span class="line">  const [isActive, setIsActive] = useState(false);</span><br><span class="line">  if (isActive) &#123;</span><br><span class="line">    return (</span><br><span class="line">      &lt;div</span><br><span class="line">        className=&quot;background&quot;</span><br><span class="line">        onClick=&#123;() =&gt; setIsActive(false)&#125;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;img</span><br><span class="line">          className=&quot;picture picture--active&quot;</span><br><span class="line">          alt=&quot;Rainbow houses in Kampung Pelangi, Indonesia&quot;</span><br><span class="line">          src=&quot;https://i.imgur.com/5qwVYb1.jpeg&quot;</span><br><span class="line">          onClick=&#123;e =&gt; e.stopPropagation()&#125;</span><br><span class="line">        /&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">  return (</span><br><span class="line">    &lt;div className=&quot;background background--active&quot;&gt;</span><br><span class="line">      &lt;img</span><br><span class="line">        className=&quot;picture&quot;</span><br><span class="line">        alt=&quot;Rainbow houses in Kampung Pelangi, Indonesia&quot;</span><br><span class="line">        src=&quot;https://i.imgur.com/5qwVYb1.jpeg&quot;</span><br><span class="line">        onClick=&#123;() =&gt; setIsActive(true)&#125;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js Map语法</title>
      <link href="/2024/03/29/%E5%89%8D%E7%AB%AF/ts+js/js%20map%E8%AF%AD%E6%B3%95/"/>
      <url>/2024/03/29/%E5%89%8D%E7%AB%AF/ts+js/js%20map%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="js-Map语法"><a href="#js-Map语法" class="headerlink" title="js Map语法"></a>js Map语法</h1><p>我自己在生活中其实很少用这个语法。但是还是要学习的。</p><p>map语法我的理解就是类似一个遍历。特点就是传入一个列表传出还是一个列表。但是列表中的内容都是经过了某种处理。你可以遍历数组，并使用回调函数修改数组的每个元素。</p><p>比如你有一个需求遍历数组</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++)&#123;</span><br><span class="line">  arr[i] = arr[i] * <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr); <span class="comment">// [9, 12, 15, 18]</span></span><br></pre></td></tr></table></figure><p>实际上，你可以使用 <code>Array.map()</code> 方法来获得相同的结果，例如：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> modifiedArr = arr.<span class="title function_">map</span>(<span class="keyword">function</span>(<span class="params">element</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> element *<span class="number">3</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(modifiedArr); <span class="comment">// [9, 12, 15, 18]</span></span><br></pre></td></tr></table></figure><p>这两个的结果完全一致。但是如果在不想要改变原来的结果的时候，那map岂不是还省事新建的类型的痛苦。</p><p>至于其他用法似乎基本没有。所以不考虑吧</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows服务日志查看</title>
      <link href="/2024/03/28/C%20Sharp/C%20Sharp%20%20windows%E6%9C%8D%E5%8A%A1%E6%97%A5%E5%BF%97%E6%9F%A5%E7%9C%8B/"/>
      <url>/2024/03/28/C%20Sharp/C%20Sharp%20%20windows%E6%9C%8D%E5%8A%A1%E6%97%A5%E5%BF%97%E6%9F%A5%E7%9C%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="windows服务日志查看"><a href="#windows服务日志查看" class="headerlink" title="windows服务日志查看"></a>windows服务日志查看</h1><p>本文主要是因为有的时候会出现服务启动失败这种情况。那我们就需要去查找日志来判断具体是什么原因导致的服务启动失败。然后服务界面中又没有，所以写了这个文章。</p><p>最终目的都是查找到这个界面：</p><p><img src="https://cdn.jsdelivr.net/gh/xudingxie/DrawingBed/pictures/image-20240328162414211.png" alt="image-20240328162414211"></p><p>路径目前有两种。</p><ul><li>搜索进入</li><li>shell命令进入</li></ul><h2 id="搜索进入"><a href="#搜索进入" class="headerlink" title="搜索进入"></a>搜索进入</h2><p>点击搜索，输入计算机管理:</p><p><img src="https://cdn.jsdelivr.net/gh/xudingxie/DrawingBed/pictures/image-20240328162619242.png" alt="image-20240328162619242"></p><p>选择计算机管理。然后依据开头图像找到对应位置。</p><h2 id="shell命令进入"><a href="#shell命令进入" class="headerlink" title="shell命令进入"></a>shell命令进入</h2><ol><li><strong>打开事件查看器</strong>：在 Windows 中，按下 <code>Win + R</code> 组合键打开运行对话框，输入 <code>eventvwr.msc</code> 并按 Enter 键，这将打开事件查看器。</li><li><strong>选择日志</strong>：在事件查看器中，展开左侧的 “Windows 日志”，然后选择 “应用程序” 日志。</li><li><strong>过滤日志</strong>：在右侧窗格中，你可以看到应用程序日志的所有条目。你可以通过筛选器功能来过滤 PostgreSQL 的日志。右键单击 “应用程序” 日志并选择 “筛选当前日志”。在筛选器对话框中，你可以指定过滤条件，例如日志来源（PostgreSQL）或特定事件 ID。</li><li><strong>查看日志</strong>：筛选后，你将看到与 PostgreSQL 相关的日志条目。这些条目可能包括服务启动、停止和错误信息。你可以点击每个条目以查看详细信息。</li></ol>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C Sharp  windows服务状态获取</title>
      <link href="/2024/03/28/C%20Sharp/C%20Sharp%20%20windows%E6%9C%8D%E5%8A%A1%E7%8A%B6%E6%80%81%E8%8E%B7%E5%8F%96/"/>
      <url>/2024/03/28/C%20Sharp/C%20Sharp%20%20windows%E6%9C%8D%E5%8A%A1%E7%8A%B6%E6%80%81%E8%8E%B7%E5%8F%96/</url>
      
        <content type="html"><![CDATA[<h1 id="C-Sharp-windows服务状态获取"><a href="#C-Sharp-windows服务状态获取" class="headerlink" title="C Sharp  windows服务状态获取"></a>C Sharp  windows服务状态获取</h1><p>本文代码主要功能时辅助Windows服务的相关配套检测。</p><p>主要功能包含：</p><ul><li>服务状态的获取</li><li>服务的安装与卸载(需要管理员权限)</li><li>服务的启动与关闭(需要相应的权限)</li><li>杀死进程(部分情况下建议先杀死进程再启动服务)</li></ul><p>功能代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">ServiceHelper</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">Exist</span>(<span class="params"><span class="built_in">string</span> ServiceName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        ServiceController[] services = ServiceController.GetServices();</span><br><span class="line">        <span class="keyword">foreach</span> (ServiceController sc <span class="keyword">in</span> services)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (sc.ServiceName.ToLower() == ServiceName.ToLower())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Install</span>(<span class="params"><span class="built_in">string</span> ServiceFilePath</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">using</span> (AssemblyInstaller installer = <span class="keyword">new</span> AssemblyInstaller())</span><br><span class="line">        &#123;</span><br><span class="line">            installer.UseNewContext = <span class="literal">true</span>;</span><br><span class="line">            installer.Path = ServiceFilePath;</span><br><span class="line">            IDictionary savedState = <span class="keyword">new</span> Hashtable();</span><br><span class="line">            installer.Install(savedState);</span><br><span class="line">            installer.Commit(savedState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Uninstall</span>(<span class="params"><span class="built_in">string</span> ServiceFilePath</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">using</span> (AssemblyInstaller installer = <span class="keyword">new</span> AssemblyInstaller())</span><br><span class="line">        &#123;</span><br><span class="line">            installer.UseNewContext = <span class="literal">true</span>;</span><br><span class="line">            installer.Path = ServiceFilePath;</span><br><span class="line">            installer.Uninstall(<span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Start</span>(<span class="params"><span class="built_in">string</span> ServiceName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">using</span> (ServiceController controller = <span class="keyword">new</span> ServiceController(ServiceName))</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (controller.Status == ServiceControllerStatus.Stopped)</span><br><span class="line">            &#123;</span><br><span class="line">                controller.Start();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Stop</span>(<span class="params"><span class="built_in">string</span> ServiceName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">using</span> (ServiceController controller = <span class="keyword">new</span> ServiceController(ServiceName))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (controller.Status == ServiceControllerStatus.Running)</span><br><span class="line">            &#123;</span><br><span class="line">                controller.Stop();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Status <span class="title">GetStatus</span>(<span class="params"><span class="built_in">string</span> ServiceName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Exist(ServiceName))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">using</span> (ServiceController controller = <span class="keyword">new</span> ServiceController(ServiceName))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> (Status)((<span class="built_in">int</span>)controller.Status);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> Status.Inexistent;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">WaitForStatus</span>(<span class="params"><span class="built_in">string</span> ServiceName, Status status, <span class="built_in">int</span> TimeOutSeconds</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">using</span> (ServiceController controller = <span class="keyword">new</span> ServiceController(ServiceName))</span><br><span class="line">        &#123;</span><br><span class="line">            ServiceControllerStatus _status = (ServiceControllerStatus)((<span class="built_in">int</span>)status);</span><br><span class="line">            <span class="keyword">if</span> (TimeOutSeconds == <span class="number">-1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                controller.WaitForStatus(_status);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                controller.WaitForStatus(_status, TimeSpan.FromSeconds(TimeOutSeconds));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> controller.Status == _status;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 杀死进程</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;processName&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">KillDatabaseProcesses</span>(<span class="params"><span class="built_in">string</span> processName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 获取数据库相关进程</span></span><br><span class="line">        Process[] processes = Process.GetProcessesByName(processName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 杀死每个进程</span></span><br><span class="line">        <span class="keyword">foreach</span> (Process process <span class="keyword">in</span> processes)</span><br><span class="line">        &#123;</span><br><span class="line">            process.Kill();</span><br><span class="line">            process.WaitForExit(); <span class="comment">// 等待进程退出</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">enum</span> Status</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="comment">// 摘要:</span></span><br><span class="line">        <span class="comment">//     服务不存在。 该常数定义为 0x00000000。</span></span><br><span class="line">        Inexistent = <span class="number">0</span>,</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="comment">// 摘要:</span></span><br><span class="line">        <span class="comment">//     服务未运行。 这对应于 Win32 SERVICE_STOPPED 常数，该常数定义为 0x00000001。</span></span><br><span class="line">        Stopped = <span class="number">1</span>,</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="comment">// 摘要:</span></span><br><span class="line">        <span class="comment">//     服务正在启动。 这对应于 Win32 SERVICE_START_PENDING 常数，该常数定义为 0x00000002。</span></span><br><span class="line">        Starting = <span class="number">2</span>,</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="comment">// 摘要:</span></span><br><span class="line">        <span class="comment">//     服务正在停止。 这对应于 Win32 SERVICE_STOP_PENDING 常数，该常数定义为 0x00000003。</span></span><br><span class="line">        Stopping = <span class="number">3</span>,</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="comment">// 摘要:</span></span><br><span class="line">        <span class="comment">//     服务正在运行。 这对应于 Win32 SERVICE_RUNNING 常数，该常数定义为 0x00000004。</span></span><br><span class="line">        Running = <span class="number">4</span>,</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="comment">// 摘要:</span></span><br><span class="line">        <span class="comment">//     服务即将继续。 这对应于 Win32 SERVICE_CONTINUE_PENDING 常数，该常数定义为 0x00000005。</span></span><br><span class="line">        Resuming = <span class="number">5</span>,</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="comment">// 摘要:</span></span><br><span class="line">        <span class="comment">//     服务即将暂停。 这对应于 Win32 SERVICE_PAUSE_PENDING 常数，该常数定义为 0x00000006。</span></span><br><span class="line">        Pausing = <span class="number">6</span>,</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="comment">// 摘要:</span></span><br><span class="line">        <span class="comment">//     服务已暂停。 这对应于 Win32 SERVICE_PAUSED 常数，该常数定义为 0x00000007。</span></span><br><span class="line">        Paused = <span class="number">7</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TS-declare的使用</title>
      <link href="/2024/03/27/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/TS%E4%B8%AD%E7%9A%84declare/"/>
      <url>/2024/03/27/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/TS%E4%B8%AD%E7%9A%84declare/</url>
      
        <content type="html"><![CDATA[<h2 id="TS-declare的使用"><a href="#TS-declare的使用" class="headerlink" title="TS-declare的使用"></a>TS-declare的使用</h2><p>​<a href="https://typescript.p6p.net/typescript-tutorial/declare.html">参考文档，非常详细</a></p><p>​declare有的时候在面对引入js的库的使用，很多教程都是建议使用这个来帮助ts去识别出来这个引用。但是自己却对这个一知半解。所以现在完全理解一下。</p><p>​最常 见的应用就是在创建.vue文件的时候，ts在引入时不认识。就在env.d.ts文件中添加以下代码来明确这个解释</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span> <span class="variable language_">module</span> <span class="string">&#x27;*.vue&#x27;</span> &#123;</span><br><span class="line">    <span class="keyword">import</span> &#123; defineComponent &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title class_">Component</span>: <span class="title class_">ReturnType</span>&lt;<span class="keyword">typeof</span> defineComponent&gt;</span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Component</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li><code>declare module &#39;*.vue&#39;</code>: 这一行声明了一个模块，表示所有以 <code>.vue</code> 结尾的文件都是 Vue 单文件组件。</li><li><code>import &#123; defineComponent &#125; from &#39;vue&#39;</code>: 这一行导入了 Vue 中的 <code>defineComponent</code> 函数。<code>defineComponent</code> 是一个用于定义 Vue 组件的函数，它接受一个组件选项对象，并返回一个组件定义。</li><li><code>const Component: ReturnType&lt;typeof defineComponent&gt;</code>: 这一行定义了一个常量 <code>Component</code>，它的类型是 <code>defineComponent</code> 函数的返回类型。<code>ReturnType&lt;typeof defineComponent&gt;</code> 表示获取 <code>defineComponent</code> 函数的返回类型，也就是一个 Vue 组件的定义。</li><li><code>export default Component</code>: 这一行将 <code>Component</code> 导出为默认导出，这意味着在其他文件中导入这个模块时，默认导出的就是 <code>Component</code> 常量，即 Vue 组件的定义。</li></ol><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>declare 关键字用来告诉编译器，某个类型是存在的，可以在当前文件中使用。</p><p>它的主要作用，就是让当前文件可以使用其他文件声明的类型。举例来说，自己的脚本使用外部库定义的函数，编译器会因为不知道外部函数的类型定义而报错，这时就可以在自己的脚本里面使用<code>declare</code>关键字，告诉编译器外部函数的类型。这样的话，编译单个脚本就不会因为使用了外部类型而报错。</p><p>declare 关键字可以描述以下类型。</p><ul><li>变量（const、let、var 命令声明）</li><li>type 或者 interface 命令声明的类型</li><li>class</li><li>enum</li><li>函数（function）</li><li>模块（module）</li><li>命名空间（namespace）</li></ul><p>declare 关键字的重要特点是，它只是通知编译器某个类型是存在的，不用给出具体实现。比如，只描述函数的类型，不给出函数的实现，如果不使用<code>declare</code>，这是做不到的。</p><p>declare 只能用来描述已经存在的变量和数据结构，不能用来声明新的变量和数据结构。另外，所有 declare 语句都不会出现在编译后的文件里面。</p>]]></content>
      
      
      <categories>
          
          <category> TypeScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TypeScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ChatGPT Next Web</title>
      <link href="/2024/03/27/%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/ChatGPT%20Next%20Web/ChatGPT-Next-Web%20%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/"/>
      <url>/2024/03/27/%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0/ChatGPT%20Next%20Web/ChatGPT-Next-Web%20%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h1 id="文件学习"><a href="#文件学习" class="headerlink" title="文件学习"></a>文件学习</h1><p>​简单谈一下理解。自己成功部署了这个项目之后，对于项目有一个初步的猜测与理解。项目展现形式是一个网页，但是前后端并没有分离而是在一个文件中。大致是紧密结合的。</p><h2 id="文件结构"><a href="#文件结构" class="headerlink" title="文件结构"></a>文件结构</h2><ul><li>.husky<ul><li>……</li></ul></li><li>app<ul><li>……</li></ul></li><li>docs<ul><li>……</li></ul></li><li>public<ul><li>……</li></ul></li><li>scripts<ul><li>……</li></ul></li><li>src-tauri<ul><li>……</li></ul></li><li>.babeirc</li><li>.dockerignore</li><li>.eslintignore</li><li>.eslintrc.json</li><li>.gitgore—-git上传忽略的文件</li><li>.gitpod.yml</li><li>.lintagedrc.json</li><li>prettierrc.js</li><li>docker-compose.yml</li><li>Dockerfile</li><li>LICENSE</li><li>next.config.mjs</li><li>package.json</li><li>tsconfig.json</li><li>vercel.json</li><li>yarn.lock—实际运行版本</li></ul><h2 id="详细文件介绍"><a href="#详细文件介绍" class="headerlink" title="详细文件介绍"></a>详细文件介绍</h2><p>​文件的组成肯定与项目使用的技术息息相关。此处使用的技术我这边简单罗列以下如下。</p><ul><li><p>Next.js:React——应用开发基础框架</p></li><li><p>Docker————-服务器上快速部署</p></li><li><p>Vercel————-Vercel上快速部署</p></li><li><p>Babel————–转换JavaScript适配不同环境的插件</p></li><li><p>ESLint————-js&#x2F;ts代码格式检查插件</p></li><li><p>Prettier———–代码格式化工具</p></li><li><p>gitpod————-一个在线代码编码环境</p></li><li><p>lint-staged——–一个提交git的文件变更前，运行指定的代码检查工具</p></li><li><p>@svgr&#x2F;webpack——svg资源引入</p></li></ul><h3 id="babelrc"><a href="#babelrc" class="headerlink" title=".babelrc"></a>.babelrc</h3><p>​这个文件指定Babel的配置选项。Babel 是一个 JavaScript 编译器，它可以将新版本的 JavaScript 代码转换为向后兼容的代码，以便在不同的浏览器和环境中运行。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;presets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="comment">//这是一个数组，用于指定要使用的预设（presets）。预设是一组 Babel 插件的集合，它们被打包在一起以便于使用。</span></span><br><span class="line">    <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;next/babel&quot;</span><span class="punctuation">,</span><span class="comment">//这是一个预设数组中的一个元素，表示使用了名为 &quot;next/babel&quot; 的预设。&quot;next/babel&quot; 是 Next.js 框架提供的一个 Babel 预设，用于在 Next.js 项目中使用 Babel 进行代码转换。</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;preset-env&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="comment">//这是指定了 &quot;next/babel&quot; 预设中的一个选项，即 preset-env。preset-env 是 Babel 的一个预设，它根据目标环境自动确定需要使用的转换规则和插件。</span></span><br><span class="line">          <span class="attr">&quot;targets&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="comment">//这是 preset-env 的一个子选项，用于指定转换的目标环境。</span></span><br><span class="line">            <span class="attr">&quot;browsers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;&gt; 0.25%, not dead&quot;</span><span class="punctuation">]</span><span class="comment">//这是 targets 的一个子选项，用于指定目标浏览器。在这里，它指定了要支持的浏览器范围，即支持全球使用量大于 0.25% 的浏览器，但排除了已经停止维护的浏览器版本。</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>因此，这段 <code>.babelrc</code> 文件的内容告诉 Babel 使用 “next&#x2F;babel” 预设，并根据目标环境配置，将 JavaScript 代码转换为兼容性更好的版本，以确保在指定的浏览器范围内正常运行。</p><h3 id="dockerigore"><a href="#dockerigore" class="headerlink" title=".dockerigore"></a>.dockerigore</h3><p>这个是在构建Docker镜像时需要忽略的文件与目录。通常，<code>.dockerignore</code> 文件包含一些不必要的或敏感的文件，例如本地开发环境中的临时文件、日志文件、缓存文件等。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># local env files</span><br><span class="line">.env*.local</span><br><span class="line"></span><br><span class="line"># docker-compose env files</span><br><span class="line">.env</span><br><span class="line">*.key</span><br><span class="line">*.key.pub</span><br></pre></td></tr></table></figure><ol><li><code># local env files</code>: 这是一条注释，用于说明接下来的规则将忽略与本地环境相关的文件。</li><li><code>.env*.local</code>: 这个规则将忽略所有以<code>.env</code>开头且以<code>.local</code>结尾的文件。<code>.env</code>文件通常用于存储环境变量，在本地开发中可能会有一些针对特定开发者的配置，因此这里通过<code>.env*.local</code>规则来忽略它们。</li><li><code># docker-compose env files</code>: 这是另一个注释，说明接下来的规则将忽略与Docker Compose相关的环境文件。</li><li><code>.env</code>: 这个规则将忽略名为<code>.env</code>的文件，这可能是一个Docker Compose所使用的环境文件。</li><li><code>*.key</code>: 这个规则将忽略所有以<code>.key</code>结尾的文件，可能是一些密钥文件或私钥文件。</li><li><code>*.key.pub</code>: 这个规则将忽略所有以<code>.key.pub</code>结尾的文件，可能是一些密钥文件的公钥。</li></ol><p>总的来说，<code>.dockerignore</code>文件中的这些规则帮助确保了构建 Docker 镜像时不会将一些敏感或不必要的文件包含进去，从而保持了镜像的干净和高效。</p><h3 id="eslintigore"><a href="#eslintigore" class="headerlink" title=".eslintigore"></a>.eslintigore</h3><p>​文件用于指定哪些文件或目录应该被 ESLint 忽略，即不应该执行 ESLint 的代码检查。这对于排除第三方库、生成的文件、或者其他不需要进行代码质量检查的文件非常有用。在项目中使用 ESLint 时，你可以创建一个 <code>.eslintignore</code> 文件并列出需要被忽略的文件或目录的相对路径。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public/serviceWorker.js</span><br></pre></td></tr></table></figure><p>​这个就表示忽略指定<code>public/serviceWorker.js</code>文件。</p><h3 id="eslintre-json"><a href="#eslintre-json" class="headerlink" title=".eslintre.json"></a>.eslintre.json</h3><p><code>.eslintrc.json</code> 文件是用来配置 ESLint 工具的，ESLint 是一个用于 JavaScript 代码的静态代码分析工具，它可以帮助开发者发现代码中的问题，并且可以根据一系列的规则来强制执行代码风格的一致性。</p><p>​在 <code>.eslintrc.json</code> 文件中，你可以指定一些 ESLint 的配置选项，比如语法规则、代码风格规范、环境设置等。这样，当你运行 ESLint 来检查你的 JavaScript 代码时，它会根据这个配置文件来执行检查，并输出相应的警告或错误信息。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;extends&quot;</span><span class="punctuation">:</span> <span class="string">&quot;next/core-web-vitals&quot;</span><span class="punctuation">,</span><span class="comment">//这一行指定了该 ESLint 配置文件要继承的规则集。在这种情况下，它继承了一个叫做 next/core-web-vitals 的规则集。这意味着你的 ESLint 配置将基于该规则集进行设置，该规则集可能包含了与 Web Vitals 相关的规则或建议。这种扩展规则集的使用使得你可以轻松地遵循一组已经被定义好的规则，而无需手动地逐条进行配置。</span></span><br><span class="line">  <span class="attr">&quot;plugins&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;prettier&quot;</span><span class="punctuation">]</span><span class="comment">//这一行指定了要使用的插件。在这里，你指定了一个叫做 prettier 的插件。Prettier 是一个代码格式化工具，它可以帮助你自动格式化代码，使其符合预定义的规范。通过在 ESLint 配置中引入 Prettier 插件，你可以让 ESLint 在检查代码时与 Prettier 进行集成，以确保代码风格的一致性。</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>综合起来，这个 <code>.eslintrc.json</code> 文件告诉 ESLint 要基于 <code>next/core-web-vitals</code> 规则集进行配置，并且使用 Prettier 插件来帮助保持代码的一致格式。</p><p>实际上看来这个extends似乎是框架的内容。所以实际上有意义的就是指定prettier的这个插件。配合插件的配置文件一起对于代码风格进行一个统一的结果。</p><h3 id="prettierrc-js"><a href="#prettierrc-js" class="headerlink" title=".prettierrc.js"></a>.prettierrc.js</h3><p>我把这个文件提上来的原因就是这个和上面这个指定插件的一起配合的结果。一个代码检查，一个风格统一。相互配合，编写出无错，风格统一的代码。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">module.exports = <span class="punctuation">&#123;</span></span><br><span class="line">  printWidth<span class="punctuation">:</span> <span class="number">80</span><span class="punctuation">,</span><span class="comment">//指定代码行的最大长度，在达到这个长度时，Prettier 会尝试换行以确保代码的可读性。在这个示例中，代码行的最大长度被设置为 80 个字符。</span></span><br><span class="line">  tabWidth<span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span><span class="comment">//指定缩进时一个制表符(tab)等于多少个空格。在这个示例中，一个制表符(tab)被设置为等于 2 个空格。</span></span><br><span class="line">  useTabs<span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="comment">//: 指定是否使用制表符(tab)进行缩进，如果设置为 true，则使用制表符(tab)，如果设置为 false，则使用空格进行缩进。在这个示例中，设置为 false，即使用空格进行缩进。</span></span><br><span class="line">  semi<span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span><span class="comment">//指定是否在语句末尾添加分号。在这个示例中，设置为 true，即在语句末尾添加分号。</span></span><br><span class="line">  singleQuote<span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span><span class="comment">// 指定是否使用单引号还是双引号来表示字符串。在这个示例中，设置为 false，即使用双引号表示字符串。</span></span><br><span class="line">  trailingComma<span class="punctuation">:</span> &#x27;all&#x27;<span class="punctuation">,</span><span class="comment">//指定是否在对象或数组的最后一个元素后面添加逗号。在这个示例中，设置为 &#x27;all&#x27;，表示始终添加逗号。</span></span><br><span class="line">  bracketSpacing<span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span><span class="comment">//指定在对象字面量的括号内是否添加空格。在这个示例中，设置为 true，即在对象字面量的括号内添加空格。</span></span><br><span class="line">  arrowParens<span class="punctuation">:</span> &#x27;always&#x27;<span class="punctuation">,</span><span class="comment">//指定箭头函数的参数是否总是使用括号包裹。在这个示例中，设置为 &#x27;always&#x27;，表示始终使用括号包裹箭头函数的参数。</span></span><br><span class="line"><span class="punctuation">&#125;</span>;</span><br></pre></td></tr></table></figure><p>这样配置之后岂不美哉，直接自动帮自己进行修改。再也不用担心被组长骂代码长的丑了。</p><h3 id="gitpod-yml"><a href="#gitpod-yml" class="headerlink" title=".gitpod.yml"></a>.gitpod.yml</h3><p>.gitpod.yml文件是用于配置 Gitpod 开发环境的文件。Gitpod 是一个基于云的集成开发环境，它允许开发者在浏览器中轻松地进行编码、构建和测试他们的代码。通过.gitpod.yml文件，开发者可以定义项目的环境配置，包括所需的工具、依赖项、端口绑定等。这样，当开发者打开他们的项目时，Gitpod 将根据.gitpod.yml文件中定义的配置自动设置相应的开发环境。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># This configuration file was automatically generated by Gitpod.</span><br><span class="line"># Please adjust to your needs (see https://www.gitpod.io/docs/introduction/learn-gitpod/gitpod-yaml)</span><br><span class="line"># and commit this file to your remote git repository to share the goodness with others.</span><br><span class="line"></span><br><span class="line"># Learn more from ready-to-use templates: https://www.gitpod.io/docs/introduction/getting-started/quickstart</span><br><span class="line"></span><br><span class="line">tasks:</span><br><span class="line">  - init: yarn install &amp;&amp; yarn run dev</span><br><span class="line">    command: yarn run dev</span><br></pre></td></tr></table></figure><ol><li>注释：注释行以<code>#</code>开头，用于提供关于配置文件的说明和指导。</li><li>任务（tasks）：在这个配置中，只定义了一个任务。任务是指在 Gitpod 中执行的一个或多个命令序列。<ul><li><code>init</code>: 该任务的名称，通常用于初始化项目的环境。在这里，任务名称是”init”。</li><li><code>command</code>: 执行的命令序列。这个任务执行了两个命令：<code>yarn install</code> 和 <code>yarn run dev</code>。第一个命令 <code>yarn install</code> 用于安装项目所需的依赖项，而第二个命令 <code>yarn run dev</code> 则启动了开发服务器或者是其他开发环境。</li></ul></li></ol><p>这个配置的作用是，在 Gitpod 中打开项目时，自动执行 <code>yarn install</code> 安装依赖，然后启动开发服务器或者其他开发环境。如果需要对这个配置进行更改，可以根据注释中提供的链接和文档调整配置以满足具体的需求。</p><h3 id="lintstagedrc-json"><a href="#lintstagedrc-json" class="headerlink" title=".lintstagedrc.json"></a>.lintstagedrc.json</h3><p>配置 lint-staged 工具的。lint-staged 是一个工具，可以在提交 git 的文件变更前，运行指定的代码检查工具。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;./app/**/*.&#123;js,ts,jsx,tsx,json,html,css,md&#125;&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;eslint --fix&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;prettier --write&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><ul><li><code>&quot;./app/**/*.&#123;js,ts,jsx,tsx,json,html,css,md&#125;&quot;</code>: 这是一个 glob 模式，用来匹配文件路径。这里指定了所有 <code>./app/</code> 目录及其子目录下的文件，扩展名为 <code>.js</code>, <code>.ts</code>, <code>.jsx</code>, <code>.tsx</code>, <code>.json</code>, <code>.html</code>, <code>.css</code>, <code>.md</code> 的文件。这些文件将被 lint-staged 进行处理。</li><li><code>[&quot;eslint --fix&quot;, &quot;prettier --write&quot;]</code>: 这是 lint-staged 要运行的命令列表。对于匹配到的文件，lint-staged 将会依次执行这些命令。具体来说：<ul><li><code>eslint --fix</code>: 这个命令将会运行 ESLint 工具，并且使用 <code>--fix</code> 选项来尝试修复文件中的一些 ESLint 报告的问题。这有助于自动化代码风格的修正和规范化。</li><li><code>prettier --write</code>: 这个命令会运行 Prettier 工具，并使用 <code>--write</code> 选项来格式化匹配到的文件。Prettier 是一个代码格式化工具，能够自动格式化代码，使之符合统一的风格规范。</li></ul></li></ul><p>总的来说，这个配置的作用是在提交 git 变更前，对指定的文件进行 ESLint 和 Prettier 的检查和修正。这样可以确保提交的代码风格一致，并且符合团队约定的代码规范。</p><h3 id="docker-compose-yml"><a href="#docker-compose-yml" class="headerlink" title=".docker-compose.yml"></a>.docker-compose.yml</h3><p>文件是用于定义和运行基于Docker的应用程序的配置文件。它使用YAML（YAML Ain’t Markup Language）格式，并且通常包含了一个或多个服务的配置信息，这些服务可以一起组成一个完整的应用程序。</p><p>在<code>.docker-compose.yml</code>文件中，你可以定义诸如服务的名称、镜像、端口映射、环境变量、卷挂载等信息。这使得你可以在单个文件中轻松地描述一个包含多个容器的复杂应用程序的结构和配置。</p><p>通过简单的命令，比如<code>docker-compose up</code>，你可以根据<code>docker-compose.yml</code>文件的定义，启动、停止、重新构建整个应用程序，而无需手动操作每个容器。这种方式简化了多容器应用程序的管理和部署过程。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.9&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">chatgpt-next-web:</span></span><br><span class="line">    <span class="attr">profiles:</span> [ <span class="string">&quot;no-proxy&quot;</span> ]</span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">chatgpt-next-web</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">yidadaa/chatgpt-next-web</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">3000</span><span class="string">:3000</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">OPENAI_API_KEY=$OPENAI_API_KEY</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">GOOGLE_API_KEY=$GOOGLE_API_KEY</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">CODE=$CODE</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">BASE_URL=$BASE_URL</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">OPENAI_ORG_ID=$OPENAI_ORG_ID</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">HIDE_USER_API_KEY=$HIDE_USER_API_KEY</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DISABLE_GPT4=$DISABLE_GPT4</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ENABLE_BALANCE_QUERY=$ENABLE_BALANCE_QUERY</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DISABLE_FAST_LINK=$DISABLE_FAST_LINK</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">OPENAI_SB=$OPENAI_SB</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">chatgpt-next-web-proxy:</span></span><br><span class="line">    <span class="attr">profiles:</span> [ <span class="string">&quot;proxy&quot;</span> ]</span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">chatgpt-next-web-proxy</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">yidadaa/chatgpt-next-web</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">3000</span><span class="string">:3000</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">OPENAI_API_KEY=$OPENAI_API_KEY</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">GOOGLE_API_KEY=$GOOGLE_API_KEY</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">CODE=$CODE</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PROXY_URL=$PROXY_URL</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">BASE_URL=$BASE_URL</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">OPENAI_ORG_ID=$OPENAI_ORG_ID</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">HIDE_USER_API_KEY=$HIDE_USER_API_KEY</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DISABLE_GPT4=$DISABLE_GPT4</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ENABLE_BALANCE_QUERY=$ENABLE_BALANCE_QUERY</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DISABLE_FAST_LINK=$DISABLE_FAST_LINK</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">OPENAI_SB=$OPENAI_SB</span></span><br></pre></td></tr></table></figure><p>这个<code>.docker-compose.yml</code>文件定义了两个服务：<code>chatgpt-next-web</code> 和 <code>chatgpt-next-web-proxy</code>。</p><ol><li><code>chatgpt-next-web</code> 服务：<ul><li>容器名称为 <code>chatgpt-next-web</code>。</li><li>使用镜像 <code>yidadaa/chatgpt-next-web</code>。</li><li>将容器内部的端口 3000 映射到主机的端口 3000。</li><li>定义了一系列环境变量，包括 <code>OPENAI_API_KEY</code>、<code>GOOGLE_API_KEY</code>、<code>CODE</code>、<code>BASE_URL</code>、<code>OPENAI_ORG_ID</code>、<code>HIDE_USER_API_KEY</code>、<code>DISABLE_GPT4</code>、<code>ENABLE_BALANCE_QUERY</code>、<code>DISABLE_FAST_LINK</code>、<code>OPENAI_SB</code>。这些环境变量可能是应用程序运行所需的配置参数。</li></ul></li><li><code>chatgpt-next-web-proxy</code> 服务：<ul><li>容器名称为 <code>chatgpt-next-web-proxy</code>。</li><li>使用镜像 <code>yidadaa/chatgpt-next-web</code>。</li><li>同样将容器内部的端口 3000 映射到主机的端口 3000。</li><li>与 <code>chatgpt-next-web</code> 服务相比，这个服务定义了一个额外的环境变量 <code>PROXY_URL</code>。</li></ul></li></ol><p>在这两个服务中，你还可以看到 <code>profiles</code> 字段。这个字段定义了不同的配置文件，<code>no-proxy</code> 和 <code>proxy</code>。这些配置文件可能包含了针对不同环境的特定配置，比如代理设置。</p><p>大致推测，实际上是你根据需要使用第一个或者第二个服务。因为两个其实都是使用同一个image。区别就是配置上的代理参数。这样的推测也与官方界面中的docker的使用方式相同。</p><h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><p>Dockerfile 是一个文本文件，用于定义 Docker 容器镜像的构建过程。它包含了一系列的指令和参数，描述了如何从基础镜像构建一个新的容器镜像，并设置环境、安装软件等操作步骤。当你运行 <code>docker build</code> 命令时，Docker 将会根据 Dockerfile 中的指令逐步执行构建操作，最终生成一个可以运行的容器镜像。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">FROM</span> <span class="string">node:18-alpine</span> <span class="string">AS</span> <span class="string">base</span></span><br><span class="line"></span><br><span class="line"><span class="string">FROM</span> <span class="string">base</span> <span class="string">AS</span> <span class="string">deps</span></span><br><span class="line"></span><br><span class="line"><span class="string">RUN</span> <span class="string">apk</span> <span class="string">add</span> <span class="string">--no-cache</span> <span class="string">libc6-compat</span></span><br><span class="line"></span><br><span class="line"><span class="string">WORKDIR</span> <span class="string">/app</span></span><br><span class="line"></span><br><span class="line"><span class="string">COPY</span> <span class="string">package.json</span> <span class="string">yarn.lock</span> <span class="string">./</span></span><br><span class="line"></span><br><span class="line"><span class="string">RUN</span> <span class="string">yarn</span> <span class="string">config</span> <span class="string">set</span> <span class="string">registry</span> <span class="string">&#x27;https://registry.npmmirror.com/&#x27;</span></span><br><span class="line"><span class="string">RUN</span> <span class="string">yarn</span> <span class="string">install</span></span><br><span class="line"></span><br><span class="line"><span class="string">FROM</span> <span class="string">base</span> <span class="string">AS</span> <span class="string">builder</span></span><br><span class="line"></span><br><span class="line"><span class="string">RUN</span> <span class="string">apk</span> <span class="string">update</span> <span class="string">&amp;&amp;</span> <span class="string">apk</span> <span class="string">add</span> <span class="string">--no-cache</span> <span class="string">git</span></span><br><span class="line"></span><br><span class="line"><span class="string">ENV</span> <span class="string">OPENAI_API_KEY=&quot;&quot;</span></span><br><span class="line"><span class="string">ENV</span> <span class="string">GOOGLE_API_KEY=&quot;&quot;</span></span><br><span class="line"><span class="string">ENV</span> <span class="string">CODE=&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">WORKDIR</span> <span class="string">/app</span></span><br><span class="line"><span class="string">COPY</span> <span class="string">--from=deps</span> <span class="string">/app/node_modules</span> <span class="string">./node_modules</span></span><br><span class="line"><span class="string">COPY</span> <span class="string">.</span> <span class="string">.</span></span><br><span class="line"></span><br><span class="line"><span class="string">RUN</span> <span class="string">yarn</span> <span class="string">build</span></span><br><span class="line"></span><br><span class="line"><span class="string">FROM</span> <span class="string">base</span> <span class="string">AS</span> <span class="string">runner</span></span><br><span class="line"><span class="string">WORKDIR</span> <span class="string">/app</span></span><br><span class="line"></span><br><span class="line"><span class="string">RUN</span> <span class="string">apk</span> <span class="string">add</span> <span class="string">proxychains-ng</span></span><br><span class="line"></span><br><span class="line"><span class="string">ENV</span> <span class="string">PROXY_URL=&quot;&quot;</span></span><br><span class="line"><span class="string">ENV</span> <span class="string">OPENAI_API_KEY=&quot;&quot;</span></span><br><span class="line"><span class="string">ENV</span> <span class="string">GOOGLE_API_KEY=&quot;&quot;</span></span><br><span class="line"><span class="string">ENV</span> <span class="string">CODE=&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">COPY</span> <span class="string">--from=builder</span> <span class="string">/app/public</span> <span class="string">./public</span></span><br><span class="line"><span class="string">COPY</span> <span class="string">--from=builder</span> <span class="string">/app/.next/standalone</span> <span class="string">./</span></span><br><span class="line"><span class="string">COPY</span> <span class="string">--from=builder</span> <span class="string">/app/.next/static</span> <span class="string">./.next/static</span></span><br><span class="line"><span class="string">COPY</span> <span class="string">--from=builder</span> <span class="string">/app/.next/server</span> <span class="string">./.next/server</span></span><br><span class="line"></span><br><span class="line"><span class="string">EXPOSE</span> <span class="number">3000</span></span><br><span class="line"></span><br><span class="line"><span class="string">CMD</span> <span class="string">if</span> [ <span class="string">-n</span> <span class="string">&quot;$PROXY_URL&quot;</span> ]<span class="string">;</span> <span class="string">then</span> <span class="string">\</span></span><br><span class="line">    <span class="string">export</span> <span class="string">HOSTNAME=&quot;127.0.0.1&quot;;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">protocol=$(echo</span> <span class="string">$PROXY_URL</span> <span class="string">|</span> <span class="attr">cut -d:</span> <span class="string">-f1);</span> <span class="string">\</span></span><br><span class="line">    <span class="string">host=$(echo</span> <span class="string">$PROXY_URL</span> <span class="string">|</span> <span class="string">cut</span> <span class="string">-d/</span> <span class="string">-f3</span> <span class="string">|</span> <span class="attr">cut -d:</span> <span class="string">-f1);</span> <span class="string">\</span></span><br><span class="line">    <span class="string">port=$(echo</span> <span class="string">$PROXY_URL</span> <span class="string">|</span> <span class="attr">cut -d:</span> <span class="string">-f3);</span> <span class="string">\</span></span><br><span class="line">    <span class="string">conf=/etc/proxychains.conf;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">echo</span> <span class="string">&quot;strict_chain&quot;</span> <span class="string">&gt;</span> <span class="string">$conf;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">echo</span> <span class="string">&quot;proxy_dns&quot;</span> <span class="string">&gt;&gt;</span> <span class="string">$conf;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">echo</span> <span class="string">&quot;remote_dns_subnet 224&quot;</span> <span class="string">&gt;&gt;</span> <span class="string">$conf;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">echo</span> <span class="string">&quot;tcp_read_time_out 15000&quot;</span> <span class="string">&gt;&gt;</span> <span class="string">$conf;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">echo</span> <span class="string">&quot;tcp_connect_time_out 8000&quot;</span> <span class="string">&gt;&gt;</span> <span class="string">$conf;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">echo</span> <span class="string">&quot;localnet 127.0.0.0/255.0.0.0&quot;</span> <span class="string">&gt;&gt;</span> <span class="string">$conf;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">echo</span> <span class="string">&quot;localnet ::1/128&quot;</span> <span class="string">&gt;&gt;</span> <span class="string">$conf;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">echo</span> <span class="string">&quot;[ProxyList]&quot;</span> <span class="string">&gt;&gt;</span> <span class="string">$conf;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">echo</span> <span class="string">&quot;$protocol $host $port&quot;</span> <span class="string">&gt;&gt;</span> <span class="string">$conf;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">cat</span> <span class="string">/etc/proxychains.conf;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">proxychains</span> <span class="string">-f</span> <span class="string">$conf</span> <span class="string">node</span> <span class="string">server.js;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">else</span> <span class="string">\</span></span><br><span class="line">    <span class="string">node</span> <span class="string">server.js;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">fi</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个 Dockerfile 是用来构建一个基于 Node.js 的应用程序的 Docker 镜像。让我解释一下其中的每个部分：</p><ol><li><code>FROM node:18-alpine AS base</code>：这行指令从官方的 Node.js Alpine 镜像中作为基础开始构建，命名为 <code>base</code> 阶段。</li><li><code>FROM base AS deps</code>：这行指令基于上一个 <code>base</code> 阶段创建一个新的阶段 <code>deps</code>，用于安装应用程序的依赖项。</li><li><code>RUN apk add --no-cache libc6-compat</code>：在 <code>deps</code> 阶段安装了 <code>libc6-compat</code>，这是为了确保在 Alpine Linux 上兼容 glibc 的库。</li><li><code>WORKDIR /app</code>：设置工作目录为 <code>/app</code>。</li><li><code>COPY package.json yarn.lock ./</code>：将本地的 <code>package.json</code> 和 <code>yarn.lock</code> 文件复制到容器中的工作目录。</li><li><code>RUN yarn config set registry &#39;https://registry.npmmirror.com/&#39;</code>：设置 Yarn 的 registry 为指定的镜像地址。</li><li><code>RUN yarn install</code>：使用 Yarn 安装依赖。</li><li><code>FROM base AS builder</code>：基于 <code>base</code> 阶段创建一个新的阶段 <code>builder</code>，用于构建应用程序。</li><li><code>RUN apk update &amp;&amp; apk add --no-cache git</code>：更新 apk 仓库并安装 git，用于拉取代码或依赖。</li><li><code>ENV OPENAI_API_KEY=&quot;&quot;</code>、<code>ENV GOOGLE_API_KEY=&quot;&quot;</code>、<code>ENV CODE=&quot;&quot;</code>：设置环境变量。</li><li><code>COPY --from=deps /app/node_modules ./node_modules</code>：从 <code>deps</code> 阶段复制依赖到 <code>builder</code> 阶段。</li><li><code>COPY . .</code>：复制本地项目代码到容器中。</li><li><code>RUN yarn build</code>：构建项目。</li><li><code>FROM base AS runner</code>：基于 <code>base</code> 阶段创建一个新的阶段 <code>runner</code>，用于运行应用程序。</li><li><code>RUN apk add proxychains-ng</code>：安装 proxychains-ng 用于代理网络请求。</li><li><code>ENV PROXY_URL=&quot;&quot;</code>、<code>ENV OPENAI_API_KEY=&quot;&quot;</code>、<code>ENV GOOGLE_API_KEY=&quot;&quot;</code>、<code>ENV CODE=&quot;&quot;</code>：设置环境变量。</li><li><code>COPY --from=builder /app/public ./public</code>、<code>COPY --from=builder /app/.next/standalone ./</code>、<code>COPY --from=builder /app/.next/static ./.next/static</code>、<code>COPY --from=builder /app/.next/server ./.next/server</code>：从 <code>builder</code> 阶段复制构建好的文件到 <code>runner</code> 阶段。</li><li><code>EXPOSE 3000</code>：声明容器将监听的端口。</li><li><code>CMD ...</code>：定义容器启动时执行的命令。这里使用了一个条件语句，如果设置了 <code>PROXY_URL</code> 环境变量，则使用 <code>proxychains</code> 代理启动 <code>node server.js</code>，否则直接启动 <code>node server.js</code>。</li></ol><h3 id="LICENSE"><a href="#LICENSE" class="headerlink" title="LICENSE"></a>LICENSE</h3><p>就是项目的开源协议内容</p><h3 id="next-config-mjs"><a href="#next-config-mjs" class="headerlink" title="next.config.mjs"></a>next.config.mjs</h3><p>配置Next.js应用程序的默认配置文件之一。用于配置构建过程，webpack行为，路由和一些其他应用程序配置。而 <code>.mjs</code> 扩展名表示这是一个 ES module 文件，这意味着你可以在其中使用 ES 模块语法。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> webpack <span class="keyword">from</span> <span class="string">&quot;webpack&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mode = process.<span class="property">env</span>.<span class="property">BUILD_MODE</span> ?? <span class="string">&quot;standalone&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;[Next] build mode&quot;</span>, mode);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> disableChunk = !!process.<span class="property">env</span>.<span class="property">DISABLE_CHUNK</span> || mode === <span class="string">&quot;export&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;[Next] build with chunk: &quot;</span>, !disableChunk);</span><br><span class="line"></span><br><span class="line"><span class="comment">/** <span class="doctag">@type</span> &#123;<span class="type">import(&#x27;next&#x27;).NextConfig</span>&#125; */</span></span><br><span class="line"><span class="keyword">const</span> nextConfig = &#123;</span><br><span class="line">  <span class="title function_">webpack</span>(<span class="params">config</span>) &#123;</span><br><span class="line">    config.<span class="property">module</span>.<span class="property">rules</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">      <span class="attr">test</span>: <span class="regexp">/\.svg$/</span>,</span><br><span class="line">      <span class="attr">use</span>: [<span class="string">&quot;@svgr/webpack&quot;</span>],</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (disableChunk) &#123;</span><br><span class="line">      config.<span class="property">plugins</span>.<span class="title function_">push</span>(</span><br><span class="line">        <span class="keyword">new</span> webpack.<span class="property">optimize</span>.<span class="title class_">LimitChunkCountPlugin</span>(&#123; <span class="attr">maxChunks</span>: <span class="number">1</span> &#125;),</span><br><span class="line">      );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    config.<span class="property">resolve</span>.<span class="property">fallback</span> = &#123;</span><br><span class="line">      <span class="attr">child_process</span>: <span class="literal">false</span>,</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> config;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">output</span>: mode,</span><br><span class="line">  <span class="attr">images</span>: &#123;</span><br><span class="line">    <span class="attr">unoptimized</span>: mode === <span class="string">&quot;export&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">experimental</span>: &#123;</span><br><span class="line">    <span class="attr">forceSwcTransforms</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">CorsHeaders</span> = [</span><br><span class="line">  &#123; <span class="attr">key</span>: <span class="string">&quot;Access-Control-Allow-Credentials&quot;</span>, <span class="attr">value</span>: <span class="string">&quot;true&quot;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">key</span>: <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="attr">value</span>: <span class="string">&quot;*&quot;</span> &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">key</span>: <span class="string">&quot;Access-Control-Allow-Methods&quot;</span>,</span><br><span class="line">    <span class="attr">value</span>: <span class="string">&quot;*&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">key</span>: <span class="string">&quot;Access-Control-Allow-Headers&quot;</span>,</span><br><span class="line">    <span class="attr">value</span>: <span class="string">&quot;*&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">key</span>: <span class="string">&quot;Access-Control-Max-Age&quot;</span>,</span><br><span class="line">    <span class="attr">value</span>: <span class="string">&quot;86400&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (mode !== <span class="string">&quot;export&quot;</span>) &#123;</span><br><span class="line">  nextConfig.<span class="property">headers</span> = <span class="title function_">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">source</span>: <span class="string">&quot;/api/:path*&quot;</span>,</span><br><span class="line">        <span class="attr">headers</span>: <span class="title class_">CorsHeaders</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    ];</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  nextConfig.<span class="property">rewrites</span> = <span class="title function_">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> ret = [</span><br><span class="line">      <span class="comment">// adjust for previous version directly using &quot;/api/proxy/&quot; as proxy base route</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">source</span>: <span class="string">&quot;/api/proxy/v1/:path*&quot;</span>,</span><br><span class="line">        <span class="attr">destination</span>: <span class="string">&quot;https://api.openai.com/v1/:path*&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">source</span>: <span class="string">&quot;/api/proxy/google/:path*&quot;</span>,</span><br><span class="line">        <span class="attr">destination</span>: <span class="string">&quot;https://generativelanguage.googleapis.com/:path*&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">source</span>: <span class="string">&quot;/api/proxy/openai/:path*&quot;</span>,</span><br><span class="line">        <span class="attr">destination</span>: <span class="string">&quot;https://api.openai.com/:path*&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">source</span>: <span class="string">&quot;/google-fonts/:path*&quot;</span>,</span><br><span class="line">        <span class="attr">destination</span>: <span class="string">&quot;https://fonts.googleapis.com/:path*&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">source</span>: <span class="string">&quot;/sharegpt&quot;</span>,</span><br><span class="line">        <span class="attr">destination</span>: <span class="string">&quot;https://sharegpt.com/api/conversations&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">beforeFiles</span>: ret,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> nextConfig;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li><code>import webpack from &quot;webpack&quot;;</code>：这行导入了 webpack 模块，用于在后续的配置中使用 webpack 的一些功能。</li><li><code>const mode = process.env.BUILD_MODE ?? &quot;standalone&quot;;</code>：这行定义了一个变量 <code>mode</code>，它根据环境变量 <code>BUILD_MODE</code> 的值来确定构建模式。如果环境变量未设置，则默认为 “standalone” 模式。</li><li><code>console.log(&quot;[Next] build mode&quot;, mode);</code>：这行输出当前构建模式到控制台，以便在构建时了解正在使用的模式。</li><li><code>const disableChunk = !!process.env.DISABLE_CHUNK || mode === &quot;export&quot;;</code>：这行定义了一个变量 <code>disableChunk</code>，它用于确定是否禁用代码分块。如果环境变量 <code>DISABLE_CHUNK</code> 被设置为 <code>true</code> 或者当前模式是 “export”，则禁用代码分块。</li><li><code>const nextConfig = &#123; ... &#125;</code>：这段代码定义了一个包含 Next.js 配置的对象。其中包括了 webpack 配置、输出配置、图片优化配置和一些实验性特性配置。</li><li><code>webpack(config) &#123; ... &#125;</code>：这是对 webpack 配置的修改。它添加了一个针对 <code>.svg</code> 文件的 loader，并根据 <code>disableChunk</code> 的值来确定是否使用 <code>LimitChunkCountPlugin</code> 插件来限制代码分块。</li><li><code>output: mode</code>：这行定义了输出配置，根据 <code>mode</code> 变量的值来确定输出的目标。</li><li><code>images: &#123; ... &#125;</code>：这是图片优化配置，根据 <code>mode</code> 变量来决定是否对图片进行优化。</li><li><code>experimental: &#123; ... &#125;</code>：这是实验性特性配置，启用了一些实验性功能，例如强制使用 SWC 转换。</li><li><code>const CorsHeaders = [...]</code>：这段代码定义了一组 CORS 头部，用于设置跨域资源共享。</li><li><code>if (mode !== &quot;export&quot;) &#123; ... &#125;</code>：这是一个条件语句，当模式不是 “export” 时执行一些配置。在这里，它设置了一些 API 路由的头部和重写规则。</li><li><code>export default nextConfig;</code>：最后，使用 <code>export default</code> 导出了 <code>nextConfig</code> 对象，使其可以被 Next.js 应用程序读取和应用。</li></ol><p>总的来看，其实主要是对于SVG文件使用@svgr&#x2F;webpack插件将其通过React组件引入。针对静态页面的优化导出。</p><h3 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h3><p>各种插件与安装包的版本等</p><h3 id="tsconfig-json"><a href="#tsconfig-json" class="headerlink" title="tsconfig.json"></a>tsconfig.json</h3><p> TypeScript 项目中的配置文件。TypeScript 是一种由微软开发的编程语言，它是 JavaScript 的超集，提供了静态类型检查等额外功能。<code>tsconfig.json</code> 文件用于配置 TypeScript 编译器的行为和项目的编译选项。通过编辑这个文件，你可以指定诸如编译输出目录、源文件路径、目标 JavaScript 版本、是否启用严格模式等编译相关的设置。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;target&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ES2015&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;lib&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;dom&quot;</span><span class="punctuation">,</span> <span class="string">&quot;dom.iterable&quot;</span><span class="punctuation">,</span> <span class="string">&quot;esnext&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;allowJs&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipLibCheck&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;strict&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;forceConsistentCasingInFileNames&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;noEmit&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;esModuleInterop&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;module&quot;</span><span class="punctuation">:</span> <span class="string">&quot;esnext&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;moduleResolution&quot;</span><span class="punctuation">:</span> <span class="string">&quot;node&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;resolveJsonModule&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;isolatedModules&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;jsx&quot;</span><span class="punctuation">:</span> <span class="string">&quot;preserve&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;incremental&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;plugins&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;next&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;paths&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;@/*&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;./*&quot;</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;include&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;next-env.d.ts&quot;</span><span class="punctuation">,</span> <span class="string">&quot;**/*.ts&quot;</span><span class="punctuation">,</span> <span class="string">&quot;**/*.tsx&quot;</span><span class="punctuation">,</span> <span class="string">&quot;.next/types/**/*.ts&quot;</span><span class="punctuation">,</span> <span class="string">&quot;app/calcTextareaHeight.ts&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;exclude&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;node_modules&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><ol><li><code>&quot;compilerOptions&quot;</code>：这个对象包含了 TypeScript 编译器的各种选项。<ul><li><code>&quot;target&quot;: &quot;ES2015&quot;</code>：指定编译后的 JavaScript 代码目标版本为 ES2015。</li><li><code>&quot;lib&quot;: [&quot;dom&quot;, &quot;dom.iterable&quot;, &quot;esnext&quot;]</code>：指定编译时需要包含的库文件，这里包括 DOM 标准库、DOM 迭代库和 ESNext 标准库。</li><li><code>&quot;allowJs&quot;: true</code>：允许编译器编译 JavaScript 文件。</li><li><code>&quot;skipLibCheck&quot;: true</code>：跳过编译器对声明文件（<code>.d.ts</code> 文件）的类型检查。</li><li><code>&quot;strict&quot;: true</code>：开启所有严格类型检查选项。</li><li><code>&quot;forceConsistentCasingInFileNames&quot;: true</code>：要求文件名的大小写一致。</li><li><code>&quot;noEmit&quot;: true</code>：不生成输出文件。</li><li><code>&quot;esModuleInterop&quot;: true</code>：启用 ECMAScript 模块系统的互操作性。</li><li><code>&quot;module&quot;: &quot;esnext&quot;</code>：指定生成的模块系统类型为 ESNext。</li><li><code>&quot;moduleResolution&quot;: &quot;node&quot;</code>：指定模块解析策略为 Node.js 样式解析。</li><li><code>&quot;resolveJsonModule&quot;: true</code>：允许导入 JSON 格式的模块。</li><li><code>&quot;isolatedModules&quot;: true</code>：开启单独编译模式，每个文件将被视为单独的模块。</li><li><code>&quot;jsx&quot;: &quot;preserve&quot;</code>：指定 JSX 代码生成方式为保留原样。</li><li><code>&quot;incremental&quot;: true</code>：启用增量编译，提高编译性能。</li><li><code>&quot;plugins&quot;</code>：指定 TypeScript 插件，这里使用了一个名为 “next” 的插件。</li><li><code>&quot;paths&quot;: &#123; &quot;@/*&quot;: [&quot;./*&quot;] &#125;</code>：指定模块解析的路径映射，将所有以 <code>@/</code> 开头的模块路径映射到当前目录下。</li></ul></li><li><code>&quot;include&quot;</code>：指定要包含在编译中的文件或目录列表。<ul><li><code>&quot;next-env.d.ts&quot;</code>：指定了一个声明文件。</li><li><code>&quot;**/*.ts&quot;</code> 和 <code>&quot;**/*.tsx&quot;</code>：匹配所有的 TypeScript 文件。</li><li><code>&quot;.next/types/**/*.ts&quot;</code>：匹配 <code>.next/types/</code> 目录下的所有 TypeScript 文件。</li><li><code>&quot;app/calcTextareaHeight.ts&quot;</code>：指定了一个特定的 TypeScript 文件。</li></ul></li><li><code>&quot;exclude&quot;</code>：指定不包含在编译中的文件或目录列表。<ul><li><code>&quot;node_modules&quot;</code>：排除 <code>node_modules</code> 目录下的所有文件。</li></ul></li></ol><p>这个配置文件告诉 TypeScript 编译器如何处理项目中的 TypeScript 文件以及如何生成 JavaScript 代码。</p><p>主要的特点。我觉得是有一个include，这表示指定中的ts文件会被解释成js文件，然后最终被webpack打包进最后结果。但是这个被放在根目录，其实也不需要的。因为默会搜索统计目录以及子目录下的ts文件。</p><h3 id="vercel-json"><a href="#vercel-json" class="headerlink" title=".vercel.json"></a>.vercel.json</h3><p>是 Vercel 平台的配置文件，用于指定项目的配置选项。Vercel 是一个用于部署和托管静态网站、服务端代码和 Serverless 函数的平台，<code>vercel.json</code> 文件可以帮助你配置项目在 Vercel 上的行为。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;github&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;silent&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>“github” 配置部分用于配置与 GitHub 仓库集成时的行为。选项 “silent” 设置为 <code>true</code> 表示在与 GitHub 仓库集成时不显示任何输出，即使有警告或错误也不会显示。这可以在部署过程中抑制不必要的输出信息，以提高部署过程的可读性和清晰度。</p>]]></content>
      
      
      <categories>
          
          <category> 项目学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubantu部署ChatGPTNextWeb</title>
      <link href="/2024/03/18/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/Ubantu%20%E9%83%A8%E7%BD%B2ChatGPTNextWeb/"/>
      <url>/2024/03/18/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/Ubantu%20%E9%83%A8%E7%BD%B2ChatGPTNextWeb/</url>
      
        <content type="html"><![CDATA[<h1 id="Ubantu部署ChatGPTNextWeb"><a href="#Ubantu部署ChatGPTNextWeb" class="headerlink" title="Ubantu部署ChatGPTNextWeb"></a>Ubantu部署ChatGPTNextWeb</h1><p>官网的操作很简单。但是我的部署过程比较艰辛。</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li>Ubuntu 9.4.0-1ubuntu1~20.04.2</li><li>阿里云</li></ul><h2 id="部署过程"><a href="#部署过程" class="headerlink" title="部署过程"></a>部署过程</h2><ol><li>布置Clash环境</li><li>安装Docker</li><li>安装Nginx(建议安装)</li><li>设置安全组与关闭防火墙</li></ol><h3 id="Clash环境的布置"><a href="#Clash环境的布置" class="headerlink" title="Clash环境的布置"></a>Clash环境的布置</h3><p>因为众所周知的原因。部分国家的人在隐藏自身IP保护自己的方面比较擅长。秉承着师夷长技以制夷的思路，我们也要保护好自己。教程在我另外的文章中。</p><h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h3><p>安装部分参考<a href="https://www.runoob.com/docker/centos-docker-install.html">菜鸟教程</a>与<a href="https://github.com/ChatGPTNextWeb/ChatGPT-Next-Web">chatGPT next web</a>。</p><p>首先由docker安装脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span><br></pre></td></tr></table></figure><p>然后就是跟着chatgpt next web的介绍中拉取镜像。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull yidadaa/chatgpt-next-web</span><br></pre></td></tr></table></figure><p>运行镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 3000:3000 \</span><br><span class="line">   -e OPENAI_API_KEY=sk-****** \</span><br><span class="line">   -e CODE=你的密码 \</span><br><span class="line">   --net=host \</span><br><span class="line">   -e PROXY_URL=http://127.0.0.1:7890 \</span><br><span class="line">   yidadaa/chatgpt-next-web</span><br></pre></td></tr></table></figure><p>其中127.0.0.1:7890如果是clash就保持一致。</p><h3 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h3><p>一般来说拉取镜像之后就可以直接运行，然后外界访问了。</p><p>当前的确可以外界访问，但是仅仅限于IPV6的3000端口。一般来说我们使用的是IPV4的IP去访问也只有IPV4的网址。所以我们需要一个Nginx来进行一个反向代理，将IPV4的访问转到IPV6:3000端口的访问。</p><p>我看问题区有人提出三种方案。我这里就是选择第一种：</p><ul><li>宿主机代理是127.0.0.1， docker容器要加–network host参数，容器才能通过127.0.0.1访问到宿主机的代理。由于容器里的3000端口是绑在ipv6上的，所以必须使用IPV6地址才能访问到容器里的chatgpt next web，例如nginx反代使用地址 [::1]:3000 。</li><li>代理设为宿主机ip地址，docker容器通过ip地址访问宿主机代理。这种方式要留意2点：(1)宿主机本地<strong>防火墙(如有)需要开放端口</strong> (2)代理可能会<strong>暴露在公网</strong>上</li><li>代理设为容器网段的网关ip地址，例如容器ip是172.18.0.2，宿主机有1个对应的172.18.0.1网关，代理配置成这个172.18.0.1。这种方式类似第2种方式，宿主机也需要<strong>本地防火墙(如有)开放端口</strong>，但不用担心暴露在公网的问题。</li></ul><ol><li>更新Ubantu</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get update</span><br><span class="line"><span class="built_in">sudo</span> apt-get upgrade</span><br></pre></td></tr></table></figure><ol start="2"><li>安装nginx：Nginx 在默认的 Ubuntu 源仓库中可用。所以可以根据软件名称直接安装。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install nginx</span><br></pre></td></tr></table></figure><ol start="3"><li>安装完成验证是否安装好</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl status nginx</span><br></pre></td></tr></table></figure><p>大概有如下输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nginx.service - A high performance web server and a reverse proxy server</span><br><span class="line">     Loaded: loaded (/lib/systemd/system/nginx.service; enabled; vendor preset: enabled)</span><br><span class="line">     Active: active (running) since Sat 2020-05-02 20:25:43 UTC; 13s ago</span><br><span class="line">...</span><br></pre></td></tr></table></figure><ol start="4"><li><p>配置转发</p><p>首先找到配置路径**’&#x2F;etc&#x2F;nginx&#x2F;sites-available’**中</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi your_site.conf</span><br></pre></td></tr></table></figure><p>填入以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name localhost; # 替换成你的域名</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://[::1]:3000; # 转发到本地 tcp6:3000</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>内容大致就是把80端口的内容反向代理给本地IPV6的3000端口下。</p><p>完事保存。</p><ol start="5"><li>创建一个符号链接将新的配置文件链接到 <code>/etc/nginx/sites-enabled/</code> 目录中，以启用该配置：。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -s /etc/nginx/sites-available/your_site.conf /etc/nginx/sites-enabled/</span><br></pre></td></tr></table></figure><ol start="6"><li>检查是否配置合格</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> nginx -t</span><br></pre></td></tr></table></figure><p>如果配置文件没有语法错误，将会输出 <code>nginx: configuration file /etc/nginx/nginx.conf test is successful</code>。</p><ol start="7"><li>重新加载 Nginx 以使配置生效：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl reload nginx</span><br></pre></td></tr></table></figure><p>有关Nginx</p><ul><li>所有的 Nginx 配置文件都在<code>/etc/nginx/</code>目录下。</li><li>主要的 Nginx 配置文件是<code>/etc/nginx/nginx.conf</code>。</li><li>为每个域名创建一个独立的配置文件，便于维护服务器。你可以按照需要定义任意多的 block 文件。</li><li>Nginx 服务器配置文件被储存在<code>/etc/nginx/sites-available</code>目录下。在<code>/etc/nginx/sites-enabled</code>目录下的配置文件都将被 Nginx 使用。</li><li>最佳推荐是使用标准的命名方式。例如，如果你的域名是<code>mydomain.com</code>，那么配置文件应该被命名为<code>/etc/nginx/sites-available/mydomain.com.conf</code></li><li>如果你在域名服务器配置块中有可重用的配置段，把这些配置段摘出来，做成一小段可重用的配置。</li><li>Nginx 日志文件(access.log 和 error.log)定位在<code>/var/log/nginx/</code>目录下。推荐为每个服务器配置块，配置一个不同的<code>access</code>和<code>error</code>。</li><li>你可以将你的网站根目录设置在任何你想要的地方。最常用的网站根目录位置包括：<ul><li><code>/home/&lt;user_name&gt;/&lt;site_name&gt;</code></li><li><code>/var/www/&lt;site_name&gt;</code></li><li><code>/var/www/html/&lt;site_name&gt;</code></li><li><code>/opt/&lt;site_name&gt;</code></li></ul></li></ul><h3 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h3><p>主要是阿里云的安全组与防火墙的设置。</p><h3 id="阿里云"><a href="#阿里云" class="headerlink" title="阿里云"></a>阿里云</h3><p>其中阿里云的安全组要通行部分的IP。同时设置ICMP的允许(不然ping都无法ping通)。</p><p><img src="https://cdn.jsdelivr.net/gh/xudingxie/DrawingBed/pictures/image-20240321185022907.png" alt="image-20240321185022907"></p><ul><li>其中ICMP4的那个设置就是为了可以ping通公网IP</li><li>12080与9999就是你所要放行IP。前面nginx配置是80的话就应该是80</li></ul><h3 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h3><p>防火墙主要就是把运行中所需要的端口号放行。</p><p>现在的ubantu的防火墙叫做FireWalld</p><p>注意这个d。坑了我不少的时间，我还以为原本不带防火墙。一直发现无法连接。后面灵机一动才发现。</p><p>关闭防火墙的命令如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl stop firewalld.service   <span class="comment"># 停止防火墙服务</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">disable</span> firewalld.service   <span class="comment"># 禁用防火墙服务，确保系统重启后防火墙不会自动启动</span></span><br></pre></td></tr></table></figure><p>这将停止防火墙服务并禁用它，确保防火墙不会在系统重启后自动启动。</p><p>如果你只想允许某些端口通过防火墙，你可以使用以下命令打开指定的端口：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> firewall-cmd --zone=public --add-port=端口号/协议 --permanent   <span class="comment"># 添加端口规则，例如 80/tcp 表示添加TCP协议的80端口</span></span><br><span class="line"><span class="built_in">sudo</span> firewall-cmd --reload   <span class="comment"># 重新加载防火墙配置使更改生效</span></span><br></pre></td></tr></table></figure><p>例如，要允许TCP端口80通过防火墙，你可以执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> firewall-cmd --zone=public --add-port=80/tcp --permanent</span><br><span class="line"><span class="built_in">sudo</span> firewall-cmd --reload</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubantu Clash的使用</title>
      <link href="/2024/03/18/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/ubantu%20%E5%AE%89%E8%A3%85clash/"/>
      <url>/2024/03/18/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/ubantu%20%E5%AE%89%E8%A3%85clash/</url>
      
        <content type="html"><![CDATA[<h1 id="Ubantu-Clash的使用"><a href="#Ubantu-Clash的使用" class="headerlink" title="Ubantu Clash的使用"></a>Ubantu Clash的使用</h1><p>大家有的时候需要额外的电脑的帮助去实现API。所以有了这个文章</p><p>参考文章</p><p><a href="https://opclash.com/article/302.html">Ubuntu 使用 Clash For Linux 客户端教程 - 彧繎博客 (opclash.com)</a></p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"># 切换超级管理员</span><br><span class="line">su</span><br><span class="line"># 创建文件夹</span><br><span class="line">mkdir clash</span><br><span class="line">cd clash</span><br><span class="line"># 本站下载文件</span><br><span class="line">wget https://git.opclash.com/kehuduan/clash/clash-linux-amd64-v1.18.0.gz</span><br><span class="line"># 解压文件</span><br><span class="line">gzip -d clash-linux-amd64-v1.18.0.gz</span><br><span class="line"># 给予权限</span><br><span class="line">chmod +x clash-linux-amd64-v1.18.0</span><br><span class="line"># 改名移动</span><br><span class="line">mv clash-linux-amd64-v1.18.0 /usr/local/bin/clash</span><br><span class="line"># 查看版本</span><br><span class="line">clash -v</span><br><span class="line"># 首次启动</span><br><span class="line">clash</span><br><span class="line">// INFO[0000] Can&#x27;t find config, create a initial config file </span><br><span class="line">// INFO[0000] Can&#x27;t find MMDB, start download              </span><br><span class="line">// ERRO[0002] create addr 127.0.0.1:7890 tcp listener error. err:listen tcp 127.0.0.1:7890: bind: address already in use</span><br><span class="line">// 启动 clash 提示以上错误，你就直接使用 ctrl+c 跳过执行 cd $HOME/.config/clash/</span><br><span class="line"># 进入目录</span><br><span class="line">cd $HOME/.config/clash/</span><br><span class="line"># 导入订阅</span><br><span class="line">wget -O config.yaml 订阅clash版本而非通用的地址</span><br><span class="line"># 再次启动</span><br><span class="line">clash</span><br><span class="line"># 手动节点（适用于自建）</span><br><span class="line">ls $HOME/.config/clash/config.yaml</span><br><span class="line">vi /root/.config/clash/config.yaml</span><br><span class="line"></span><br><span class="line"># 生成 systemd 配置文件</span><br><span class="line">cat &gt; /etc/systemd/system/clash.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Clash - A rule-based tunnel in Go</span><br><span class="line">Documentation=https://github.com/Dreamacro/clash/wiki</span><br><span class="line">[Service]</span><br><span class="line">OOMScoreAdjust=-1000</span><br><span class="line">ExecStart=/usr/local/bin/clash -f /root/.config/clash/config.yaml</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=5</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"># 配置开机自启</span><br><span class="line">systemctl enable clash</span><br><span class="line"></span><br><span class="line"># 启动 clash 服务</span><br><span class="line">systemctl start clash</span><br><span class="line"></span><br><span class="line"># 配置环境变量</span><br><span class="line">echo -e &quot;export http_proxy=http://127.0.0.1:7890\nexport https_proxy=http://127.0.0.1:7890&quot; &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure><p>遇见的困难：订阅地址首先是需要clash版本的地址，而非是通用版本的地址。不然的话文件写入之后执行clash会读取文件出错。下载clash的速度非常慢，我无解</p>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PostgreSQL 时区错误</title>
      <link href="/2024/03/14/%E6%95%B0%E6%8D%AE%E5%BA%93/PostgreSQL%20%E6%97%B6%E5%8C%BA%E9%94%99%E8%AF%AF/"/>
      <url>/2024/03/14/%E6%95%B0%E6%8D%AE%E5%BA%93/PostgreSQL%20%E6%97%B6%E5%8C%BA%E9%94%99%E8%AF%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="PostgreSQL-时区错误"><a href="#PostgreSQL-时区错误" class="headerlink" title="PostgreSQL 时区错误"></a>PostgreSQL 时区错误</h1><p>在完成项目的时候遇见了一个问题。时区错误。</p><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><ul><li>FreeSQL是连接程序。列的设置是<code>[Column(ServerTime = DateTimeKind.Local, CanUpdate = false)]</code></li><li>数据库是PostgreSQL,其他数据读写正常</li></ul><p>首先我是在FreeSQL不允许为空的基础上修改了实际的数据库的列允许为空，并且设置了个默认值<code>CURRENT_TIMESTMP</code>，手动执行插入程序，时间就是本地时间。</p><p>但是在我使用freesql的方法进行插入程序的时候，发现时间不对，而是UTC的时间。</p><p>程序时间由于Log是使用的NLOG，NLOG的时间显示就是当地时间。所以可以判断程序中的时间是正常的。</p><p>查看时区</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> timezone</span><br></pre></td></tr></table></figure><p>数据库的时区也是显示<code>&#39;Asia/Shanghai&#39;</code></p><p>综上：PostgreSQL与FreeSQL在配合中一定有一个在插入的时候时间错误。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>在PostgreSQL的命令中设置数据库的时区为北京时间:</p><p>数据库的名称：DATABASE_TEST</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> database DATABASE_TEST <span class="keyword">set</span> timezone<span class="operator">=</span><span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br></pre></td></tr></table></figure><p>或者设置所有用户的时区都是北京时间:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> role <span class="keyword">all</span> <span class="keyword">set</span> timezone<span class="operator">=</span><span class="string">&#x27;Asia/Shanghai&#x27;</span>;</span><br></pre></td></tr></table></figure><p>然后重启数据库服务。发现一切正常了！！！！</p><p>在这样设置之后重启数据库。发现一切正常了。</p><p>所以到底是什么原因导致的这个问题。是时区吗？</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vision Master遍历获取文件夹图片</title>
      <link href="/2024/03/13/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/Vision%20Master%E9%81%8D%E5%8E%86%E8%8E%B7%E5%8F%96%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87/"/>
      <url>/2024/03/13/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/Vision%20Master%E9%81%8D%E5%8E%86%E8%8E%B7%E5%8F%96%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87/</url>
      
        <content type="html"><![CDATA[<h2 id="Vision-Master遍历获取文件夹的图片"><a href="#Vision-Master遍历获取文件夹的图片" class="headerlink" title="Vision Master遍历获取文件夹的图片"></a>Vision Master遍历获取文件夹的图片</h2><p>在使用中，需要遍历获取文件夹的图片。来实现对于该文件夹的所有图片的一个图像检测结果的综合。</p><p>但是使用中却发现存在一些问题。没有现成的解决方案。所以在此进行记录自己的解决方案。</p><h2 id="遇见的问题"><a href="#遇见的问题" class="headerlink" title="遇见的问题"></a>遇见的问题</h2><ol><li>获取对象实例失败：自己是使用原本的Vision Master进行开发，而不是二次开发。所以在很多解决方案中的通过获取到对象实例的方案，在此是行不通的，获取到的结果都是空。</li><li>图像源的遍历文件夹并不是完整的遍历文件夹，似乎是直接缓存的。手动往文件夹中添加图片并不能识别到已经添加。</li><li>图像源的遍历文件夹只有在整个流程在重复触发的时候才会切换。想要知道已经遍历完成的标志比较难以获得。</li></ol><p>综上，决定是使用脚本来读取图片并且转成相应的类型。</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>遍历获取图片，一共分成两大部分。</p><ol><li>获取本地图片读取到内存中。</li><li>将内存中的图片转成脚本对应的ImageData类型。</li></ol><p>经过查阅手册等，最终决定，通过引入OpenCV这个库来读取图片成Mat类型，然后将Mat类型转成ImageData类型。因为Mat转ImageData类型在手册中有现成的案例。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> *****;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>认真翻阅手册，得到相应的结果。</p>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ASP.NET Core Web API部署</title>
      <link href="/2024/02/23/C%20Sharp/ASP.NET%20Core%20Web%20API%E9%83%A8%E7%BD%B2/"/>
      <url>/2024/02/23/C%20Sharp/ASP.NET%20Core%20Web%20API%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h2 id="ASP-NET-Core-Web-API部署"><a href="#ASP-NET-Core-Web-API部署" class="headerlink" title="ASP.NET Core Web API部署"></a>ASP.NET Core Web API部署</h2><p>部署简单分成这几个内容：</p><ul><li>IIS的打开</li><li>补充安装IIS的组件</li><li>程序打包</li><li>程序发布在IIS</li></ul><h3 id="IIS的打开"><a href="#IIS的打开" class="headerlink" title="IIS的打开"></a>IIS的打开</h3><p>参考链接：<a href="https://blog.csdn.net/qq_37453279/article/details/110166504">如何打开IIS服务_电脑打开iis-CSDN博客</a></p><h3 id="补充安装IIS的组件"><a href="#补充安装IIS的组件" class="headerlink" title="补充安装IIS的组件"></a>补充安装IIS的组件</h3><p>IIS打开了，但是Net程序还是不能够直接部署，会出现一定的错误。需要自己安装一些补充插件</p><p>[IIS发布.NET Core项目出现HTTP错误500.19 - Internal Server Error<a href="https://blog.csdn.net/qq_46051312/article/details/122648388">错误代码：0x8007000d]_iis web core 0x8007000d-CSDN博客</a></p><p>还有就是对于打包出来的服务并没有权限去访问。在文件的文件夹上设置权限所有人可以访问。</p><h3 id="程序打包"><a href="#程序打包" class="headerlink" title="程序打包"></a>程序打包</h3><ol><li>生成项目文件:打包前记得生成一下（是项目文件，而不是解决方案），避免最新修改没有在最新的打包文件中生效。</li><li>右键项目，选择发布，发布在文件夹中。选择自己想要发布到的文件夹。（选择文件夹的方案是因为方便迁移到其他设备中）</li></ol><p><img src="https://cdn.jsdelivr.net/gh/xudingxie/DrawingBed/pictures/image-20240223110703454.png" alt="image-20240223110703454"></p><p>打包的注意内容:发布在IIS上，如果程序中使用了除了get,post请求外的方法，比如：put,delete等方法，需要额外对于文件内容进行处理。否则会发现前端并不能访问到后端的资源。原因是该请求被IIS先一步拦截掉，实际的后端程序并不能获取到实际的请求，提示访问方法格式错误。</p><h3 id="程序发布在IIS"><a href="#程序发布在IIS" class="headerlink" title="程序发布在IIS"></a>程序发布在IIS</h3><ol><li>打开前面配置过的IIS，首先新建应用程序池。按照如下配置。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/xudingxie/DrawingBed/pictures/image-20240223105659162.png" alt="image-20240223105659162"></p><ol start="2"><li><p>添加网站</p><ul><li>网站名称:自定义</li><li>应用程序池：选择第一步程序池</li><li>物理路径：选择打包发布后的那个文件夹</li><li>IP与端口：根据自己需求设置</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xudingxie/DrawingBed/pictures/image-20240223112209643.png" alt="image-20240223112209643"></p></li><li><p>一些额外的配置建议加上。例如启动模式你的程序是存在后台服务的。请把启动模式设置为总是运行。</p><p><img src="https://cdn.jsdelivr.net/gh/xudingxie/DrawingBed/pictures/image-20240318161612731.png" alt="image-20240318161612731"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库-设置自增起点</title>
      <link href="/2024/02/01/%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93-%E8%AE%BE%E7%BD%AE%E8%87%AA%E5%A2%9E%E6%9C%80%E6%96%B0%E5%80%BC/"/>
      <url>/2024/02/01/%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93-%E8%AE%BE%E7%BD%AE%E8%87%AA%E5%A2%9E%E6%9C%80%E6%96%B0%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<h1 id="数据库-设置自增起点"><a href="#数据库-设置自增起点" class="headerlink" title="数据库-设置自增起点"></a>数据库-设置自增起点</h1><h2 id="自增起点"><a href="#自增起点" class="headerlink" title="自增起点"></a>自增起点</h2><p>正常部署的数据库内容是通过程序一步一步进行添加获取到对应的数据的。</p><p>但是有的时候我们手动添加一条数据的时候，可能顺手写了自增id这种数据。导致后续自增的id与自己填写的内容有所重复。然后就会报错。这个时候就需要重新设置自增的id。</p><ul><li>表名称：TableA</li><li>列名称：ID</li><li>新的值：30</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> setval( <span class="string">&#x27;&quot;TableA_ID_seq&quot;&#x27;</span>, <span class="number">30</span>);</span><br></pre></td></tr></table></figure><p>其中几个注意点。</p><ul><li>面对大小写敏感的数据库比如pgSql。大小写要保持一致。</li><li>这个双引号有时候可以去掉，去掉的方式我不太明确，但是有时一定没有问题的</li></ul><h2 id="常见报错"><a href="#常见报错" class="headerlink" title="常见报错"></a>常见报错</h2><h3 id="没有找到约束条件"><a href="#没有找到约束条件" class="headerlink" title="没有找到约束条件"></a>没有找到约束条件</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> setval( <span class="string">&#x27;&quot;devicelog_Id_seq&quot;&#x27;</span>, <span class="number">10</span>);</span><br></pre></td></tr></table></figure><p>报错：内容。</p><p><img src="https://cdn.jsdelivr.net/gh/xudingxie/DrawingBed/pictures/image-20240201150047928.png" alt="image-20240201150047928"></p><p>顾名思义，没有找到。常见于：表名或者列名的大小拼错等，有时双引号没有添加也会这样报错</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git操作:merge与rebase</title>
      <link href="/2024/01/17/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/git%E6%93%8D%E4%BD%9Cmerge/"/>
      <url>/2024/01/17/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/git%E6%93%8D%E4%BD%9Cmerge/</url>
      
        <content type="html"><![CDATA[<h2 id="merge与rebase"><a href="#merge与rebase" class="headerlink" title="merge与rebase"></a>merge与rebase</h2><p><strong>一般来说单人开发建议用rebase。其他我觉得都是merge比较好。</strong></p><h3 id="merge（合并）"><a href="#merge（合并）" class="headerlink" title="merge（合并）"></a><strong>merge（合并）</strong></h3><p>git中的一种操作。用于合并两个分支的内容。常用于合作开发，bug修改，版本更迭等情况。</p><p>下面是将主分支master合并到自己的开发的feature中的操作。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git checkout feature</span><br><span class="line">git merge master</span><br><span class="line">//或者合并一个</span><br><span class="line">git merge master feature</span><br></pre></td></tr></table></figure><p>此时会在feature分支中创建一个新的“merge commit”，它将两个分支的历史联系在一起，为你生成如下所示的分支结构</p><p><img src="https://pic3.zhimg.com/80/v2-bf9cf3d71fed71fa53b67990f72cf3e6_720w.webp" alt="img"></p><p>所以你的记录就有一个新的合并节点。</p><p>合并的合并方案是：我先找到两者的共同父节点。然后进行对比修改。最后产生一个merge类型的commit记录。如果想要每个变化的提交记录需要在变化对应的分支进行查找。</p><h3 id="rebase（变基）"><a href="#rebase（变基）" class="headerlink" title="rebase（变基）"></a>rebase（变基）</h3><p>git的一种操作。用于合并两个分支的内容。常用于合作开发，bug修改，版本更迭等情况。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout feature</span><br><span class="line">git rebase master</span><br></pre></td></tr></table></figure><p>变基的合并方案是，我先找到feature与master的共同父节点A。然后进行对比修改，即把feature自A之后的所有提交都重新创建新的commit到master的最新节点B（B可能为节点A）之后。这样在master中就在B节点后紧跟着所有feature的所有提交记录。</p><p>如果只是rebase一次的话，那这样除了commit记录的时间与编号与feature上的时间与编号不一致外，就没有什么问题。毕竟这样的提交记录还是比较容易理解的。但是如果多次rebase就可能造非常坏的影响了。在两者的区别中我会更详细的讲述。</p><h2 id="两者的区别"><a href="#两者的区别" class="headerlink" title="两者的区别"></a>两者的区别</h2><p>一般来说单人开发建议用rebase。其他我觉得都是merge比较好。</p><p>简单说明一下原因为啥人一多就不建议使用rebase。</p><p>多人开发的时候公共分支master，会发生不断的提交。如果在每一次提交的时候都进行一次rebase。那样rebase与公共master的公共父节点只是第一次合并的节点。</p><p>但是merge是最新一次提交的节点。</p><p>举例：feature发现master分支有了新的提交A，于是我进行rebase，featrue之后与master的共同父节点是提交A。然后master提交B，再次rebase之后，与master的共<strong>同父节点还是A</strong>。但是如果不是使用rebase而是使用merge，那样<strong>最新的共同的父节点是B</strong>。</p><p>把这样的分支推送到master之后，对于其他开发者来说rebase会导致的合并成本大大提高。毕竟我本来只想要对于最新版本方便合并，但是rebase就不知道是什么版本了，不同版本我怎么修改的需要重新修改。</p><h2 id="对比形成新的文件"><a href="#对比形成新的文件" class="headerlink" title="对比形成新的文件"></a>对比形成新的文件</h2><p>细心的会发现我在对比文件的地方一笔掠过了。但是实际上是这个内容太多，需要仔细理解。</p><p>在git提交的时候会发现只要有一行发生了变动他就会对比记录。哪怕这个只是一个空行。</p><p>在上面的两个说法中都有说找一个共同父节点。那这个父节点的作用就是对比内容的基点。</p><p>对比记录，同一位置有变则变，多变则冲突，无变则不变。</p><p>现在有父节点A，master新节点B，feature新节点C，合并后节点D</p><p>B变D变，C变D也变，B与C一起变则需要手动解决冲突。</p><h3 id="问题两次merge到master，feature文件我没有修改，但是与两次master中不一致。"><a href="#问题两次merge到master，feature文件我没有修改，但是与两次master中不一致。" class="headerlink" title="问题两次merge到master，feature文件我没有修改，但是与两次master中不一致。"></a>问题两次merge到master，feature文件我没有修改，但是与两次master中不一致。</h3><p>merge在对比的是记录。只要在两次merge中的记录没有变化就一定没有变化。但是有变化就会变化。</p><p>merge的第一次时的父节点是A，然后第二次是B。</p><p>如果master在A-》B之间有修改。你没变，但是master变了。直接运用变化的结果。所以master不一致。</p><p>如果master不变。但是在这次的时候其实发生了一次冲突。以master为准，然后在第二次的时候再次提交。对比A-》B都没有修改。所以还是master上一次的冲突后的结果。</p>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-跨域配置</title>
      <link href="/2023/12/25/C%20Sharp/C%20Sharp%20%E9%85%8D%E7%BD%AE%E8%B7%A8%E5%9F%9F/"/>
      <url>/2023/12/25/C%20Sharp/C%20Sharp%20%E9%85%8D%E7%BD%AE%E8%B7%A8%E5%9F%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="C-Sharp-跨域配置"><a href="#C-Sharp-跨域配置" class="headerlink" title="C Sharp-跨域配置"></a>C Sharp-跨域配置</h2><p>自己在用ASP Net Web API的net8 + vue3搭建网页的时候遇见了跨域问题。这里特意记录一下。</p><h2 id="跨域"><a href="#跨域" class="headerlink" title="跨域"></a>跨域</h2><p>首先简单说一下什么是跨域。</p><p>我们的<strong>WebApi</strong>项目默认是没有开启跨域的，因为<strong>浏览器安全</strong>性可防止网页默认<strong>同域策略</strong>。 同域策略可防止恶意站点从另一站点读取敏感数据。 </p><p>简单来说就是当一个请求url的<strong>协议、域名、端口</strong>三者之间任意一个与当前页面url不同即为跨域就会被服务器拒绝掉，不进行回应。</p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>在Program.cs中添加如下代码</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">builder.Services.AddCors(options =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    options.AddPolicy</span><br><span class="line">        (name: <span class="string">&quot;myCors&quot;</span>,</span><br><span class="line">            builde =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                builde.WithOrigins(<span class="string">&quot;*&quot;</span>, <span class="string">&quot;*&quot;</span>,<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .AllowAnyOrigin()</span><br><span class="line">                .AllowAnyHeader()</span><br><span class="line">                .AllowAnyMethod();</span><br><span class="line">            &#125;</span><br><span class="line">        );</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// ......</span></span><br><span class="line"><span class="comment">// 然后在权限认证前进行使用</span></span><br><span class="line">app.UseCors(<span class="string">&quot;myCors&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="没配置的错误信息"><a href="#没配置的错误信息" class="headerlink" title="没配置的错误信息"></a>没配置的错误信息</h2><p>因为这个是由于信息跨域导致的问题。所以在没有跨域的情况下是不会报错的。因此，Swagger,Postman,ApiFox等这类测试工具在默认情况下对于后端的访问是完全正常的。并不会触发跨域错误。</p><p>但是在面对vue前端去使用的时候，因为url肯定不会是默认的信息。所以就会触发这个问题。具体表现如下。</p><ul><li>post请求的第一次请求就会报错405错误。</li><li>Postman等测试软件默认情况下访问正常。</li></ul><h2 id="额外补充"><a href="#额外补充" class="headerlink" title="额外补充"></a>额外补充</h2><p>在部署在IIS之后，我还发生了一次跨域问题。这次的跨域花费了我很多的精力。</p><p>在网络上也很少有我这个错误的原因。</p><p>网络请求正常访问到自己的服务(可以在日志中发现已经访问进入到了处理模块中)，但是由于网站对于异常没有进行处理，导致发生错误。此时就是会返回一个跨域错误给前端。提示缺少<code>Access-Control-Allow-Origin: *</code></p><p>同时记录一下我错误的现象：</p><p>其他接口A可以正常访问，但是处理部分信息的接口B发生了跨域错误（因为查询部分出现了异常没有处理）。</p><p>在根据网上的方案后，之后我web的配置中的HTTP的访问头中配置了允许跨域的那个设置。</p><p>此时再次访问接口，接口A,B均提示<code>Access-Control-Allow-Origin: *</code>重复。</p>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-学习路线-watch</title>
      <link href="/2023/12/15/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-watch/"/>
      <url>/2023/12/15/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-watch/</url>
      
        <content type="html"><![CDATA[<h1 id="vue-学习路线-watch"><a href="#vue-学习路线-watch" class="headerlink" title="vue-学习路线-watch"></a>vue-学习路线-watch</h1><p>作用也就是用于监视一些变量。在这些变量发生变化时进行一些操作。</p><p>比如在页面进行翻页的时候进行一旦检测到有页数的变化立刻请求新的数据。</p><p>watch大概常用的需求以及解决方法。</p><ul><li>监视整个对象</li><li>监视对象中的部分属性</li><li>对于对象进行深度监视</li></ul><h2 id="监视整个对象"><a href="#监视整个对象" class="headerlink" title="监视整个对象"></a>监视整个对象</h2><p>这个就是最简单的情况。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="built_in">object</span>=<span class="title function_">ref</span>(&#123;<span class="attr">page</span>:<span class="number">1</span>,<span class="attr">size</span>:<span class="number">1</span>&#125;)</span><br><span class="line"><span class="title function_">watch</span>(<span class="built_in">object</span>,<span class="function">(<span class="params">oldValue,newValue</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="监视对象的部分属性"><a href="#监视对象的部分属性" class="headerlink" title="监视对象的部分属性"></a>监视对象的部分属性</h2><p>这个是最常见的情况。我只是需要监视一部分。其他内容我压根不关注它与我的关系。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="built_in">object</span>=<span class="title function_">ref</span>(&#123;<span class="attr">page</span>:<span class="number">1</span>,<span class="attr">size</span>:<span class="number">1</span>&#125;)</span><br><span class="line"><span class="comment">//这样仅仅监视其中的page的数值的变化</span></span><br><span class="line"><span class="title function_">watch</span>(<span class="function">()=&gt;</span><span class="built_in">object</span>.<span class="property">page</span>,<span class="function">(<span class="params">oldValue,newValue</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FreeSql</title>
      <link href="/2023/12/14/%E6%95%B0%E6%8D%AE%E5%BA%93/FreeSql-%E5%85%A5%E9%97%A8/"/>
      <url>/2023/12/14/%E6%95%B0%E6%8D%AE%E5%BA%93/FreeSql-%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Free-SQL-入门"><a href="#Free-SQL-入门" class="headerlink" title="Free SQL 入门"></a>Free SQL 入门</h1><p>首先就是官方链接<a href="https://freesql.net/guide/getting-started.html">入门 | FreeSql 官方文档</a></p><h2 id="想法验证"><a href="#想法验证" class="headerlink" title="想法验证"></a>想法验证</h2><h3 id="1-添加时缺少属性"><a href="#1-添加时缺少属性" class="headerlink" title="1. 添加时缺少属性"></a>1. 添加时缺少属性</h3><p>id这种自增缺少不影响，其他有影响。</p><h3 id="2-动态表名-动态返回"><a href="#2-动态表名-动态返回" class="headerlink" title="2. 动态表名+动态返回"></a>2. 动态表名+动态返回</h3><p>可以实现。但是问题时返回时一个object类型。每一行都是有多少列就返回了多少个字典项。所以字典类型并不能直接转成自己想要的类型。</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NLog的使用</title>
      <link href="/2023/12/07/C%20Sharp/Nlog%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/12/07/C%20Sharp/Nlog%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="NLog的使用"><a href="#NLog的使用" class="headerlink" title="NLog的使用"></a>NLog的使用</h2><p>这边记录以下如何实现对于NLog的使用</p><h2 id="nlog-config"><a href="#nlog-config" class="headerlink" title="nlog.config"></a>nlog.config</h2><p>NuGet下载:NLog.Web.AspNetCore,NLog.Database</p><p>最基础的方案是使用利用自动检索nlog.config的能力。把信息都写在nlog.config。然后只要引入对应的nugut包然后，注入的任务的唯一实例就好。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nlog</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.nlog-project.org/schemas/NLog.xsd&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">autoReload</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">throwExceptions</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">internalLogLevel</span>=<span class="string">&quot;Off&quot;</span> <span class="attr">internalLogFile</span>=<span class="string">&quot;c:\temp\nlog-internal.log&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- optional, add some variables</span></span><br><span class="line"><span class="comment">  https://github.com/nlog/NLog/wiki/Configuration-file#variables</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">variable</span> <span class="attr">name</span>=<span class="string">&quot;myvar&quot;</span> <span class="attr">value</span>=<span class="string">&quot;myvalue&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">  See https://github.com/nlog/nlog/wiki/Configuration-file</span></span><br><span class="line"><span class="comment">  for information on customizing logging rules and outputs.</span></span><br><span class="line"><span class="comment">   --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">targets</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    add your targets here</span></span><br><span class="line"><span class="comment">    See https://github.com/nlog/NLog/wiki/Targets for possible targets.</span></span><br><span class="line"><span class="comment">    See https://github.com/nlog/NLog/wiki/Layout-Renderers for the possible layout renderers.</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">&quot;AllDatabase&quot;</span> <span class="attr">xsi:type</span>=<span class="string">&quot;Database&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">dbProvider</span>=<span class="string">&quot;System.Data.SqlClient.SqlConnection, System.Data.SqlClient&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">connectionString</span>=<span class="string">&quot;Data Source=DESKTOP-KUQBMBC;Initial Catalog=LogManager; Integrated Security=true;&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">commandText</span>=<span class="string">&quot;insert into dbo.NLog (Application, Logged, Level, Message,Logger, CallSite, Exception) values (@Application, @Logged, @Level, @Message,@Logger, @Callsite, @Exception);&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">parameter</span> <span class="attr">name</span>=<span class="string">&quot;@application&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;AspNetCoreNlog&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">parameter</span> <span class="attr">name</span>=<span class="string">&quot;@logged&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;date&#125;&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">parameter</span> <span class="attr">name</span>=<span class="string">&quot;@level&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;level&#125;&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">parameter</span> <span class="attr">name</span>=<span class="string">&quot;@message&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;message&#125;&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">parameter</span> <span class="attr">name</span>=<span class="string">&quot;@logger&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;logger&#125;&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">parameter</span> <span class="attr">name</span>=<span class="string">&quot;@callSite&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;callsite:filename=true&#125;&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">parameter</span> <span class="attr">name</span>=<span class="string">&quot;@exception&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;exception:tostring&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">target</span> <span class="attr">xsi:type</span>=<span class="string">&quot;File&quot;</span> <span class="attr">name</span>=<span class="string">&quot;allfile&quot;</span> <span class="attr">fileName</span>=<span class="string">&quot;NLog\nlog-all-$&#123;shortdate&#125;.log&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">layout</span>=<span class="string">&quot;$&#123;longdate&#125;|$&#123;logger&#125;|$&#123;uppercase:$&#123;level&#125;&#125;|$&#123;message&#125; $&#123;exception&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--同样是将文件写入日志中，写入的内容有所差别，差别在layout属性中体现。写入日志的数量有差别，差别在路由逻辑中体现--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">target</span> <span class="attr">xsi:type</span>=<span class="string">&quot;File&quot;</span> <span class="attr">name</span>=<span class="string">&quot;ownFile-web&quot;</span> <span class="attr">fileName</span>=<span class="string">&quot;NLog\nlog-my-$&#123;shortdate&#125;.log&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">layout</span>=<span class="string">&quot;$&#123;longdate&#125;|$&#123;logger&#125;|$&#123;uppercase:$&#123;level&#125;&#125;|$&#123;message&#125; $&#123;exception&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">target</span> <span class="attr">xsi:type</span>=<span class="string">&quot;Null&quot;</span> <span class="attr">name</span>=<span class="string">&quot;blackhole&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    Write events to a file with the date in the filename.</span></span><br><span class="line"><span class="comment">    &lt;target xsi:type=&quot;File&quot; name=&quot;f&quot; fileName=&quot;$&#123;basedir&#125;/logs/$&#123;shortdate&#125;.log&quot;</span></span><br><span class="line"><span class="comment">            layout=&quot;$&#123;longdate&#125; $&#123;uppercase:$&#123;level&#125;&#125; $&#123;message&#125;&quot; /&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">targets</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">rules</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;*&quot;</span> <span class="attr">minlevel</span>=<span class="string">&quot;Trace&quot;</span> <span class="attr">writeTo</span>=<span class="string">&quot;AllDatabase&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- add your logging rules here --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--路由顺序会对日志打印产生影响。路由匹配逻辑为顺序匹配。--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--All logs, including from Microsoft--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;*&quot;</span> <span class="attr">minlevel</span>=<span class="string">&quot;Trace&quot;</span> <span class="attr">writeTo</span>=<span class="string">&quot;allfile&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Skip Microsoft logs and so log only own logs--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--以Microsoft打头的日志将进入此路由，由于此路由没有writeTo属性，所有会被忽略--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--且此路由设置了final，所以当此路由被匹配到时。不会再匹配此路由下面的路由。未匹配到此路由时才会继续匹配下一个路由--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;Microsoft.*&quot;</span> <span class="attr">minlevel</span>=<span class="string">&quot;Trace&quot;</span>  <span class="attr">final</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--上方已经过滤了所有Microsoft.*的日志，所以此处的日志只会打印除Microsoft.*外的日志--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;*&quot;</span> <span class="attr">minlevel</span>=<span class="string">&quot;Trace&quot;</span> <span class="attr">writeTo</span>=<span class="string">&quot;ownFile-web&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    Write all events with minimal level of Debug (So Debug, Info, Warn, Error and Fatal, but not Trace)  to &quot;f&quot;</span></span><br><span class="line"><span class="comment">    &lt;logger name=&quot;*&quot; minlevel=&quot;Debug&quot; writeTo=&quot;f&quot; /&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">rules</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nlog</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="手动写入配置"><a href="#手动写入配置" class="headerlink" title="手动写入配置"></a>手动写入配置</h2><p>其实配置就是那些内容。完全可以通过手动赋值的方案给加载。</p><p>创建一个快速配置的类</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">NLogConfig</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LoggingConfiguration <span class="title">LoadNLogConfig</span>(<span class="params"><span class="built_in">string</span> dbProvider, <span class="built_in">string</span> connectStrings, <span class="built_in">string</span> logDbName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> config = <span class="keyword">new</span> LoggingConfiguration();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//配置DB</span></span><br><span class="line">        <span class="keyword">var</span> dbTarget = <span class="keyword">new</span> DatabaseTarget()</span><br><span class="line">        &#123;</span><br><span class="line">            Name = <span class="string">&quot;database&quot;</span>,</span><br><span class="line">            ConnectionString = connectStrings,</span><br><span class="line">            DBProvider = dbProvider,</span><br><span class="line">            CommandText =</span><br><span class="line">            <span class="string">$&quot;INSERT INTO <span class="subst">&#123;logDbName&#125;</span> (Level,Type,Source,Content,CreateTime)  VALUES(@Level,@Type,@Source,@Content,@CreateTime)&quot;</span>,</span><br><span class="line">            CommandType = System.Data.CommandType.Text</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        dbTarget.Parameters.Add(<span class="keyword">new</span> DatabaseParameterInfo(<span class="string">&quot;@CreateTime&quot;</span>, <span class="string">@&quot;$&#123;date:format=yyyy-MM-dd HH\:mm\:ss&#125;&quot;</span>));</span><br><span class="line">        dbTarget.Parameters.Add(<span class="keyword">new</span> DatabaseParameterInfo(<span class="string">&quot;@Level&quot;</span>, <span class="string">@&quot;$&#123;level&#125;&quot;</span>));</span><br><span class="line">        dbTarget.Parameters.Add(<span class="keyword">new</span> DatabaseParameterInfo(<span class="string">&quot;@Type&quot;</span>, <span class="string">@&quot;$&#123;logger&#125;&quot;</span>));</span><br><span class="line">        dbTarget.Parameters.Add(<span class="keyword">new</span> DatabaseParameterInfo(<span class="string">&quot;@Source&quot;</span>, <span class="string">@&quot;$&#123;callsite&#125;&quot;</span>));</span><br><span class="line">        dbTarget.Parameters.Add(<span class="keyword">new</span> DatabaseParameterInfo(<span class="string">&quot;@Content&quot;</span>, <span class="string">@&quot;$&#123;message&#125;&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//日志写入最小等级为info</span></span><br><span class="line">        config.LoggingRules.Add(<span class="keyword">new</span> LoggingRule(<span class="string">&quot;*&quot;</span>, NLog.LogLevel.Error, dbTarget));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//配置 file</span></span><br><span class="line">        <span class="keyword">var</span> fileTarget = <span class="keyword">new</span> FileTarget()</span><br><span class="line">        &#123;</span><br><span class="line">            Name = <span class="string">&quot;all&quot;</span>,</span><br><span class="line">            Encoding = Encoding.UTF8,</span><br><span class="line">            FileName = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, <span class="string">&quot;Logs&quot;</span>, <span class="string">$&quot;<span class="subst">&#123;DateTime.Now.ToString()&#125;</span>.log&quot;</span>),</span><br><span class="line">            Layout = <span class="string">&quot;$&#123;longdate&#125;|$&#123;level&#125;|$&#123;message&#125;&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        config.LoggingRules.Add(<span class="keyword">new</span> LoggingRule(<span class="string">&quot;*&quot;</span>, NLog.LogLevel.Error, fileTarget));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//配置 console</span></span><br><span class="line">        <span class="keyword">var</span> consoleTarget = <span class="keyword">new</span> ConsoleTarget()</span><br><span class="line">        &#123;</span><br><span class="line">            Name = <span class="string">&quot;console&quot;</span>,</span><br><span class="line">            Layout = <span class="string">&quot;$&#123;longdate&#125;|$&#123;level&#125;|$&#123;message&#125;&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        config.LoggingRules.Add(<span class="keyword">new</span> LoggingRule(<span class="string">&quot;*&quot;</span>, NLog.LogLevel.Info, consoleTarget));</span><br><span class="line">        <span class="keyword">return</span> config;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在Program.cs中加载。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//默认数据库配置为mysql</span></span><br><span class="line"><span class="built_in">string</span> connectionString = <span class="string">&quot;Data Source=127.0.0.1;Port=3306;User ID=root;Password=123456;Initial Catalog=nestar_beijingmes;Charset=utf8;SslMode=none;Max pool size=10&quot;</span>;</span><br><span class="line"><span class="built_in">string</span> dbProvider = <span class="string">&quot;MySql.Data.MySqlClient.MySqlConnection, MySql.Data&quot;</span>;            </span><br><span class="line"><span class="comment">//配置日志组件 (NLOG)</span></span><br><span class="line">LogManager.Configuration = NLogConfig.LoadNLogConfig(dbProvider, connectionString,<span class="string">&quot;Log表名称&quot;</span>);</span><br><span class="line">_log = LogManager.Configuration.LogFactory.GetCurrentClassLogger();</span><br></pre></td></tr></table></figure><h2 id="config文件说明"><a href="#config文件说明" class="headerlink" title="config文件说明"></a>config文件说明</h2><p>如nlog.config文件可知：大致分为两个部分target，rule</p><h3 id="target"><a href="#target" class="headerlink" title="target"></a>target</h3><p>信息输入的载体以及内容。想要记录的信息有哪些以及展示的载体。</p><p>载体可以分为：文件，控制台，数据库，邮件等。</p><h3 id="rule"><a href="#rule" class="headerlink" title="rule"></a>rule</h3><p>输入的规则。比如你想要哪些信息输入到前面所提及到载体中。指示方式是根据target.name。</p><p>然后是会出现过滤。也就是说比如前面的规则过滤后，后续的再进行输入的。都是只有过滤后的信息。所以分类写入是比较麻烦的。或者有其他的方案。</p>]]></content>
      
      
      <categories>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ASP.NET Core Web API创建</title>
      <link href="/2023/12/06/C%20Sharp/ASP.NET%20Core%20Web%20API%E5%88%9B%E5%BB%BA/"/>
      <url>/2023/12/06/C%20Sharp/ASP.NET%20Core%20Web%20API%E5%88%9B%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="ASP-NET-Core-Web-API创建"><a href="#ASP-NET-Core-Web-API创建" class="headerlink" title="ASP.NET Core Web API创建"></a>ASP.NET Core Web API创建</h2><p>现在ASP.NET Core Web API创建一个C#的网页的后台服务。这中间涉及了许多的小的知识点。比如，数据库的使用与日志的记录等。这两个功能都是必备且基础的功能。</p><p>简单记录一下如何实现。</p><h2 id="数据库-FreeSql"><a href="#数据库-FreeSql" class="headerlink" title="数据库-FreeSql"></a>数据库-FreeSql</h2><p>NuGet:下载内容。FreeSql,FreeSql.Provider.MySql</p><p>使用FreeSql来实现对数据库的访问。全局应该都是只有这一个数据库的实例来避免有过多的线程去对数据库的操作。也就是说在每个需要FreeSql的时候就是通过依赖注入的方式来实现。</p><p>思路简单描述下，把数据库的连接字符串写在appsetting.json中。如下所示。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Logging&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;LogLevel&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Trace&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Microsoft&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Warning&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Microsoft.Hosting.Lifetime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Information&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;SQL&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;ConnString&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Data Source=127.0.0.1;Port=3306;User ID=root;Password=123456;Initial Catalog=nestarmes;Charset=utf8;SslMode=none;Max pool size=10&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">&quot;AllowedHosts&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>在Program.cs中添加以下内容。位置在</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> builder = WebApplication.CreateBuilder(args); </span><br><span class="line"><span class="comment">// 读取数据库连接字符串</span></span><br><span class="line"><span class="keyword">var</span> connectionString = builder.Configuration[<span class="string">&quot;SQL:ConnString&quot;</span>];</span><br><span class="line"><span class="comment">// 配置 FreeSql</span></span><br><span class="line"><span class="keyword">var</span> fsql = <span class="keyword">new</span> FreeSqlBuilder()</span><br><span class="line">    .UseConnectionString(DataType.MySql, connectionString)</span><br><span class="line">    .UseAutoSyncStructure(<span class="literal">true</span>)</span><br><span class="line">    .Build();</span><br><span class="line">builder.Services.AddSingleton(fsql);</span><br><span class="line"><span class="comment">// 结束</span></span><br><span class="line">builder.Services.AddControllers();</span><br></pre></td></tr></table></figure><p>依赖注入的实现方法。构造器的方案：正常使用g_freeSql即可。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyClass</span> </span><br><span class="line">&#123; </span><br><span class="line">     <span class="keyword">private</span> <span class="keyword">readonly</span> IFreeSql _freeSql;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyClass</span> (<span class="params">IFreeSql freeSql</span>)</span> </span><br><span class="line">    &#123; </span><br><span class="line">        _freeSql = freeSql;</span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="NLog"><a href="#NLog" class="headerlink" title="NLog"></a>NLog</h2><p>NuGet:NLog.Web.AspNetCore,NLog.Database</p><p>使用这个作为日志的记录方案。这边需要提供的功能。有这么几项。</p><p>把日志记录在数据库，把日志记录在文件。把日志打印到控制台方便查看。</p><h3 id="创建设置文档。"><a href="#创建设置文档。" class="headerlink" title="创建设置文档。"></a>创建设置文档。</h3><p>nlog的基础设置可以存在nlog.config文件之中。程序启动后会自动搜索这个文件并作为配置文件。所以要创建并把如下内容复制过去。</p><p>nlog.config</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nlog</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.nlog-project.org/schemas/NLog.xsd&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">autoReload</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">internalLogLevel</span>=<span class="string">&quot;Info&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">internalLogFile</span>=<span class="string">&quot;c:\temp\internal-nlog-AspNetCore.txt&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- enable asp.net core layout renderers --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">extensions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">add</span> <span class="attr">assembly</span>=<span class="string">&quot;NLog.Web.AspNetCore&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">extensions</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- the targets to write to --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">targets</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- File Target for all log messages with basic details --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">xsi:type</span>=<span class="string">&quot;File&quot;</span> <span class="attr">name</span>=<span class="string">&quot;allfile&quot;</span> <span class="attr">fileName</span>=<span class="string">&quot;$&#123;basedir&#125;/Logs/$&#123;shortdate&#125;/$&#123;level&#125;/$&#123;level&#125;.txt&quot;</span> <span class="attr">maxArchiveFiles</span>=<span class="string">&quot;30&quot;</span>  <span class="attr">enableArchiveFileCompression</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">concurrentWrites</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">keepFileOpen</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">layout</span>=<span class="string">&quot;$&#123;longdate&#125;|$&#123;event-properties:item=EventId:whenEmpty=0&#125;|$&#123;level:uppercase=true&#125;|$&#123;logger&#125;|$&#123;message&#125; $&#123;exception:format=tostring&#125;&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- File Target for own log messages with extra web details using some ASP.NET core renderers --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">xsi:type</span>=<span class="string">&quot;File&quot;</span> <span class="attr">name</span>=<span class="string">&quot;ownFile-web&quot;</span> <span class="attr">fileName</span>=<span class="string">&quot;$&#123;basedir&#125;/Logs/$&#123;shortdate&#125;/$&#123;level&#125;/web.txt&quot;</span> <span class="attr">maxArchiveFiles</span>=<span class="string">&quot;30&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">layout</span>=<span class="string">&quot;$&#123;longdate&#125;|$&#123;event-properties:item=EventId:whenEmpty=0&#125;|$&#123;level:uppercase=true&#125;|$&#123;logger&#125;|$&#123;message&#125; $&#123;exception:format=tostring&#125;|url: $&#123;aspnet-request-url&#125;|action: $&#123;aspnet-mvc-action&#125;&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">xsi:type</span>=<span class="string">&quot;Database&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">&quot;mysqldb&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">dbProvider</span>=<span class="string">&quot;MySql.Data.MySqlClient.MySqlConnection, MySql.Data&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">connectionString</span>=<span class="string">&quot;server=127.0.0.1;Database=nestarmes;user id=root;password=123456;SslMode=none&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">commandText</span>=<span class="string">&quot;insert into logs (CreateDate, Origin, LogLevel, Message, StackTrace) values (@createDate, @origin, @logLevel, @message, @stackTrace);&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">parameter</span> <span class="attr">name</span>=<span class="string">&quot;@createDate&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;longdate&#125;&quot;</span>/&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--日志发生时间--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">parameter</span> <span class="attr">name</span>=<span class="string">&quot;@origin&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;callsite&#125;&quot;</span>/&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--日志来源--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">parameter</span> <span class="attr">name</span>=<span class="string">&quot;@logLevel&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;level&#125;&quot;</span>/&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--日志等级--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">parameter</span> <span class="attr">name</span>=<span class="string">&quot;@message&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;message&#125;&quot;</span>/&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--日志信息--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">parameter</span> <span class="attr">name</span>=<span class="string">&quot;@stackTrace&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;stacktrace&#125;&quot;</span>/&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--堆栈信息--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">xsi:type</span>=<span class="string">&quot;Console&quot;</span> <span class="attr">name</span>=<span class="string">&quot;lifetimeConsole&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;MicrosoftConsoleLayout&#125;&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">targets</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- rules to map from logger name to target --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rules</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--All logs, including from Microsoft--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;*&quot;</span> <span class="attr">minlevel</span>=<span class="string">&quot;Trace&quot;</span> <span class="attr">writeTo</span>=<span class="string">&quot;allfile&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;*&quot;</span> <span class="attr">minlevel</span>=<span class="string">&quot;Trace&quot;</span> <span class="attr">writeTo</span>=<span class="string">&quot;mysqldb&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--Output hosting lifetime messages to console target for faster startup detection --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;Microsoft.Hosting.Lifetime&quot;</span> <span class="attr">minlevel</span>=<span class="string">&quot;Info&quot;</span> <span class="attr">writeTo</span>=<span class="string">&quot;lifetimeConsole, ownFile-web&quot;</span> <span class="attr">final</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;Microsoft.*&quot;</span> <span class="attr">maxlevel</span>=<span class="string">&quot;Info&quot;</span> <span class="attr">final</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;System.Net.Http.*&quot;</span> <span class="attr">maxlevel</span>=<span class="string">&quot;Info&quot;</span> <span class="attr">final</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;*&quot;</span> <span class="attr">minlevel</span>=<span class="string">&quot;Trace&quot;</span> <span class="attr">writeTo</span>=<span class="string">&quot;ownFile-web&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">rules</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nlog</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Program-cs中创建唯一实例"><a href="#Program-cs中创建唯一实例" class="headerlink" title="Program.cs中创建唯一实例"></a>Program.cs中创建唯一实例</h3><p>简单演示下大概是什么样的格式</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.OpenApi.Models;</span><br><span class="line"><span class="keyword">using</span> System.Reflection;</span><br><span class="line"><span class="keyword">using</span> NLog.Web;</span><br><span class="line"><span class="keyword">using</span> NLog;</span><br><span class="line"><span class="comment">// 创建前写入日志，程序启动</span></span><br><span class="line"><span class="keyword">var</span> logger = NLog.LogManager.Setup().LoadConfigurationFromAppSettings().GetCurrentClassLogger();</span><br><span class="line">logger.Debug(<span class="string">&quot;init main&quot;</span>);</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> builder = WebApplication.CreateBuilder(args);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 关键就是下面两句。</span></span><br><span class="line">    <span class="comment">// NLog: Setup NLog for Dependency injection</span></span><br><span class="line">    builder.Logging.ClearProviders();</span><br><span class="line">    builder.Host.UseNLog();</span><br><span class="line">    <span class="comment">// 在应用程序启动时启用 NLog 内部日志。下面三行可以不要。这个可以在temp中看到NLog的错误日志，方便了解到底是哪里出现了问题，导致日志记录出错。</span></span><br><span class="line">    NLog.LogManager.ThrowExceptions = <span class="literal">true</span>;</span><br><span class="line">    NLog.LogManager.ThrowConfigExceptions = <span class="literal">true</span>;</span><br><span class="line">    NLog.LogManager.GlobalThreshold = NLog.LogLevel.Trace;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Add services to the container.</span></span><br><span class="line">    builder.Services.AddControllers();</span><br><span class="line">    <span class="comment">// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle</span></span><br><span class="line">    builder.Services.AddEndpointsApiExplorer();</span><br><span class="line">    <span class="keyword">var</span> app = builder.Build();</span><br><span class="line">    app.UseHttpsRedirection();</span><br><span class="line">    app.UseAuthorization();</span><br><span class="line">    app.MapControllers();</span><br><span class="line">    app.Run();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception exception)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// NLog: catch setup errors</span></span><br><span class="line">    logger.Error(exception, <span class="string">&quot;程序错误，启动失败&quot;</span>);</span><br><span class="line">    <span class="keyword">throw</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Ensure to flush and stop internal timers/threads before application-exit (Avoid segmentation fault on Linux)</span></span><br><span class="line">    NLog.LogManager.Shutdown();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Swagger的配置"><a href="#Swagger的配置" class="headerlink" title="Swagger的配置"></a>Swagger的配置</h2><p>这边简单提一下。Swagger本身其实就足够使用了。但是有时候觉得还不够完美。比如说没有注释，在Swagger界面中并没有表明方法的类型以及参数的意义。还有界面上没有说明这个文档是什么项目的所以简单的说明一下配置。</p><h3 id="注释的使用"><a href="#注释的使用" class="headerlink" title="注释的使用"></a>注释的使用</h3><p>首先是允许自动生成原本的类的注释为xml文档，用于swagger的读取。</p><p><img src="https://cdn.jsdelivr.net/gh/xudingxie/DrawingBed/pictures/image-20231207185731714.png" alt="image-20231207185731714"></p><p>然后再Program.cs中配置相应的内容，来去读取xml文档。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">builder.Services.AddSwaggerGen(c =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        c.SwaggerDoc(<span class="string">&quot;v1&quot;</span>, <span class="keyword">new</span> OpenApiInfo</span><br><span class="line">        &#123;</span><br><span class="line">            Title = <span class="string">&quot;北京线圈&quot;</span>,</span><br><span class="line">            Version = <span class="string">&quot;v1&quot;</span>,</span><br><span class="line">            Description = <span class="string">&quot;description.&quot;</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// Set the comments path for the Swagger JSON and UI.</span></span><br><span class="line">        <span class="comment">// 设置注释</span></span><br><span class="line">        <span class="keyword">var</span> xmlFile = <span class="string">$&quot;<span class="subst">&#123;Assembly.GetExecutingAssembly().GetName().Name&#125;</span>.xml&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> xmlPath = Path.Combine(AppContext.BaseDirectory, xmlFile);</span><br><span class="line">        c.IncludeXmlComments(xmlPath);</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app = builder.Build();</span><br></pre></td></tr></table></figure><p>补充以下最终的Program.cs的样子。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> FreeSql;</span><br><span class="line"><span class="keyword">using</span> Microsoft.OpenApi.Models;</span><br><span class="line"><span class="keyword">using</span> System.Reflection;</span><br><span class="line"><span class="keyword">using</span> NLog.Web;</span><br><span class="line"><span class="keyword">using</span> NLog;</span><br><span class="line"><span class="comment">// 创建前写入日志，程序启动</span></span><br><span class="line"><span class="keyword">var</span> logger = NLog.LogManager.Setup().LoadConfigurationFromAppSettings().GetCurrentClassLogger();</span><br><span class="line">logger.Debug(<span class="string">&quot;init main&quot;</span>);</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> builder = WebApplication.CreateBuilder(args);</span><br><span class="line">    <span class="comment">// 读取数据库连接字符串</span></span><br><span class="line">    <span class="keyword">var</span> connectionString = builder.Configuration[<span class="string">&quot;SQL:ConnString&quot;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 配置 FreeSql</span></span><br><span class="line">    <span class="keyword">var</span> fsql = <span class="keyword">new</span> FreeSqlBuilder()</span><br><span class="line">        .UseConnectionString(DataType.MySql, connectionString)</span><br><span class="line">        .UseAutoSyncStructure(<span class="literal">true</span>)</span><br><span class="line">        .Build();</span><br><span class="line"></span><br><span class="line">    builder.Services.AddSingleton(fsql);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// NLog: Setup NLog for Dependency injection</span></span><br><span class="line">    builder.Logging.ClearProviders();</span><br><span class="line">    builder.Host.UseNLog();</span><br><span class="line">    <span class="comment">// 在应用程序启动时启用 NLog 内部日志</span></span><br><span class="line">    NLog.LogManager.ThrowExceptions = <span class="literal">true</span>;</span><br><span class="line">    NLog.LogManager.ThrowConfigExceptions = <span class="literal">true</span>;</span><br><span class="line">    NLog.LogManager.GlobalThreshold = NLog.LogLevel.Trace;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Add services to the container.</span></span><br><span class="line">    builder.Services.AddControllers();</span><br><span class="line">    <span class="comment">// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle</span></span><br><span class="line">    builder.Services.AddEndpointsApiExplorer();</span><br><span class="line">    builder.Services.AddSwaggerGen(c =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            c.SwaggerDoc(<span class="string">&quot;v1&quot;</span>, <span class="keyword">new</span> OpenApiInfo</span><br><span class="line">            &#123;</span><br><span class="line">                Title = <span class="string">&quot;your Title&quot;</span>,</span><br><span class="line">                Version = <span class="string">&quot;v1&quot;</span>,</span><br><span class="line">                Description = <span class="string">&quot;description.&quot;</span>,</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="comment">// Set the comments path for the Swagger JSON and UI.</span></span><br><span class="line">            <span class="comment">// 设置注释</span></span><br><span class="line">            <span class="keyword">var</span> xmlFile = <span class="string">$&quot;<span class="subst">&#123;Assembly.GetExecutingAssembly().GetName().Name&#125;</span>.xml&quot;</span>;</span><br><span class="line">            <span class="keyword">var</span> xmlPath = Path.Combine(AppContext.BaseDirectory, xmlFile);</span><br><span class="line">            c.IncludeXmlComments(xmlPath);</span><br><span class="line">        &#125;</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> app = builder.Build();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Configure the HTTP request pipeline.</span></span><br><span class="line">    <span class="keyword">if</span> (app.Environment.IsDevelopment())</span><br><span class="line">    &#123;</span><br><span class="line">        app.UseSwagger();</span><br><span class="line">        app.UseSwaggerUI();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    app.UseHttpsRedirection();</span><br><span class="line"></span><br><span class="line">    app.UseAuthorization();</span><br><span class="line"></span><br><span class="line">    app.MapControllers();</span><br><span class="line"></span><br><span class="line">    app.Run();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception exception)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// NLog: catch setup errors</span></span><br><span class="line">    logger.Error(exception, <span class="string">&quot;程序错误，启动失败&quot;</span>);</span><br><span class="line">    <span class="keyword">throw</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Ensure to flush and stop internal timers/threads before application-exit (Avoid segmentation fault on Linux)</span></span><br><span class="line">    NLog.LogManager.Shutdown();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="坑货总结"><a href="#坑货总结" class="headerlink" title="坑货总结"></a>坑货总结</h2><p>走夜路多了总会遇到坑。这边总结以下遇到的坑。</p><h3 id="NLog文件正常，数据库不正常"><a href="#NLog文件正常，数据库不正常" class="headerlink" title="NLog文件正常，数据库不正常"></a>NLog文件正常，数据库不正常</h3><p>首先是根据nlog.config文件中<code>internalLogFile=&quot;c:\temp\internal-nlog-AspNetCore.txt&quot;</code>这个去查找具体报错。</p><p>我当时遇到的是就是数据库的字段长度设置太小，导致添加记录的时候输入失败。</p><h3 id="Swagger显示获取Failed-to-load-API-definition"><a href="#Swagger显示获取Failed-to-load-API-definition" class="headerlink" title="Swagger显示获取Failed to load API definition"></a>Swagger显示获取Failed to load API definition</h3><p><img src="https://cdn.jsdelivr.net/gh/xudingxie/DrawingBed/pictures/image-20231207192131548.png" alt="image-20231207192131548"></p><p>这个问题我遇到的解决方案是因为我的版本写错了。版本不能写成1.0而是要整数</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">builder.Services.AddSwaggerGen(c =&gt;</span><br><span class="line">       &#123;</span><br><span class="line">           c.SwaggerDoc(<span class="string">&quot;v1.0&quot;</span>, <span class="keyword">new</span> OpenApiInfo</span><br><span class="line">           &#123;</span><br><span class="line">               Title = <span class="string">&quot;your title&quot;</span>,</span><br><span class="line">               Version = <span class="string">&quot;v1&quot;</span>,</span><br><span class="line">               Description = <span class="string">&quot;description.&quot;</span>,</span><br><span class="line">           &#125;);</span><br><span class="line">           <span class="comment">// Set the comments path for the Swagger JSON and UI.</span></span><br><span class="line">           <span class="comment">// 设置注释</span></span><br><span class="line">           <span class="keyword">var</span> xmlFile = <span class="string">$&quot;<span class="subst">&#123;Assembly.GetExecutingAssembly().GetName().Name&#125;</span>.xml&quot;</span>;</span><br><span class="line">           <span class="keyword">var</span> xmlPath = Path.Combine(AppContext.BaseDirectory, xmlFile);</span><br><span class="line">           c.IncludeXmlComments(xmlPath);</span><br><span class="line">       &#125;</span><br><span class="line">   );</span><br></pre></td></tr></table></figure><p>还有一种可能：</p><p>是路径错误,路径从<code>[Route(&quot;api/[controller]&quot;)]</code>转成</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">Route(<span class="string">&quot;api/[controller]/[action]&quot;</span>)</span>]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Autofac的使用</title>
      <link href="/2023/12/06/C%20Sharp/AutoFac%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/12/06/C%20Sharp/AutoFac%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="Autofac的使用"><a href="#Autofac的使用" class="headerlink" title="Autofac的使用"></a>Autofac的使用</h2><p>老规矩：先展示官网<a href="https://autofac.org/">Autofac: Home</a></p><p>官网上纯英文。看着办吧。</p><p>看到一个中文文档<a href="https://autofac-.readthedocs.io/en/latest/">欢迎来到 Autofac 中文文档! — Autofac 4.0 documentation (autofac-.readthedocs.io)</a>注意一点就是这个文档需要国内网络访问，外网被屏蔽了。另外版本太老了。现在都7.1.0的版本了</p><p>现在ASP.NET Core Web API创建一个C#的网页的后台服务的任务中，想要自己创建或者引入一些简单的service而不是手动创建。所以看到了这个的使用。</p><h3 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h3><p>可以自动注册对应的实体类，通过依赖注入，减少耦合性。</p><p>DI（Dependency Injection） 依赖注入，将对象依赖的其他对象，通过注入的方式进行初始化。</p><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>首先我说结论。这几个注册所有基础都是类型&#x2F;泛型注册。但是我还是推荐使用module注册。在注册方向上更好把握</p><h4 id="类型-泛型注入"><a href="#类型-泛型注入" class="headerlink" title="类型&#x2F;泛型注入"></a>类型&#x2F;泛型注入</h4><p>注册方式：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">builder.RegisterType&lt;Class_1&gt;();</span><br><span class="line"><span class="comment">//或者</span></span><br><span class="line">builder.RegisterType(Type.GetType(<span class="string">&quot;AutofacBlog.Class_1&quot;</span>));</span><br></pre></td></tr></table></figure><p>这两种注册的各有特色。</p><ul><li>前者必须是当前项目或被当前项目所引用。毕竟类型是十分的明确的。</li><li>后者可以不被直接引用，比如在插件或者动态加载程序集的时候使用。</li></ul><h4 id="程序集批量注册"><a href="#程序集批量注册" class="headerlink" title="程序集批量注册"></a>程序集批量注册</h4><p>注册方式</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取当前应用程序加载程序集（C/S应用中使用）</span></span><br><span class="line"><span class="keyword">var</span> assembly = Assembly.GetExecutingAssembly();</span><br><span class="line"><span class="keyword">var</span> builder = <span class="keyword">new</span> ContainerBuilder();</span><br><span class="line">builder.RegisterAssemblyTypes(assembly); <span class="comment">//注册所有程序集类定义的非静态类型</span></span><br></pre></td></tr></table></figure><p>在这歌注册过程中。首先获取到当前的加载中的程序集。然后通过RegisterAssmblyTypes把这个程序集中所有自定义的非静态类型都会注册到Autofac中，让然后使用IContainer对象获取所有这些被注册的自定义类型。</p><p>当然Autofac也提供了一些过滤的方式。避免不要的信息。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">builder.RegisterAssemblyTypes(assembly)</span><br><span class="line">    .Where(type =&gt; type.Namespace.Equals(<span class="string">&quot;IocAutofac.Example&quot;</span>)); <span class="comment">//条件判断</span></span><br></pre></td></tr></table></figure><p>这种方式相信大家都比较熟悉，Where+lambda的方式来进行条件判断，lambda参数为Type类型，也就是程序集中的type。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">builder.RegisterAssemblyTypes(assembly)</span><br><span class="line">    .Except&lt;Program&gt;();  <span class="comment">//排除Program类型</span></span><br></pre></td></tr></table></figure><p>这种方式用来排除指定类型的注册，当排除的个例比较少时，会比较适用。Except还有另一种用法，但是用法比较复杂，在此不进行介绍。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">builder.RegisterAssemblyTypes(assembly)</span><br><span class="line">    .InNamespace(<span class="string">&quot;IocAutofac.Example&quot;</span>);  <span class="comment">//类型在IocAutofac.Example命名空间中</span></span><br></pre></td></tr></table></figure><p>被注册的类型需要在指定命名空间中。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">builder.RegisterAssemblyTypes(assembly)</span><br><span class="line">    .InNamespaceOf&lt;Program&gt;();  <span class="comment">//类型在Program所在的命名空间中*/</span></span><br></pre></td></tr></table></figure><p>这种方式与上面一种方式比较相似，也是用来判断命名空间的，这种方式是根据类型来获取命名空间。</p><h4 id="Lambda注册"><a href="#Lambda注册" class="headerlink" title="Lambda注册"></a>Lambda注册</h4><p>上面讲到的两种方式都是通过类型进行直接注册的，这种注册方式，在获取时，会直接通过构造函数new出对象（关于构造函数的优选选择在后面的博文中将进行说明），不会做更多的操作。有时，我们希望能够在获取对象时能够自动的做更多的事情时，我们可以通过Lambda注册来解决：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">builder.Register(cc =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> clas1 = <span class="keyword">new</span> Class_1();</span><br><span class="line">    <span class="keyword">while</span> (clas1.Id.ToString().Contains(<span class="string">&quot;a&quot;</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        clas1.Id = Guid.NewGuid();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> clas1;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>上述代码，实际注册了Class_1类型，因为最后返回的对象类型为Class_1。</p><p>Register方法接收了一个lambda表达式作为参数，在lambda表达式中，我们可以做很多事，包括一些属性注入（后续说明）、方法注入（后续说明）、条件判断等等。</p><p>我们在通过Autofac获取Class_1对象时，实际会执行这样的一个表达式。另外，lambda表达式的参数cc的类型是IComponentContext，这里我们可以简单的当做IContainer进行使用。</p><h4 id="实例注册"><a href="#实例注册" class="headerlink" title="实例注册"></a>实例注册</h4><p>注册方式</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> clas1 = <span class="keyword">new</span> Class_1();</span><br><span class="line">clas1.Id = Guid.Empty;</span><br><span class="line"></span><br><span class="line">builder.RegisterInstance(clas1);</span><br></pre></td></tr></table></figure><p>通过RegisterInstance进行实例注册，进行实例注册时，我们需要注意，实例注册可以作为一种单例注册的方式，也就是在后面通过Autofac获取Class_1对象时，获取到的是注册时的那个对象。并且，如果一个在某处修改了该对象，其他地方再获取时，获取到的就是修改后的对象。</p><h4 id="Module注册"><a href="#Module注册" class="headerlink" title="Module注册"></a>Module注册</h4><p>日常开发中，可能不同开发会负责不同的模块进行单独开发。在开发过程中，不同模块不同开发可能都有自己的类型需要注册到autofac中，但是如果每个人在注册时，都去修改一个指定地方的代码，这在进行代码合并时，是令人痛苦的。更好的方式是，每个开发不同的模块都有自己指定的类型注册区域，这样，在代码合并时，会减少很多代码冲突。</p><p>对于这种方式，Autofac已经为我们提供了：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> builder = <span class="keyword">new</span> ContainerBuilder();</span><br><span class="line"></span><br><span class="line">        builder.RegisterModule&lt;ModuleA&gt;();</span><br><span class="line">        <span class="comment">//这两种注册方式达到的效果都一样</span></span><br><span class="line">        builder.RegisterModule(<span class="keyword">new</span> ModuleB());</span><br><span class="line"></span><br><span class="line">        IContainer container = builder.Build();</span><br><span class="line">        Class_1 clas1 = container.Resolve&lt;Class_1&gt;();</span><br><span class="line">        Class_2 clas2 = container.Resolve&lt;Class_2&gt;();</span><br><span class="line">        Console.WriteLine(clas1.Id);</span><br><span class="line">        Console.WriteLine(clas2.ToString());</span><br><span class="line"></span><br><span class="line">        Console.Write(<span class="string">&quot;Press any key to continue...&quot;</span>);</span><br><span class="line">        Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">ModuleA</span> : <span class="title">Module</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Load</span>(<span class="params">ContainerBuilder builder</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        builder.RegisterType&lt;Class_1&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">ModuleB</span> : <span class="title">Module</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Load</span>(<span class="params">ContainerBuilder builder</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        builder.RegisterType&lt;Class_2&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述代码中，有两个继承自Module类的类：ModuleA、ModuleB，这两个类型重写了父类的Load方法，并在load方法中，分别注册了Class_1与Class_2类型。然后在主程序中，通过RegisterModule对Module进行注册。</p><p>通过这种方式，不同的开发就可以各自创建一个类继承自Module，然后重写Load方法，在Load方法进行自己的类型注册，最后再进行Module的统一注册。</p><blockquote><p>实际上，RegisterModule需要的参数，并不是继承自Module类的，而是实现了IModule接口的类，而Module也是实现了IModule接口的。也就是我们也可以写一个实现了IModule接口的类型，然后在RegisterModule时传入。但是一般我们直接去继承Module就好了，这种方式比较简单方便，实现IModule的方式更为复杂，当然，功能也更多，在此就不进行介绍了。</p></blockquote><h4 id="程序集Modeule注册"><a href="#程序集Modeule注册" class="headerlink" title="程序集Modeule注册"></a>程序集Modeule注册</h4><p>Module注册，为多人开发提供了一种方便的注册方式，但是我们也可以发现，这种方式，还是会需要手动注册Module，如果Module过多，Module注册代码也会显得多而杂，当然，可以通过人工管理来控制Module的量。但是Autofac还提供了一种更方便的方式，并且，对于类似Orchard的模块开发（子模块与主模块无引用关系，通过程序集加载方式来加载子模块）或是插件开发，我们没办法通过Registerodule来注册无直接引用关系的Module。</p><p>对于上述的情况，Autofac提供了很好的方式来解决：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> builder = <span class="keyword">new</span> ContainerBuilder();</span><br><span class="line"><span class="keyword">var</span> assembly = Assembly.GetExecutingAssembly();</span><br><span class="line">builder.RegisterAssemblyModules(assembly);</span><br></pre></td></tr></table></figure><p>上述代码会注册assembly程序集中所有实现了IModule接口的类型（多层继承也算），这样，我们只需要将取出所有程序集，然后通过RegisterAssemblyModules进行一次性注册，就可以自动注册所有Module了。</p><p>RegisterAssemblyModule还可以指定一个泛型类型：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">builder.RegisterAssemblyModules&lt;ModuleA&gt;(assembly);</span><br></pre></td></tr></table></figure><blockquote><p>这样注册，是指定只注册assembly程序集中继承自ModuleA的Module。</p></blockquote><h2 id="错误解决"><a href="#错误解决" class="headerlink" title="错误解决"></a>错误解决</h2><h3 id="1-注册失败"><a href="#1-注册失败" class="headerlink" title="1. 注册失败"></a>1. 注册失败</h3><p>报错信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3790|1|ERROR|Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware|An unhandled exception has occurred while executing the request. System.InvalidOperationException: Unable to resolve service for type &#x27;Nestar.MES.CollectPLCInfo.Beijing.Services.ProductService&#x27; while attempting to activate </span><br></pre></td></tr></table></figure><p>关键就是其中的Unable to resolve service for type 表现这个问题是由于注册导致的。</p><p>修改。在net 6中注册Mudule的方法</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在 var app = builder.Build(); 前加入使用 Autofac 相关代码</span></span><br><span class="line">builder.Host.UseServiceProviderFactory(<span class="keyword">new</span> AutofacServiceProviderFactory());</span><br><span class="line">builder.Host.ConfigureContainer&lt;ContainerBuilder&gt;(builder =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    builder.RegisterModule&lt;YourModule&gt;();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>&#x2F;&#x2F;在 var app &#x3D; builder.Build(); 前加入使用 Autofac 相关代码</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对齐文本标签</title>
      <link href="/2023/12/04/%E5%89%8D%E7%AB%AF/%E5%AF%B9%E9%BD%90%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE/"/>
      <url>/2023/12/04/%E5%89%8D%E7%AB%AF/%E5%AF%B9%E9%BD%90%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE/</url>
      
        <content type="html"><![CDATA[<h2 id="对齐文本标签"><a href="#对齐文本标签" class="headerlink" title="对齐文本标签"></a>对齐文本标签</h2><p>内联元素错位引起的思考。</p><p>先说结论：位置的错位是由对齐方式,幽灵空白节点，等共同作用的结果。</p><p>首先要提到一些设计的概念。</p><ul><li>内联元素: 内联元素</li><li>height: 设置高度</li><li>line-height: 对于非<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Replaced_element">替代</a>的 inline 元素，它用于计算行盒（line box）的高度</li><li>content area: 内容区域</li><li>vertical-align: 文字对齐方式</li><li>幽灵节点: 自定义的名词，dom中占据空间，但是无法获取的大小</li><li>font-family: 字体</li></ul><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>一行中有两个行级元素。字体大小不同，但是占据的div的高度却不是这两者的最大值，而是比两个的最大值还要大。</p><p><img src="https://cdn.jsdelivr.net/gh/xudingxie/DrawingBed/pictures/166a6c1c4d7e9f78~tplv-t2oaga2asx-jj-mark:3024:0:0:0:q75.png" alt="img"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;name&quot;</span>&gt;</span>重大疾病险<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;tip&quot;</span>&gt;</span>保额每月可累计<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&quot;PingFang SC&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.name</span>&#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tip</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="层层剖析"><a href="#层层剖析" class="headerlink" title="层层剖析"></a>层层剖析</h2><ol><li><p>content area：用光标选中这行文字时带背景的区域。他同时受 font-family 和 font-size 的影响。就算是相同的字号，如果字体不同，‘你所看到’的高度也是不一样的，同学们可以自己尝试一下。这里强调你所看到的，也就是我们这里的 28px，它其实是这个文本内容区的高度，而内容区的高度并不是真正的高度，也就是说，它不会影响这个元素真正的尺寸，也不会撑起父元素的高度，所以只是一个你看起来的高度。而对于行内元素来说，真正影响它高度的就是<code>line-height</code>。</p></li><li><p>line-height:设置真实高度。但是两者设置相同后span标签的内容高度是为设置的高度。但是外部的div的高度却还不是这两者的最大值。</p></li><li><p>vertical-align: 设置对齐方式。当前每个span标签内在设置line-height之后。会默认<code>vertical-align:baseline</code>基线对齐，所以在span内部会首先基线对齐。然后这两个span标签之间又会尝试基线对齐。但是由于字号的原因，所以这两个的基线默认是不对齐的。所以会出现其中一个span标签下移。然后这两个的高度如果一致就出现了错位。从而占据更高的div高度。</p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/10/26/166ac3047c6f9137~tplv-t2oaga2asx-jj-mark:3024:0:0:0:q75.png" alt="img"></p><p>解决方案就是两个文本的<code>line-height:1</code>将行高设置与字号相同即可解决。</p><blockquote><p>对齐导致的上下错位，可能会导致占据更多空间</p></blockquote></li><li><p>幽灵节点：不过设置完成后，div的高度依旧没有实现想象中的与最大的字号相同。这个就出现了幽灵节点。“幽灵空白节点”是内联盒模型中非常重要的一个概念，具体指的是:在 HTML5 文档声明 中，内联元素的所有解析和渲染表现就如同每个行框盒子的前面有一个“空白节点”一样。这 个“空白节点”永远透明，不占据任何宽度，看不见也无法通过脚本获取，就好像幽灵一样， 但又确确实实地存在，表现如同文本节点一样，因此，我称之为“幽灵空白节点”。这个空白的幽灵节点没有宽度，但是是有高度的。但是没有办法获取这个幽灵空白节点，也就无法设置。直接设置line-height并不会影响这个节点。简单研究后发现是与字体的大小相关，高度是字体大小的1.X倍，具体倍数没看。由于font-size具有继承性。于是有这么几个解决方案。</p><ul><li>方案1：父组件的<code>line-height:3px</code>.设置一个极小值，这样一般不会受影响。</li><li>方案2：父组件<code>line-height:1</code>设置与字体大小一致，但是如果父组件font-size继承了一个极大值就不好用了。</li><li>方案3：父组件<code>font-size:0</code>设置父组件的字体大小为0，这样幽灵空白节点的高度也为0，就不会占据了。</li></ul><blockquote><p>幽灵空白节点会有可能导致占据更多的空间。</p></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pt,px,rem等单位区别</title>
      <link href="/2023/11/29/%E5%89%8D%E7%AB%AF/pt,px,rem%E7%AD%89%E5%8D%95%E4%BD%8D%E5%8C%BA%E5%88%AB/"/>
      <url>/2023/11/29/%E5%89%8D%E7%AB%AF/pt,px,rem%E7%AD%89%E5%8D%95%E4%BD%8D%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<h2 id="pt-px-rem等单位区别"><a href="#pt-px-rem等单位区别" class="headerlink" title="pt,px,rem等单位区别"></a>pt,px,rem等单位区别</h2><p>即将写一些东西，所以我这里有什么想法啊。因为自己的页面在不同的屏幕上总是会有不同的效果。所以在这里做一些整理。</p><h2 id="pt与DPR"><a href="#pt与DPR" class="headerlink" title="pt与DPR"></a>pt与DPR</h2><p>首先pt在网页中几乎不会被使用。1pt&#x3D;&#x3D;1&#x2F;72英寸。所以用于打印的字体是更合适的选择。</p><p>首先是屏幕的分辨率。分辨率可以认为是有多少个像素点。1920*1080就是1920*1080个像素点。这个的单位在一般情况下也就可以认为是一个pt。</p><blockquote><p>早期前端1px&#x3D;&#x3D;1pt</p></blockquote><p>但是这个时候就出现问题了。比如手机与显示器的屏幕大小是不同的但是分辨率却是一样的，难道同一个px为单位的在电脑上看的比较舒服，但是到手机上看着小的不行，那也太难受了。所以又引申出来了DPR（设备像素比）&#x3D;设备物理像素&#x2F;设备独立像素（即css中的px）这样我们的一个px&#x3D;2pt.</p><p>前面我说一般情况下一个像素点就是认为是一个pt。但是也有特殊情况</p><p>首先明确px的意义。</p><p>px可以理解一个逻辑像素。</p><h2 id="DPI"><a href="#DPI" class="headerlink" title="DPI"></a>DPI</h2><p>Windows 目前默认还是使用的100%缩放 96dpi的显示方式，虽然可以根据显示面板自动调整（125%、150%、200%、250%、300%），但并不强制。实际上 96dpi 已经问世差不多30年了，在这种dpi下，按照Windows下 px像素 &#x3D; pt点 * DPI &#x2F; 72 这一公式。一个9pt的汉字，Windows将会被渲染成12<em>12像素的点阵图。12pt的汉字也不过是16</em>16px点阵。实话说，这显然是造成大量汉字残笔、简笔、模糊的重要原因。<br>所以强制提高DPI已经迫在眉睫。目前很多东亚字体在120dpi上存在一定的模糊问题，一步到位直接上144dpi可以一举解决问题。也就是说，Windows 有必要强制开启144dpi了（是的一步到位到至少150%缩放）。</p><h2 id="px"><a href="#px" class="headerlink" title="px"></a>px</h2><p>最最常见的使用。特点就是逻辑像素。大小可以认为是相对于屏幕是固定的。是rem与em的基础。它们最终还是要按照px的方式实现适配。</p><h2 id="rem"><a href="#rem" class="headerlink" title="rem"></a>rem</h2><p>跟随着根元素的大小而变化。</p><p>同时引申出根元素的字体的大小应该如何设计。一般来说人们更方便10进制的计算。所以把根元素的大小设置在10px是比较好的方式。然而用户如果浏览器自己有自己的用户习惯，习惯更大或者更小的字体，那我们通过对浏览器的默认字体大小进行百分比计算或者更好。</p><p>一般来说，浏览器默认字体大小16px。所以设置为<strong>16*62.5%&#x3D;10px</strong>是比较好的方案。</p><p>但是此时chrome浏览器又出现问题了。字体大小最小设置为12px。所以在设置<strong>html{font-size:62.5%;}</strong> 时实际的值变成了12px。等价于**html{font-size:75%;}**。所以再chrome浏览器上，字体相对于其他浏览器都变大了，有可能就会出现错位问题了。所以我就先放大，再缩小，避免出现12px以下的大小就可以了。</p><blockquote><p> 因此**html{font-size:625%;}*<em>也就是默认是16</em>625%&#x3D;100px成为了一种常见的主流方案 。</p></blockquote><p>PC常见设置</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span> &#123;<span class="attribute">font-size</span>: <span class="number">625%</span><span class="meta">!important</span>; <span class="comment">/* 100÷16=62.5% */</span>&#125;</span><br><span class="line"><span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">481px</span>)&#123;</span><br><span class="line">    <span class="selector-tag">html</span> &#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">940%</span><span class="meta">!important</span>; <span class="comment">/* 150.4÷16=940% */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">561px</span>)&#123;</span><br><span class="line">    <span class="selector-tag">html</span> &#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">1090%</span><span class="meta">!important</span>; <span class="comment">/* 174.4÷16=1090% */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">641px</span>)&#123;</span><br><span class="line">    <span class="selector-tag">html</span> &#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">1250%</span><span class="meta">!important</span>; <span class="comment">/* 200÷16=1250% */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>App常见配置</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">320px</span>)&#123;<span class="selector-tag">html</span> &#123;<span class="attribute">font-size</span>:<span class="number">62.5%</span><span class="meta">!important</span>;&#125;&#125;</span><br><span class="line"><span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">360px</span>)&#123;<span class="selector-tag">html</span> &#123;<span class="attribute">font-size</span>:<span class="number">72.5%</span><span class="meta">!important</span>;&#125;&#125;</span><br><span class="line"><span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">400px</span>)&#123;<span class="selector-tag">html</span> &#123;<span class="attribute">font-size</span>:<span class="number">82.5%</span><span class="meta">!important</span>;&#125;&#125;</span><br><span class="line"><span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">480px</span>)&#123;<span class="selector-tag">html</span> &#123;<span class="attribute">font-size</span>: <span class="number">94%</span><span class="meta">!important</span>;&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="em"><a href="#em" class="headerlink" title="em"></a>em</h2><p>跟随着父元素的大小变化而变化。</p><h2 id="vm-vh"><a href="#vm-vh" class="headerlink" title="vm,vh"></a>vm,vh</h2><p>这两个连在一起讲的原因是它们都是一类。设备视觉口的长宽。也就是100vm，100vh就一定可以占据全屏</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>background-color样式无效</title>
      <link href="/2023/11/22/%E5%89%8D%E7%AB%AF/background%E6%A0%B7%E5%BC%8F%E6%97%A0%E6%95%88/"/>
      <url>/2023/11/22/%E5%89%8D%E7%AB%AF/background%E6%A0%B7%E5%BC%8F%E6%97%A0%E6%95%88/</url>
      
        <content type="html"><![CDATA[<h2 id="background-color样式无效"><a href="#background-color样式无效" class="headerlink" title="background-color样式无效"></a>background-color样式无效</h2><p>就是非常奇怪，我的样式有的能够生效，有的不可以。</p><p>我在设置背景颜色的时候发现有的背景颜色设置成功。有的在改成color后无效。手动给一个颜色也是可以ok的。说明这个属性是可以被支持设置的，并没有被其他的覆盖（此处存疑，其实还是有很多的覆盖的情况。）</p><h2 id="研究结果"><a href="#研究结果" class="headerlink" title="研究结果"></a>研究结果</h2><p>background-color，其实只是设置纯色背景，如果设置渐变色背景会直接无效。因为渐变色背景其实在css中当作一个image来进行处理的。</p><p>因此在需要设置渐变色的背景+背景图片时。需要参考同时设置两张图片作为背景的方案。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.stationStatus</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&#x27;src/assets/model/lineStatus.png&#x27;</span>), <span class="built_in">linear-gradient</span>(<span class="number">#8a90c2</span>, <span class="number">#242f89</span>);</span><br><span class="line">  <span class="attribute">background-size</span>: contain;</span><br><span class="line">  <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fang-an-2</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&#x27;../assets/images/login_box_img.png&#x27;</span>) <span class="number">20%</span> <span class="number">80%</span> no-repeat,</span><br><span class="line">        <span class="built_in">linear-gradient</span>(<span class="number">0deg</span>, <span class="number">#0148bd</span>, <span class="number">#0b58d8</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在检查的时候如果提示此属性值无效，那就是你写错了！！！不要怀疑别的。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>echarts跟随div大小重绘</title>
      <link href="/2023/11/22/%E5%89%8D%E7%AB%AF/echarts%E8%B7%9F%E9%9A%8Fdiv%E5%8F%98%E5%A4%A7/"/>
      <url>/2023/11/22/%E5%89%8D%E7%AB%AF/echarts%E8%B7%9F%E9%9A%8Fdiv%E5%8F%98%E5%A4%A7/</url>
      
        <content type="html"><![CDATA[<h2 id="echarts跟随div大小重绘"><a href="#echarts跟随div大小重绘" class="headerlink" title="echarts跟随div大小重绘"></a>echarts跟随div大小重绘</h2><p>有的时候屏幕可能会放大或者说是缩小。这个时候就需要重新绘制对应的图形。</p><h2 id="绘制方案"><a href="#绘制方案" class="headerlink" title="绘制方案"></a>绘制方案</h2><p>主要思路其实就是利用echarts的reaise()方法来自动适应div大小。</p><p>关键点时重绘的时机需要echarts的相关dom节点都已经渲染完毕了。如果是作为子组件来传递的话。那可以考虑手动执行绘制，而不是子组件加载时。因为子组件先于父组件加载。所以子组件加载时父组件还没有所以也就没有办法。</p><p>echart所在的div需要不设置具体的大小。而是设置百分比等。在每次发生变化的时候，直接触发一次如下内容，进行重新绘制。这样就实现了跟随div大小而变化。</p><p>关键方法。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">charEch = echarts.init(barRef.value!);      </span><br><span class="line">charEch.resize();</span><br><span class="line">charEch.setOption(option);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx</title>
      <link href="/2023/11/22/%E5%89%8D%E7%AB%AF/nginx/"/>
      <url>/2023/11/22/%E5%89%8D%E7%AB%AF/nginx/</url>
      
        <content type="html"><![CDATA[<h2 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h2><p>在部署的时候经常会用到nginx的内容。记录一下用法。</p><h2 id="打开与关闭"><a href="#打开与关闭" class="headerlink" title="打开与关闭"></a>打开与关闭</h2><p>如果启动前已经启动nginx并记录下pid文件，会kill指定进程</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx.exe -s stop</span><br></pre></td></tr></table></figure><p>测试配置文件语法正确性</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx.exe -t -c conf/nginx.conf</span><br></pre></td></tr></table></figure><p>显示版本信息</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx.exe -v</span><br></pre></td></tr></table></figure><p>按照指定配置去启动nginx</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx.exe -c conf/nginx.conf</span><br></pre></td></tr></table></figure><h2 id="常见的异常"><a href="#常见的异常" class="headerlink" title="常见的异常"></a>常见的异常</h2><p>经常会犯的错误，记录一下。</p><h3 id="nginx重复启动"><a href="#nginx重复启动" class="headerlink" title="nginx重复启动"></a>nginx重复启动</h3><p>非常常见啊。一不小心点击了多次nginx.exe然后导致执行了多次。有多个实例在运行。</p><p>然后就会出现一些问题。比如前面说的关闭的方法只能够关闭一次。在删除对应的pid文件后，再执行就会出现错误。所以现在就是需要关闭多余的。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网页全屏</title>
      <link href="/2023/11/22/%E5%89%8D%E7%AB%AF/%E7%BD%91%E9%A1%B5%E5%85%A8%E5%B1%8F/"/>
      <url>/2023/11/22/%E5%89%8D%E7%AB%AF/%E7%BD%91%E9%A1%B5%E5%85%A8%E5%B1%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="网页全屏"><a href="#网页全屏" class="headerlink" title="网页全屏"></a>网页全屏</h2><p>有的时候需要把网页设置为全屏。现在提供两个方案来实现不同的全屏。</p><h2 id="网址栏不存在"><a href="#网址栏不存在" class="headerlink" title="网址栏不存在"></a>网址栏不存在</h2><p>background-color，其实只是设置纯色背景，如果设置渐变色背景会直接无效。因为渐变色背景其实在css中当作一个image来进行处理的。</p><p>因此在需要设置渐变色的背景+背景图片时。需要参考同时设置两张图片作为背景的方案。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fullScreenRef=ref&lt;<span class="title class_">HTMLDivElement</span> | <span class="literal">null</span>&gt;(<span class="literal">null</span>);</span><br><span class="line"><span class="comment">/** 全屏/小屏显示 */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fullScreen</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">let</span> element=fullScreenRef.<span class="property">value</span> <span class="keyword">as</span> <span class="built_in">unknown</span> <span class="keyword">as</span> <span class="title class_">HTMLDivElement</span></span><br><span class="line">  <span class="keyword">if</span>(isFullScreen.<span class="property">value</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">exitFullscreen</span>) &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">exitFullscreen</span>();</span><br><span class="line">        <span class="comment">// @ts-ignore</span></span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">mozCancelFullScreen</span>) &#123;</span><br><span class="line">        <span class="comment">// @ts-ignore</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">mozCancelFullScreen</span>();</span><br><span class="line">        <span class="comment">// @ts-ignore</span></span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">webkitExitFullscreen</span>) &#123;</span><br><span class="line">        <span class="comment">// @ts-ignore</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">webkitExitFullscreen</span>();</span><br><span class="line">        <span class="comment">// @ts-ignore</span></span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">msExitFullscreen</span>) &#123;</span><br><span class="line">        <span class="comment">// @ts-ignore</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">msExitFullscreen</span>();</span><br><span class="line">      &#125; </span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (element.<span class="property">requestFullscreen</span>) &#123;</span><br><span class="line">        element.<span class="title function_">requestFullscreen</span>();</span><br><span class="line">        <span class="comment">// @ts-ignore</span></span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (element.<span class="property">mozRequestFullScreen</span>) &#123;</span><br><span class="line">        <span class="comment">// @ts-ignore</span></span><br><span class="line">        element.<span class="title function_">mozRequestFullScreen</span>();</span><br><span class="line">        <span class="comment">// @ts-ignore</span></span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (element.<span class="property">webkitRequestFullscreen</span>) &#123;</span><br><span class="line">        <span class="comment">// @ts-ignore</span></span><br><span class="line">        element.<span class="title function_">webkitRequestFullscreen</span>();</span><br><span class="line">        <span class="comment">// @ts-ignore</span></span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (element.<span class="property">msRequestFullscreen</span>) &#123;</span><br><span class="line">        <span class="comment">// @ts-ignore</span></span><br><span class="line">        element.<span class="title function_">msRequestFullscreen</span>();</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  isFullScreen.<span class="property">value</span>=!isFullScreen.<span class="property">value</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="网址栏存在"><a href="#网址栏存在" class="headerlink" title="网址栏存在"></a>网址栏存在</h2><p>简单的逻辑，把你需要全屏的部分设置样式为占据浏览器的可视区域。</p><p>样式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.fullSceen</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100vw</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100vh</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: white;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>组件：当全屏时显示一种图标，非全屏时显示另外图标。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-button class=&quot;right&quot; @click=&quot;isFullSceen=!isFullSceen&quot;&gt;</span><br><span class="line">&lt;span :class=&quot;&#123; &#x27;el-icon-fullscreen-exit&#x27;: isFullSceen, &#x27;el-icon-fullscreen-enter&#x27;: !isFullSceen &#125;&quot;&gt;&lt;/span&gt;</span><br><span class="line">&lt;/el-button&gt; </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>visual master使用</title>
      <link href="/2023/11/20/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/Vision%20Master%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/11/20/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/Vision%20Master%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="vislual-master使用"><a href="#vislual-master使用" class="headerlink" title="vislual master使用"></a>vislual master使用</h2><p>老规矩：先贴官网链接<a href="https://pinfo.hikrobotics.com/hkws/unzip/20231101163730_26101_doc/index.html">海康机器人VM算法开发平台 (hikrobotics.com)</a></p><p>下面是做一些简单的使用心得</p><h2 id="编辑流程"><a href="#编辑流程" class="headerlink" title="编辑流程"></a>编辑流程</h2><ol><li><p>图片源选择：首先是图片源，测试的时候我选择的是图片库中的信息。</p></li><li><p>定位：其次是图片在使用各种方式去实现自己功能的时候。必不可少的一步就是定位。无论是快速定位，还是说什么其他的定位方式。但是都必须依据这个进行定位。因为不定位，一旦发生了位置的偏移，就会导致之前的ROI区域还在原来的区域，很容易出现乱七八糟的情况。</p></li><li><p>如果想要使用group的设定，建议提前想好，因为后续添加的话很麻烦，需要手动把相关信息再重新关联过去。</p></li></ol><h2 id="图片处理"><a href="#图片处理" class="headerlink" title="图片处理"></a>图片处理</h2><p>下面是一些图片处理的技巧：</p><ol><li>如果出现需要检测的边缘与周围环境的颜色差异肉眼没有那么大的情况下，建议使用图像增强中的对比度来首先明确边缘。</li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>如何避免</p>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis-plus 填充用户ip</title>
      <link href="/2023/11/15/java/Mybatis-plus%20%E8%87%AA%E5%8A%A8%E5%A1%AB%E5%85%85%E6%97%B6%E9%97%B4ip%E7%AD%89%20-%20%E5%89%AF%E6%9C%AC/"/>
      <url>/2023/11/15/java/Mybatis-plus%20%E8%87%AA%E5%8A%A8%E5%A1%AB%E5%85%85%E6%97%B6%E9%97%B4ip%E7%AD%89%20-%20%E5%89%AF%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="Mybatis-plus-自动分页"><a href="#Mybatis-plus-自动分页" class="headerlink" title="Mybatis-plus 自动分页"></a>Mybatis-plus 自动分页</h1><p>看到别人有个看起来非常有意思的操作。Mybatis-Plus的自动配置分页，根据gpt的结果来看，这个可以提高在数据表页数比较多的时候提高查询的性能。</p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><h3 id="Mybatis-plus配置"><a href="#Mybatis-plus配置" class="headerlink" title="Mybatis-plus配置"></a>Mybatis-plus配置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.DbType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023-4-1</span></span><br><span class="line"><span class="comment"> * MyBatisPlus 配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisPlusConfiguration</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> MybatisPlusInterceptor <span class="title function_">mybatisPlusInterceptor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">MybatisPlusInterceptor</span> <span class="variable">interceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MybatisPlusInterceptor</span>();</span><br><span class="line">        <span class="comment">// 分页拦截器</span></span><br><span class="line">        interceptor.addInnerInterceptor(<span class="keyword">new</span> <span class="title class_">PaginationInnerInterceptor</span>(DbType.MYSQL));</span><br><span class="line">        <span class="keyword">return</span> interceptor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段代码是一个Spring Boot应用中的配置类，用于配置MyBatis Plus，一个流行的MyBatis增强工具。这个特定的配置类主要用于添加MyBatis Plus的拦截器，具体来说是分页拦截器。下面是对这段代码的详细解释：</p><h3 id="类定义"><a href="#类定义" class="headerlink" title="类定义"></a>类定义</h3><ul><li><strong>类名</strong>：<code>MybatisPlusConfiguration</code></li><li><strong>作用</strong>：配置MyBatis Plus相关功能。</li><li><strong>注解</strong>：<code>@Configuration</code>表明这是一个Spring配置类，用于定义和配置beans。</li></ul><h3 id="方法解释"><a href="#方法解释" class="headerlink" title="方法解释"></a>方法解释</h3><ul><li><p>mybatisPlusInterceptor</p><p>方法：</p><ul><li>使用<code>@Bean</code>注解，这表示该方法提供了一个Spring管理的bean。</li><li>方法创建了一个<code>MybatisPlusInterceptor</code>对象，这是MyBatis Plus的核心拦截器，用于添加各种内部拦截器。</li><li>方法中添加了一个<code>PaginationInnerInterceptor</code>，这是一个分页拦截器，用于实现数据库查询的分页功能。</li><li>指定了数据库类型为MySQL（<code>DbType.MYSQL</code>），这是因为不同的数据库可能有不同的分页机制。</li></ul></li></ul><h3 id="分页拦截器的作用"><a href="#分页拦截器的作用" class="headerlink" title="分页拦截器的作用"></a>分页拦截器的作用</h3><ul><li><strong>分页处理</strong>：<code>PaginationInnerInterceptor</code>负责处理MyBatis的分页查询。在执行查询时，它会自动添加数据库分页语句（如<code>LIMIT</code>和<code>OFFSET</code>子句），从而实现分页效果。</li><li><strong>透明性</strong>：使用此拦截器后，开发者可以编写普通的MyBatis查询语句，而无需手动处理分页逻辑。分页的具体细节由拦截器在后台处理。</li></ul><h3 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h3><p>这种配置非常适合用在需要分页功能的Web应用中，特别是当数据量较大，直接加载所有数据不现实或效率低下时。通过这种方式，可以大大提高应用的性能和用户体验。</p><p>理解分页拦截器的功能和为什么它不是默认开启的，确实需要深入了解MyBatis Plus和分页的一些细节。让我来进一步解释：</p><h3 id="分页拦截器的功能"><a href="#分页拦截器的功能" class="headerlink" title="分页拦截器的功能"></a>分页拦截器的功能</h3><ol><li><strong>自动分页</strong>：<code>PaginationInnerInterceptor</code>的主要作用是自动处理SQL查询的分页。在应用层，你只需要编写常规的查询语句，分页拦截器会自动在SQL执行时加上分页语句（如MySQL的<code>LIMIT</code>和<code>OFFSET</code>）。</li><li><strong>性能提升</strong>：分页查询可以显著减少每次请求数据库时返回的数据量，从而减少内存使用和提高查询速度。这在处理大量数据时特别有用。</li><li><strong>简化开发</strong>：开发者不需要在每个查询中手动写入分页逻辑，这简化了代码并减少了出错的机会。</li></ol><h3 id="为什么不是默认开启"><a href="#为什么不是默认开启" class="headerlink" title="为什么不是默认开启"></a>为什么不是默认开启</h3><ol><li><strong>灵活性</strong>：MyBatis Plus提供了高度的定制性。并非所有应用都需要分页功能，特别是那些处理的数据量较小或具有特殊查询需求的应用。默认不开启允许开发者根据具体需求选择是否启用。</li><li><strong>性能考虑</strong>：虽然分页可以提高大数据量处理的效率，但对于小数据量，额外的分页逻辑可能会引入不必要的性能开销。默认不开启分页拦截器允许应用在不需要分页的情况下避免这种开销。</li><li><strong>兼容性和配置灵活性</strong>：考虑到不同项目的数据库类型、版本和具体需求可能不同，MyBatis Plus允许开发者根据具体情况选择和配置适合的拦截器。这种灵活性意味着开发者可以精确控制其ORM层的行为。</li><li><strong>设计选择</strong>：默认不开启某些功能是许多库和框架的常见设计选择。它鼓励开发者更深入地理解和选择对他们最有用的功能，而不是被动地接受所有默认设置。</li></ol><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>这个配置类是MyBatis Plus在Spring Boot应用中的一个典型配置示例，主要用于启用和配置分页功能。它展示了如何通过拦截器简化分页逻辑的实现，使得数据库操作更加高效和易于管理。</p><p>分页拦截器在处理大量数据的分页查询时非常有用，它可以提高性能并简化开发过程。然而，由于不是所有项目都需要这样的功能，且在某些情况下可能会引入不必要的性能开销，因此MyBatis Plus选择让开发者根据自己的具体需求来启用这个功能。这种设计决策体现了在提供强大功能的同时保持灵活性和配置性的平衡。</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis-plus 填充用户ip</title>
      <link href="/2023/11/15/java/Mybatis-plus%20%E8%87%AA%E5%8A%A8%E5%A1%AB%E5%85%85%E6%97%B6%E9%97%B4ip%E7%AD%89/"/>
      <url>/2023/11/15/java/Mybatis-plus%20%E8%87%AA%E5%8A%A8%E5%A1%AB%E5%85%85%E6%97%B6%E9%97%B4ip%E7%AD%89/</url>
      
        <content type="html"><![CDATA[<h1 id="Mybatis-plus-填充用户ip"><a href="#Mybatis-plus-填充用户ip" class="headerlink" title="Mybatis-plus 填充用户ip"></a>Mybatis-plus 填充用户ip</h1><p>看到别人有个看起来非常有意思的操作。Mybatis-Plus根据ip这个字段名自动获取并存储IP。</p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><h3 id="Mybatis-plus配置"><a href="#Mybatis-plus配置" class="headerlink" title="Mybatis-plus配置"></a>Mybatis-plus配置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.hncboy.beehive.base.util.WebUtil;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.handlers.MetaObjectHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.reflection.MetaObject;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> hncboy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023-3-28</span></span><br><span class="line"><span class="comment"> * MybatisPlus 配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBatisMetaObjectConfig</span> <span class="keyword">implements</span> <span class="title class_">MetaObjectHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">CREATE_TIME</span> <span class="operator">=</span> <span class="string">&quot;createTime&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">UPDATE_TIME</span> <span class="operator">=</span> <span class="string">&quot;updateTime&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">IP</span> <span class="operator">=</span> <span class="string">&quot;ip&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在插入时触发</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insertFill</span><span class="params">(MetaObject metaObject)</span> &#123;</span><br><span class="line">        <span class="comment">// null时自动填充 创建时间</span></span><br><span class="line">        <span class="keyword">if</span> (metaObject.hasGetter(CREATE_TIME) &amp;&amp; Objects.isNull(getFieldValByName(CREATE_TIME, metaObject))) &#123;</span><br><span class="line">            <span class="built_in">this</span>.setFieldValByName(CREATE_TIME, <span class="keyword">new</span> <span class="title class_">Date</span>(), metaObject);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">// null时自动填充 更新时间</span></span><br><span class="line">        <span class="keyword">if</span> (metaObject.hasGetter(UPDATE_TIME) &amp;&amp; Objects.isNull(getFieldValByName(UPDATE_TIME, metaObject))) &#123;</span><br><span class="line">            <span class="built_in">this</span>.setFieldValByName(UPDATE_TIME, <span class="keyword">new</span> <span class="title class_">Date</span>(), metaObject);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">// null时自动填充IP</span></span><br><span class="line">        <span class="keyword">if</span> (metaObject.hasGetter(IP) &amp;&amp; Objects.isNull(getFieldValByName(IP, metaObject))) &#123;</span><br><span class="line">            <span class="built_in">this</span>.setFieldValByName(IP, WebUtil.getIp(), metaObject);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 在更新时触发</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateFill</span><span class="params">(MetaObject metaObject)</span> &#123;</span><br><span class="line">        <span class="comment">// 更新时发现为空则自动填充</span></span><br><span class="line">        <span class="keyword">if</span> (metaObject.hasGetter(UPDATE_TIME) &amp;&amp; Objects.isNull(getFieldValByName(UPDATE_TIME, metaObject))) &#123;</span><br><span class="line">            <span class="built_in">this</span>.setFieldValByName(UPDATE_TIME, <span class="keyword">new</span> <span class="title class_">Date</span>(), metaObject);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="获取用户的IP等web信息"><a href="#获取用户的IP等web信息" class="headerlink" title="获取用户的IP等web信息"></a>获取用户的IP等web信息</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.text.StrPool;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.StrUtil;</span><br><span class="line"><span class="keyword">import</span> com.hncboy.beehive.base.exception.ServiceException;</span><br><span class="line"><span class="keyword">import</span> lombok.experimental.UtilityClass;</span><br><span class="line"><span class="keyword">import</span> org.springframework.lang.Nullable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.RequestAttributes;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.RequestContextHolder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.ServletRequestAttributes;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> jakarta.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.util.Optional;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Predicate;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> hncboy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023-3-27</span></span><br><span class="line"><span class="comment"> * Web 相关工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@UtilityClass</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebUtil</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * IP 头部名称数组</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * x-forwarded-for：代理服务器转发的客户端 IP</span></span><br><span class="line"><span class="comment">     * X-Real-IP：某些代理服务器使用的真实客户端 IP</span></span><br><span class="line"><span class="comment">     * CF-Connecting-IP：Cloudflare 代理服务器提供的客户端 IP</span></span><br><span class="line"><span class="comment">     * Proxy-Client-IP：HTTP 代理或负载均衡服务器 IP</span></span><br><span class="line"><span class="comment">     * WL-Proxy-Client-IP：WebLogic 代理的客户端 IP</span></span><br><span class="line"><span class="comment">     * HTTP_CLIENT_IP：有些代理服务器会加上此请求头部</span></span><br><span class="line"><span class="comment">     * HTTP_X_FORWARDED_FOR：有些代理服务器会加上此请求头部</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String[] IP_HEADER_NAMES = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;</span><br><span class="line">            <span class="string">&quot;x-forwarded-for&quot;</span>,</span><br><span class="line">            <span class="string">&quot;X-Real-IP&quot;</span>,</span><br><span class="line">            <span class="string">&quot;CF-Connecting-IP&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Proxy-Client-IP&quot;</span>,</span><br><span class="line">            <span class="string">&quot;WL-Proxy-Client-IP&quot;</span>,</span><br><span class="line">            <span class="string">&quot;HTTP_CLIENT_IP&quot;</span>,</span><br><span class="line">            <span class="string">&quot;HTTP_X_FORWARDED_FOR&quot;</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * IP 地址的断言条件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Predicate&lt;String&gt; IP_PREDICATE = (ip) -&gt; StrUtil.isBlank(ip) || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前请求的 HttpServletRequest 对象</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> &#123;HttpServletRequest&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> HttpServletRequest <span class="title function_">getRequest</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">RequestAttributes</span> <span class="variable">requestAttributes</span> <span class="operator">=</span> Optional.ofNullable(RequestContextHolder.getRequestAttributes()).orElseThrow(() -&gt; <span class="keyword">new</span> <span class="title class_">ServiceException</span>(<span class="string">&quot;request is null&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span> ((ServletRequestAttributes) requestAttributes).getRequest();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前请求的 IP 地址</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> &#123;String&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getIp</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getIp(WebUtil.getRequest());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取请求的 IP 地址</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request HttpServletRequest 对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> &#123;String&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getIp</span><span class="params">(<span class="meta">@Nullable</span> HttpServletRequest request)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (request == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> StrUtil.EMPTY;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">String</span> <span class="variable">ip</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="comment">// 遍历 IP 头部名称数组</span></span><br><span class="line">        <span class="keyword">for</span> (String ipHeader : IP_HEADER_NAMES) &#123;</span><br><span class="line">            <span class="comment">// 从 HttpServletRequest 中获取 IP 头部的值</span></span><br><span class="line">            ip = request.getHeader(ipHeader);</span><br><span class="line">            <span class="keyword">if</span> (!IP_PREDICATE.test(ip)) &#123;</span><br><span class="line">                <span class="comment">// 如果 IP 地址非空，即找到了有效的 IP 地址，则跳出循环</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (IP_PREDICATE.test(ip)) &#123;</span><br><span class="line">            <span class="comment">// 如果遍历 IP 头部名称数组后仍未找到有效的 IP 地址，则从 RemoteAddr 中获取 IP 地址</span></span><br><span class="line">            ip = request.getRemoteAddr();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 返回第一个逗号分隔的 IP 地址，多个 IP 地址时取第一个 IP 地址</span></span><br><span class="line">        <span class="keyword">return</span> StrUtil.isBlank(ip) ? <span class="literal">null</span> : StrUtil.splitTrim(ip, StrPool.COMMA).get(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lambdaQueryWarpper</title>
      <link href="/2023/11/15/java/mybatis-plus%20LambdaQueryWarpper/"/>
      <url>/2023/11/15/java/mybatis-plus%20LambdaQueryWarpper/</url>
      
        <content type="html"><![CDATA[<h1 id="mybatis-plus使用LambdaQueryWarpper"><a href="#mybatis-plus使用LambdaQueryWarpper" class="headerlink" title="mybatis-plus使用LambdaQueryWarpper"></a>mybatis-plus使用LambdaQueryWarpper</h1><h2 id="一、QueryWrapper到LambdaQueryWrapper的演变"><a href="#一、QueryWrapper到LambdaQueryWrapper的演变" class="headerlink" title="一、QueryWrapper到LambdaQueryWrapper的演变"></a>一、QueryWrapper到LambdaQueryWrapper的演变</h2><p>假如我们有一张banner_item表，现需要通过banner_id查出所有数据(查询List)</p><p><img src="https://cdn.jsdelivr.net/gh/xudingxie/DrawingBed/pictures/20210518172311485.png" alt="在这里插入图片描述"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BannerItem</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String img;</span><br><span class="line">    <span class="keyword">private</span> String keyword;</span><br><span class="line">    <span class="keyword">private</span> Integer type;</span><br><span class="line">    <span class="keyword">private</span> Long bannerId;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="QueryWrapper"><a href="#QueryWrapper" class="headerlink" title="QueryWrapper"></a>QueryWrapper</h2><p>最基础的使用方式是这样</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查询条件构造器</span></span><br><span class="line">QueryWrapper&lt;BannerItem&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">wrapper.eq(<span class="string">&quot;banner_id&quot;</span>, id);</span><br><span class="line"><span class="comment">// 查询操作</span></span><br><span class="line">List&lt;BannerItem&gt; bannerItems = bannerItemMapper.selectList(wrapper);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后我们可以引入lambda，避免我们在代码中写类似的于banner_id的硬编码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">QueryWrapper&lt;BannerItem&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">wrapper.lambda().eq(BannerItem::getBannerId, id);</span><br><span class="line">List&lt;BannerItem&gt; bannerItems = bannerItemMapper.selectList(wrapper);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="LambdaQueryWrapper"><a href="#LambdaQueryWrapper" class="headerlink" title="LambdaQueryWrapper"></a>LambdaQueryWrapper</h3><p>为了简化lambda的使用，我们可以改写成LambdaQueryWrapper构造器，语法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LambdaQueryWrapper&lt;BannerItem&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;BannerItem&gt;().lambda();</span><br><span class="line">wrapper.eq(BannerItem::getBannerId, id);</span><br><span class="line">List&lt;BannerItem&gt; bannerItems = bannerItemMapper.selectList(wrapper);</span><br></pre></td></tr></table></figure><p>我们可以再次将QueryWrapper.lambda()简化，变成这个样子</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">LambdaQueryWrapper&lt;BannerItem&gt; wrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">wrapper.eq(BannerItem::getBannerId, id);</span><br><span class="line">List&lt;BannerItem&gt; bannerItems = bannerItemMapper.selectList(wrapper);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="链式查询"><a href="#链式查询" class="headerlink" title="链式查询"></a>链式查询</h3><p>MyBatis-Plus还提供了一种链式查询的方式，和上面的代码效果一样。<br>但是这种写法偏向于炫技，可读性没有上面的代码强，大家可以根据需要自行选择方式。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List&lt;BannerItem&gt; bannerItems = <span class="keyword">new</span> <span class="title class_">LambdaQueryChainWrapper</span>&lt;&gt;(bannerItemMapper)</span><br><span class="line">    .eq(BannerItem::getBannerId, id)</span><br><span class="line">    .list();</span><br></pre></td></tr></table></figure><p>如果只想查询一条记录，例如通过id查询某条记录的详情，使用.one()即可，例如</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">BannerItem</span> <span class="variable">bannerItem</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LambdaQueryChainWrapper</span>&lt;&gt;(bannerItemMapper)</span><br><span class="line">                        .eq(BannerItem::getId, id)</span><br><span class="line">                        .one();</span><br></pre></td></tr></table></figure><h2 id="二、QueryWrapper的方法"><a href="#二、QueryWrapper的方法" class="headerlink" title="二、QueryWrapper的方法"></a>二、QueryWrapper的方法</h2><p><img src="https://cdn.jsdelivr.net/gh/xudingxie/DrawingBed/pictures/20210518172357678.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mybatis-plus</title>
      <link href="/2023/11/13/java/mybatis%E5%AD%A6%E4%B9%A0%20-%20%E5%89%AF%E6%9C%AC/"/>
      <url>/2023/11/13/java/mybatis%E5%AD%A6%E4%B9%A0%20-%20%E5%89%AF%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="mybatis-plus使用"><a href="#mybatis-plus使用" class="headerlink" title="mybatis-plus使用"></a>mybatis-plus使用</h1><p>第一次听到这个还是我在做毕业课设，现在的我终于想去了解一下<br>这个主要功能就是用于sql的增删改查。</p><p>首先附上官方的mybatis plus的文档链接。<a href="https://mp.baomidou.com/guide/">https://mp.baomidou.com/guide/</a></p><h2 id="为啥抛弃mybatis"><a href="#为啥抛弃mybatis" class="headerlink" title="为啥抛弃mybatis"></a>为啥抛弃mybatis</h2><p>很明显这个有个plus，那这个plus在哪里。根据对于mybatis的浅薄的了解，mybatis终究还是要自己去写xml语法，在部分页面上需要自己对于sql或者link语句有一定的了解。但是有没有方案，让自己完全不用懂这个xml语法，也不用去管sql语句，我只要去把对应的逻辑写好就行。你怎么查询我使用lambada语法去实现就好了。我使用的终究还是java这套思路下的的写法的，而不去设计sql，那就是这个plus的用法。</p><h2 id="queryWrapper-条件构造器"><a href="#queryWrapper-条件构造器" class="headerlink" title="queryWrapper-条件构造器"></a>queryWrapper-条件构造器</h2><p>一、queryWrapper是什么<br>queryWrapper是mybatis plus中实现查询的对象封装操作类，他的层级关系如下</p><p><img src="https://cdn.jsdelivr.net/gh/2508838014/DrawingBed//pictures/202311142304285.png" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>在上面的图片中，</p><ul><li><p>Wrapper ： 条件构造抽象类，最顶端父类，抽象类中提供4个方法西面贴源码展示</p></li><li><p>AbstractWrapper ： 用于查询条件封装，生成 sql 的 where 条件</p></li><li><p>AbstractLambdaWrapper ： Lambda 语法使用 Wrapper统一处理解析 lambda 获取 column。</p></li><li><p>LambdaQueryWrapper ：看名称也能明白就是用于Lambda语法使用的查询Wrapper</p></li><li><p>LambdaUpdateWrapper ： Lambda 更新封装Wrapper</p></li><li><p>QueryWrapper ： Entity 对象封装操作类，不是用lambda语法</p></li><li><p>UpdateWrapper ： Update 条件封装，用于Entity对象更新操作</p></li></ul><p>二、使用demo<br>使用的关键的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">QueryWrapper&lt;PbListBlack&gt; sectionQueryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">sectionQueryWrapper.eq(<span class="string">&quot;OPTYPE&quot;</span>, <span class="number">1</span>);</span><br><span class="line">sectionQueryWrapper.eq(<span class="string">&quot;BLTYPE&quot;</span>, <span class="number">1</span>);</span><br><span class="line">List&lt;PbListBlack&gt; pbListBlacks = iPbListBlackMapper.selectList(sectionQueryWrapper);</span><br></pre></td></tr></table></figure><p>上面这段代码的意思就是，首先新建一个QueryWrapper对象，类型为PbListBlack对象，也就是你需要查询的实体数据，</p><p>sectionQueryWrapper.eq(“OPTYPE”, 1);</p><p>sectionQueryWrapper.eq(“BLTYPE”, 1);</p><p>这两句的意思是PbListBlack对象对应的数据库表中的OPTYPE，BLTYPE字段值要为1</p><p>然后调用iPbListBlackMapper.selectList方法，入参就为前面新建好的查询对象封装类</p><p>下面贴上查询实体的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@EqualsAndHashCode(callSuper = false)</span></span><br><span class="line"><span class="meta">@Accessors(chain = true)</span></span><br><span class="line"><span class="meta">@TableName(&quot;PB_LIST_BLACK&quot;)</span></span><br><span class="line"><span class="meta">@ApiModel(value = &quot;PB_LIST_BLACK对象&quot;, description = &quot;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PbListBlack</span> <span class="keyword">extends</span> <span class="title class_">Model</span>&lt;PbListBlack&gt; &#123;</span><br><span class="line">   <span class="meta">@TableField(&quot;ID&quot;)</span></span><br><span class="line">   <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@TableField(&quot;USERID&quot;)</span></span><br><span class="line">   <span class="keyword">private</span> String userId;</span><br><span class="line">   <span class="meta">@TableField(&quot;SPGATE&quot;)</span></span><br><span class="line">   <span class="keyword">private</span> String spgate;</span><br><span class="line">   <span class="meta">@TableField(&quot;SPNUMBER&quot;)</span></span><br><span class="line">   <span class="keyword">private</span> String spnumber;</span><br><span class="line">   <span class="meta">@TableField(&quot;PHONE&quot;)</span></span><br><span class="line">   <span class="keyword">private</span> Long phone;</span><br><span class="line">   <span class="meta">@TableField(&quot;OPTYPE&quot;)</span></span><br><span class="line">   <span class="keyword">private</span> Integer optype;</span><br><span class="line">   <span class="meta">@TableField(&quot;OPTTIME&quot;)</span></span><br><span class="line">   <span class="keyword">private</span> Timestamp optTime;</span><br><span class="line">   <span class="meta">@TableField(&quot;CORPCODE&quot;)</span></span><br><span class="line">   <span class="keyword">private</span> String corpCode;</span><br><span class="line">   <span class="meta">@TableField(&quot;SVRTYPE&quot;)</span></span><br><span class="line">   <span class="keyword">private</span> String svrType;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@TableField(&quot;MSG&quot;)</span></span><br><span class="line">   <span class="keyword">private</span> <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> <span class="string">&quot; &quot;</span>;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@ApiModelProperty(value = &quot;黑名单类型。1：短信；2：彩信&quot;)</span></span><br><span class="line">   <span class="meta">@TableField(&quot;BLTYPE&quot;)</span></span><br><span class="line">   <span class="keyword">private</span> Integer blType;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">然后是iPbListBlackMapper的代码‘，代码很简单</span><br><span class="line"></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IPbListBlackMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;PbListBlack&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>仅仅只需要基层BaseMapper接口即可，这样mybatis plus底层封装的方法即可实现帮你查询你设置查询条件查询到的数据</p><p>当你的Mapper 继承BaseMapper接口后，无需编写 mapper.xml 文件，即可获得CRUD功能<br>三、QueryWrapper的方法<br>四、总结<br>上面的博客内容虽然简单，也只展示了一个查询的功能。在你实际使用的时候，可以按照 条件构造器上面包含的的方法，设置你查询数据的条件，调用BaseMapper里相应的方法即可</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>双冒号</title>
      <link href="/2023/11/13/java/%E5%8F%8C%E5%86%92%E5%8F%B7/"/>
      <url>/2023/11/13/java/%E5%8F%8C%E5%86%92%E5%8F%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="双冒号-方法引用"><a href="#双冒号-方法引用" class="headerlink" title="双冒号-方法引用"></a>双冒号-方法引用</h1><p>有的时候经常能看到有使用双冒号的写法来写java的代码。</p><p>但是具体是做什么的往往很迷茫。所以在此做一个总结。</p><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>这个是由java 8带来的一种新的语法。作用就是用于简化写法。正式名称就是方法引用。</p><p>一般有这四种方法引用：</p><p><img src="https://cdn.jsdelivr.net/gh/2508838014/DrawingBed//pictures/202311142247407.png" alt="03cf85c8d5e3a5fa0c842e44ca49071e"></p><p>1️⃣指向静态方法的引用<br>2️⃣指向某个对象的实例方法的引用<br>3️⃣指向某个类型的实例方法的引用<br>4️⃣指向构造方法的引用</p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>下面表现一些具体的使用情况</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        String[] array = &#123;<span class="string">&quot;aaaa&quot;</span>, <span class="string">&quot;bbbb&quot;</span>, <span class="string">&quot;cccc&quot;</span>&#125;;</span><br><span class="line">        List&lt;String&gt; list = Arrays.asList(array);</span><br><span class="line">        <span class="comment">//使用lambda表达式</span></span><br><span class="line">        list.forEach(x-&gt; System.out.println(x));</span><br><span class="line">        System.out.println(<span class="string">&quot;----------------&quot;</span>);</span><br><span class="line">        <span class="comment">//使用“::”方法引用</span></span><br><span class="line">        list.forEach(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得到结果：</p><p><img src="https://cdn.jsdelivr.net/gh/2508838014/DrawingBed//pictures/202311142246920.png" alt="在这里插入图片描述"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>其实，JVM 本身并不支持指向方法引用，过去不支持，现在也不支持。Java 8 对方法引用的支持只是编译器层面的支持，虚拟机执行引擎并不了解方法引用。编译器遇到方法引用的时候，会像上面那样自动推断出开发者的意图，将方法引用还原成接口实现对象，或者更形象地说，就是把方法引用设法包装成一个接口实现对象，这样虚拟机就可以无差别地执行字节码文件而不需要管什么是方法引用了。</p><p>需要注意的是，方法引用是用来简化接口实现代码的，并且凡是能够用方法引用来简化的接口，都有这样的特征：有且只有一个待实现的方法。</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis在windows上的使用</title>
      <link href="/2023/11/11/java/ChatGpt/redis%E5%9C%A8windows%E4%B8%8B%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/11/11/java/ChatGpt/redis%E5%9C%A8windows%E4%B8%8B%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Redis在windows上的使用"><a href="#Redis在windows上的使用" class="headerlink" title="Redis在windows上的使用"></a>Redis在windows上的使用</h1><p>在项目中使用了redis，所以记录下如何使用redis的使用。</p><ol><li>在进入到redis的运行目录。</li><li><strong>然后会进入cmd界面，直接运行命令redis-server.exe redis.windows.conf。如果报错，依次执行第一条指令：redis-cli.exe，第二条指令：shutdown第三条指令：exit</strong></li></ol><p><img src="https://cdn.jsdelivr.net/gh/2508838014/DrawingBed//pictures/202311121350769.png" alt="image-20231112135003676"></p><ol><li><strong>在命令行窗口输入redis-server.exe redis.windows.conf，就会显示Redis服务器的信息，就代表Redis服务器已经启动了</strong></li></ol>]]></content>
      
      
      <categories>
          
          <category> sql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis的工具类</title>
      <link href="/2023/11/11/java/ChatGpt/redis%E7%9A%84%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
      <url>/2023/11/11/java/ChatGpt/redis%E7%9A%84%E5%B7%A5%E5%85%B7%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="Redis的工具类"><a href="#Redis的工具类" class="headerlink" title="Redis的工具类"></a>Redis的工具类</h1><p>在项目中使用了redis，然后使用感觉有点就像logger日志记录。具体方法都可以用一个工具类完全代劳。</p><p>在 Java 中，使用 Redis 数据库通常需要使用 Redis 客户端库，如 Jedis 或 Lettuce。这里使用的是 Jedis 库，它提供了一个 RedisTemplate 类来简化 Redis 数据库的操作。RedisTemplate 类封装了 Jedis 客户端库的基本操作，如设置和获取值、删除值等。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hncboy.beehive.base.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.extra.spring.SpringUtil;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.StringRedisTemplate;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023/5/10</span></span><br><span class="line"><span class="comment"> * Redis 工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RedisUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> StringRedisTemplate STRING_REDIS_TEMPLATE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        STRING_REDIS_TEMPLATE = SpringUtil.getBean(StringRedisTemplate.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置指定 key 的值并不过期</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value value</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">set</span><span class="params">(String key, String value)</span> &#123;</span><br><span class="line">        STRING_REDIS_TEMPLATE.opsForValue().set(key, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置指定 key 的值并指定过期时间</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key     key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value   value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> timeout 过期时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> unit    单位</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">set</span><span class="params">(String key, String value, <span class="type">long</span> timeout, TimeUnit unit)</span> &#123;</span><br><span class="line">        STRING_REDIS_TEMPLATE.opsForValue().set(key, value, timeout, unit);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * key 不存在的情况设置 key并不过期</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> set 是否成功</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Boolean <span class="title function_">setIfAbsent</span><span class="params">(String key, String value)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> STRING_REDIS_TEMPLATE.opsForValue().setIfAbsent(key, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * key 不存在的情况设置 key，指定过期时间</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key     key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value   value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> timeout 超时时长</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> unit    timeout 的单位</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> set 是否成功</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Boolean <span class="title function_">setIfAbsent</span><span class="params">(String key, String value, <span class="type">long</span> timeout, TimeUnit unit)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> STRING_REDIS_TEMPLATE.opsForValue().setIfAbsent(key, value, timeout, unit);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除 key</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 是否删除成功</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Boolean <span class="title function_">delete</span><span class="params">(String key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> STRING_REDIS_TEMPLATE.delete(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取指定 key 的值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> value</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">get</span><span class="params">(String key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> STRING_REDIS_TEMPLATE.opsForValue().get(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否存在 key</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true/false</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Boolean <span class="title function_">hasKey</span><span class="params">(String key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> STRING_REDIS_TEMPLATE.hasKey(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置过期时间</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key     key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> timeout timeout</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> unit    unit</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> result</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Boolean <span class="title function_">expire</span><span class="params">(String key, <span class="type">long</span> timeout, TimeUnit unit)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> STRING_REDIS_TEMPLATE.expire(key, timeout, unit);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** ------------------------ List 相关操作---------------------------- */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取列表指定范围内的元素</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> start 开始位置, 0 是开始位置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> end   结束位置, -1 返回所有</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;String&gt; <span class="title function_">lRange</span><span class="params">(String key, <span class="type">long</span> start, <span class="type">long</span> end)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> STRING_REDIS_TEMPLATE.opsForList().range(key, start, end);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 存储在 list 尾部</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> list 长度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Long <span class="title function_">lRightPush</span><span class="params">(String key, String value)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> STRING_REDIS_TEMPLATE.opsForList().rightPush(key, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从头部移出并获取列表的一个元素</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 删除的元素</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">lLeftPop</span><span class="params">(String key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> STRING_REDIS_TEMPLATE.opsForList().leftPop(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取列表长度</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 长度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Long <span class="title function_">lLen</span><span class="params">(String key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> STRING_REDIS_TEMPLATE.opsForList().size(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** ------------------------ Hash 相关操作---------------------------- */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取存储在哈希表中指定字段的值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> field field</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> result</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">hGet</span><span class="params">(String key, String field)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> STRING_REDIS_TEMPLATE.opsForHash().get(key, field);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批量获取 hashKey 对应的 value</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key      key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> hashKeys hashKeys</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> List</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;Object&gt; <span class="title function_">hMultiGet</span><span class="params">(String key, Collection&lt;Object&gt; hashKeys)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> STRING_REDIS_TEMPLATE.opsForHash().multiGet(key, hashKeys);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取对应 key 的所有键值对</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> value</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Map&lt;Object, Object&gt; <span class="title function_">hEntries</span><span class="params">(String key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> STRING_REDIS_TEMPLATE.opsForHash().entries(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 插入指定的 hashKey 和 hashValue</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key       key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> hashKey   hashKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> hashValue hashValue</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">hPut</span><span class="params">(String key, String hashKey, String hashValue)</span> &#123;</span><br><span class="line">        STRING_REDIS_TEMPLATE.opsForHash().put(key, hashKey, hashValue);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批处理插入指定的 hashKey 和 hashValue</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key     key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> hashMap hashMap</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">hPut</span><span class="params">(String key, Map&lt;String, String&gt; hashMap)</span> &#123;</span><br><span class="line">        STRING_REDIS_TEMPLATE.opsForHash().putAll(key, hashMap);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 仅当 hashKey 不存在时才设置</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key     key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> hashKey hashKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value   value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> result</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Boolean <span class="title function_">hPutIfAbsent</span><span class="params">(String key, String hashKey, String value)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> STRING_REDIS_TEMPLATE.opsForHash().putIfAbsent(key, hashKey, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除一个或多个哈希表字段</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key      key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> hashKeys hashKeys</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> result</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Long <span class="title function_">hDelete</span><span class="params">(String key, Object... hashKeys)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> STRING_REDIS_TEMPLATE.opsForHash().delete(key, hashKeys);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> sql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常见注解</title>
      <link href="/2023/11/11/java/ChatGpt/%E5%B8%B8%E8%A7%81%E7%9A%84%E6%B3%A8%E8%A7%A3/"/>
      <url>/2023/11/11/java/ChatGpt/%E5%B8%B8%E8%A7%81%E7%9A%84%E6%B3%A8%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="常见的注解"><a href="#常见的注解" class="headerlink" title="常见的注解"></a>常见的注解</h1><h2 id="EnableScheduling"><a href="#EnableScheduling" class="headerlink" title="@EnableScheduling"></a>@EnableScheduling</h2><p>首先是我的理解：相当于把拥有这个注解的方法在开启程序的时候自动会执行。然后可以设计一个定时方案，在每隔多少时间后就执行一遍这个方法。</p><p>启用调度功能是指在Spring Boot应用程序中启用任务调度功能。在Spring Boot中，任务调度通常使用<code>@EnableScheduling</code>注解来启用。</p><p>当使用<code>@EnableScheduling</code>时，Spring Boot会自动扫描所有包含任务类（使用<code>@Scheduled</code>注解标记的类）的包，并在应用程序启动时注册这些任务。任务可以在指定的时间间隔或使用Cron表达式进行调度。</p><p>使用<code>@Scheduled</code>注解在一个类上时，需要注意以下几点：</p><ol><li>类中的所有方法都会被调度，包括私有的方法。</li><li>如果类中的某个方法不需要被调度，可以在该方法上添加<code>@Scheduled(enabled = false)</code>注解来禁用调度。</li><li>如果你在类中定义了一个构造函数，那么该构造函数中的代码不会被调度。但是，如果你在构造函数上添加<code>@Scheduled</code>注解，那么该构造函数中的代码将会在类实例化时自动执行。</li></ol><p>总之，使用<code>@Scheduled</code>注解在一个类上可以方便地对类中的所有方法进行调度，但是需要注意类中的方法和注解的设置。</p><h2 id="MapperScan"><a href="#MapperScan" class="headerlink" title="@MapperScan"></a>@MapperScan</h2><p><code>@SpringBootApplication(nameGenerator = FullyQualifiedAnnotationBeanNameGenerator.class)</code></p><p><code>@MapperScan</code> 是一个 Spring 注解，用于扫描指定包下的所有 Mapper 接口，并将它们注册为 Spring 中的 Bean。在这个例子中，<code>@MapperScan</code> 的值为 <code>com.hncboy.beehive.**.mapper</code>，它表示 Spring 将会扫描 <code>com.hncboy.beehive</code> 包下的所有子包，以及该包下的所有以 <code>.mapper</code> 结尾的接口，并将它们注册为 Spring 中的 Bean。</p><p>比如可以在创建的时候把对应接口对应的包的结尾设置成为.mp。把具体实现设置成为.mapper这样来注册成对应的容器。</p><p>使用这个注解之后，通过特定的包的命名方式。由于具体的类都肯定是继承Mapper的这个类。所以就满足了MapperScan的自动注入的两个条件，特定的包命名，使用mapper。这样可以实现自动注入，就不用每个类都使用@autowired注解来实现注入了。</p><h2 id="SpringBootApplication"><a href="#SpringBootApplication" class="headerlink" title="@SpringBootApplication"></a>@SpringBootApplication</h2><p>这个注解在创建springboot的项目的时候会自动使用，但是看到有使用其中的参数，于是记录下。</p><p><code>@SpringBootApplication(nameGenerator = FullyQualifiedAnnotationBeanNameGenerator.class)</code></p><p> <code>@SpringBootApplication</code> 是 Spring Boot 中的一个注解，用于启动一个 Spring 应用程序。在这个例子中，<code>@SpringBootApplication</code> 表示这是一个 Spring Boot 应用程序，并且使用 <code>FullyQualifiedAnnotationBeanNameGenerator</code> 类来生成 Bean 的名称。</p><p><code>FullyQualifiedAnnotationBeanNameGenerator</code> 是 Spring 中的一个类，用于生成基于注解配置的 Bean 的名称。它使用完整的类名来生成 Bean 的名称，这样可以确保生成的名称是唯一的，并且在整个应用程序中是可预测的。</p><p>使用 <code>@SpringBootApplication</code> 注解可以简化 Spring Boot 应用程序的配置过程，并且可以自动配置 Spring 组件，例如数据源、消息代理等。同时，它也可以自动扫描并加载应用程序中的资源，例如配置文件、静态文件等。</p><p>总之，<code>@SpringBootApplication</code> 注解可以让我们更方便地创建和配置 Spring Boot 应用程序，而不需要手动编写大量的配置代码。</p><h2 id="Target"><a href="#Target" class="headerlink" title="@Target"></a>@Target</h2><p>&#96;&#96;@Target(ElementType.TYPE)&#96; 表示该注解可以应用于类级别。</p><h2 id="Retention"><a href="#Retention" class="headerlink" title="@Retention"></a>@Retention</h2><p>&#96;&#96;@Retention(RetentionPolicy.RUNTIME)&#96; 表示该注解在运行时有效。</p><h2 id="Documented"><a href="#Documented" class="headerlink" title="@Documented"></a>@Documented</h2><p>表示该注解的文档信息会被自动生成。</p><h2 id="RestController"><a href="#RestController" class="headerlink" title="@RestController"></a>@RestController</h2><p><code>@RestController</code>表示这是一个 RESTful API 的控制器，它将自动为控制器中的方法生成 API 接口。</p><h2 id="RequestMapping"><a href="#RequestMapping" class="headerlink" title="@RequestMapping"></a>@RequestMapping</h2><p><code>@RequestMapping</code> 表示该注解可以应用于类中的所有方法，并为这些方法生成 API 接口。它的 <code>name</code>、<code>value</code> 和 <code>path</code> 属性分别表示接口的名称、URL 和 URL 路径。</p><h2 id="AliasFor"><a href="#AliasFor" class="headerlink" title="@AliasFor"></a>@AliasFor</h2><p><code>@AliasFor</code> 表示该注解的属性值可以与另一个注解的属性值进行关联。在这个例子中，<code>name</code> 和 <code>value</code> 属性与 <code>RequestMapping</code> 注解的属性进行了关联。</p><h2 id="Configuration"><a href="#Configuration" class="headerlink" title="@Configuration"></a>@Configuration</h2><p>表示它是Spring Boot配置类。</p><h2 id="ApiAdminRestController"><a href="#ApiAdminRestController" class="headerlink" title="@ApiAdminRestController"></a>@ApiAdminRestController</h2><p>这是一个自定义的注解。但是我觉得后面可以自己依旧使用。所以记录一下。</p><p>功能就是方便的在controller的地址栏中添加指定的前缀。</p><ol><li>定义注解。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hncboy.beehive.base.annotation;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.annotation.AliasFor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Documented;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.RetentionPolicy;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023-3-27</span></span><br><span class="line"><span class="comment"> * 管理端接口路径前端</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target(ElementType.TYPE)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> ApiAdminRestController &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Alias for &#123;<span class="doctag">@link</span> RequestMapping#name&#125;.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@AliasFor(annotation = RequestMapping.class)</span></span><br><span class="line">    String <span class="title function_">name</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Alias for &#123;<span class="doctag">@link</span> RequestMapping#value&#125;.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@AliasFor(annotation = RequestMapping.class)</span></span><br><span class="line">    String[] value() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Alias for &#123;<span class="doctag">@link</span> RequestMapping#path&#125;.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@AliasFor(annotation = RequestMapping.class)</span></span><br><span class="line">    String[] path() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>配置注解到重新解析路径</li></ol><p>其中的第一个参数表示要添加的前缀路径，第二个参数是一个lambda表达式，用于检查当前请求是否具有<code>ApiAdminRestController</code>注解。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hncboy.beehive.base.config;</span><br><span class="line"><span class="keyword">import</span> com.hncboy.beehive.base.annotation.ApiAdminRestController;</span><br><span class="line"><span class="keyword">import</span> com.hncboy.beehive.base.constant.ApplicationConstant;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.PathMatchConfigurer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023-3-27</span></span><br><span class="line"><span class="comment"> * WebMvc 配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebMvcConfiguration</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">configurePathMatch</span><span class="params">(PathMatchConfigurer configurer)</span> &#123;</span><br><span class="line">        configurer.addPathPrefix(ApplicationConstant.ADMIN_PATH_PREFIX, c -&gt; c.isAnnotationPresent(ApiAdminRestController.class));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>使用注解</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hncboy.beehive.cell.midjourney.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hncboy.beehive.base.annotation.ApiAdminRestController;</span><br><span class="line"><span class="keyword">import</span> com.hncboy.beehive.base.handler.response.R;</span><br><span class="line"><span class="keyword">import</span> com.hncboy.beehive.cell.midjourney.service.AdminRoomMidjourneyMsgService;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.Operation;</span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.tags.Tag;</span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023/6/30</span></span><br><span class="line"><span class="comment"> * Midjourney 房间控制器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@Tag(name = &quot;管理端-Midjourney 房间相关接口&quot;)</span></span><br><span class="line"><span class="meta">@ApiAdminRestController(&quot;/room/midjourney&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AdminRoomMidjourneyController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> AdminRoomMidjourneyMsgService adminRoomMidjourneyMsgService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Operation(summary = &quot;标记异常消息&quot;)</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/mark_error_message&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R&lt;Void&gt; <span class="title function_">markErrorMessage</span><span class="params">(<span class="meta">@RequestParam</span> Long msgId)</span> &#123;</span><br><span class="line">        <span class="comment">// 给一个接口直接更新状态，如果自己看到 discord 报错可以直接掉接口更新，不用等到定时任务执行</span></span><br><span class="line">        adminRoomMidjourneyMsgService.markErrorMessage(msgId);</span><br><span class="line">        <span class="keyword">return</span> R.success(<span class="string">&quot;成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Data"><a href="#Data" class="headerlink" title="@Data"></a>@Data</h2><p>由<a href="https://so.csdn.net/so/search?q=lombok&spm=1001.2101.3001.7020">lombok</a>提供，最最常用的注解。主要作用自动生成getter与setter的方法。经常用于各种实体类中</p><h2 id="TableName-“XXXX”"><a href="#TableName-“XXXX”" class="headerlink" title="@TableName(“XXXX”)"></a>@TableName(“XXXX”)</h2><p>来自于MyBatis-Plus框架。主要·用与指定实体类的对应的数据库表名称。</p><h2 id="Data-注解"><a href="#Data-注解" class="headerlink" title="@Data 注解"></a><code>@Data</code> 注解</h2><p>这个也是来自MyBatis’-Plus框架。表示该属性对应的是数据库表中的逐渐字段，数据是自增实现的。</p><h2 id="TableLogic-value-“0”-delval-“NULL”"><a href="#TableLogic-value-“0”-delval-“NULL”" class="headerlink" title="@TableLogic(value &#x3D; “0”, delval &#x3D; “NULL”)"></a>@TableLogic(value &#x3D; “0”, delval &#x3D; “NULL”)</h2><p><code>@TableLogic</code> 是一个来自 MyBatis-Plus 框架的注解，用于在插入或更新数据时自动设置一些默认值。在这个示例中，<code>@TableLogic</code> 注解用于设置一个名为 “XXXXXX” 的字段，该字段的值为 “0”，当删除数据时，该字段的值将被设置为 “NULL”。</p><p>这个注解通常位于实体类的属性上方，用于指示 MyBatis-Plus 如何设置表字段的默认值。</p><h2 id="TableField-fill-FieldFill-INSERT-UPDATE"><a href="#TableField-fill-FieldFill-INSERT-UPDATE" class="headerlink" title="@TableField(fill &#x3D; FieldFill.INSERT_UPDATE)"></a>@TableField(fill &#x3D; FieldFill.<em>INSERT_UPDATE</em>)</h2><p> <code>@TableField</code> 是一个来自 MyBatis-Plus 框架的注解，用于在实体类中定义数据库表的字段。在这个示例中，<code>@TableField</code> 注解用于设置一个名为 “fill” 的字段，该字段的 <code>fill</code> 属性值为 <code>FieldFill.INSERT_UPDATE</code>，表示该字段在插入数据和更新数据时都会被填充。</p><p><code>FieldFill</code> 是 MyBatis-Plus 中的一个枚举类，用于指定字段填充策略。<code>FieldFill.INSERT_UPDATE</code> 表示该字段在插入数据和更新数据时都会被填充。</p><p>这个注解通常位于实体类的属性上方，用于指示 MyBatis-Plus 如何填充表字段。</p><h2 id="Service"><a href="#Service" class="headerlink" title="@Service"></a>@Service</h2><p>@Service注解用于类上，加上该注解会将当前类自动注入刀spring容器中，不需要再在applicationContent.xml文件中定义bean</p><p>调用该service的时候只需要将该类注入接口即可。@Autowird</p><h2 id="Resource"><a href="#Resource" class="headerlink" title="@Resource"></a>@Resource</h2><p>@Resource用法与@Autowired 用法 用法相似，也是做依赖注入的，从容器中自动获取bean。但还是有一定的区别。</p><p>在启动spring的时候，首先要启动容器；<br>启动spring容器时，会默认寻找容器扫描范围内的可加载bean，然后查找哪些bean上的属性和方法上有@Resource注解；<br>找到@Resource注解后，判断@Resource注解括号中的name属性是否为空，如果为空：看spring容器中的bean的id与@Resource要注解的那个变量属性名是否相同，如相同，匹配成功；如果不相同，看spring容器中bean的id对应的类型是否与@Resource要注解的那个变量属性对应的类型是否相等，若相等，匹配成功，若不相等，匹配失败。<br>如果@Resource注解括号中的name属性不为空，看name的属性值和容器中的bean的id名是否相等，如相等，则匹配成功；如不相等，则匹配失败。<br>示例如下：<br>一、@Resource注解注解的name属性不为空<br>首先创建Person类，并纳入容器中管理：</p><pre><code>package com.lzj.springboot.resource;import org.springframework.stereotype.Component;/*纳入容器中后，bean的id名字为ps*/@Component(value=&quot;ps&quot;)public class Person &#123;    public void say()&#123;        System.out.println(&quot;------say()------&quot;);    &#125;&#125;</code></pre><p>然后创建Man类，类中的属性依赖Person类型的bean</p><pre><code>package com.lzj.springboot.resource;import javax.annotation.Resource;import org.springframework.stereotype.Component;@Componentpublic class Man &#123;    /*从容器中取id名字为ps的bean，如果找不到该bean，spring启动过程中就会报错，表示把Man类型的bean注入到容器中不成功，因为person的属性依赖注入的时候就出错了，所以创建Man的bean的时候肯定不成功。*/    @Resource(name=&quot;ps&quot;)    private Person person;    /*依赖注入失败，因为Person类型注入到容器中的bean的id指定为ps,所以从容器中获取id为person的bean就会失败*/    //  @Resource(name=&quot;person&quot;)    //  private Person ps;    public void work()&#123;        person.say();        System.out.println(&quot;------work()------&quot;);    &#125;&#125;</code></pre><p>启动类为：</p><pre><code>@SpringBootApplication(scanBasePackages=&quot;com.lzj.springboot&quot;)public class App &#123;    public static void main(String[] args) &#123;        SpringApplication app = new SpringApplication(App.class);        ConfigurableApplicationContext context = app.run(args);        /*从容器中获取Man类型的bean，如果Man类型的bean注入到容器成功，此时就能获取到；如果注入不成功，则获取不到。注入不成功，就会有可能是Man中的@Resource注解的依赖注入没有成功*/        context.getBean(Man.class).work();        context.close();    &#125;&#125;</code></pre><p>启动工程，输出如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">------say()------</span><br><span class="line">------work()------</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>二、@Resource注解注解的name属性为空<br>1、@Resource要注解的那个变量属性与容器中的bean的id的名字相等<br>启动类和Person的类与相面一样，下面直接修改Man类如下：</p><pre><code>@Componentpublic class Man &#123;    /*@Resource注解的属性变量ps与容器中的bean的id名字ps相等，可以匹配*/    @Resource    private Person ps;    public void work()&#123;        ps.say();        System.out.println(&quot;------work()------&quot;);    &#125;&#125;</code></pre><p>2、@Resource要注解的那个变量属性与容器中的bean的id的名字不相等<br>启动类和Person的类与相面一样，下面直接修改Man类如下：</p><pre><code>@Componentpublic class Man &#123;    /*@Resource注解的属性变量ps与容器中的bean的id名字ps不相等，然后通过bean的类型判断：person变量属性的类型为Person类，容器中的id为ps的bean的类型也为Person类型，因此此种情况下也可以匹配*/    @Resource    private Person person;    public void work()&#123;        person.say();        System.out.println(&quot;------work()------&quot;);    &#125; &#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件结构</title>
      <link href="/2023/11/11/java/ChatGpt/%E9%A1%B9%E7%9B%AE%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84/"/>
      <url>/2023/11/11/java/ChatGpt/%E9%A1%B9%E7%9B%AE%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h1 id="常见的文件夹结构"><a href="#常见的文件夹结构" class="headerlink" title="常见的文件夹结构"></a>常见的文件夹结构</h1><p>学习别人是怎么创建文件结构的。</p><p>在确定ai-beehive的总项目之后，确定的有四个模块。</p><ul><li>beehive-base</li><li>beehive-bootstrap</li><li>beehive-cell</li><li>beehive-web</li></ul><h2 id="beehive-base"><a href="#beehive-base" class="headerlink" title="beehive-base"></a>beehive-base</h2><p>主要负责的是一些框架的构建</p><ul><li>annnotation（注解）</li><li>cache</li><li>config</li><li>constant</li><li>domain</li><li>enums</li><li>exception</li><li>handler</li><li>mapper</li><li>resource</li><li>util</li></ul><h3 id="annotation（注解）"><a href="#annotation（注解）" class="headerlink" title="annotation（注解）"></a>annotation（注解）</h3><p>自定义的注解的存放文件夹</p><h2 id="beehive-bootstrap"><a href="#beehive-bootstrap" class="headerlink" title="beehive-bootstrap"></a>beehive-bootstrap</h2><p>项目的启动目录，使用bootstrap框架来快速搭建。</p><p>本身不实现任何逻辑，而是简单的启动模块。</p><h2 id="beehive-cell"><a href="#beehive-cell" class="headerlink" title="beehive-cell"></a>beehive-cell</h2><p>在beehive-base的约束下，具体来根据不同LLM的接口调用。</p><h2 id="beehive-web"><a href="#beehive-web" class="headerlink" title="beehive-web"></a>beehive-web</h2><p>在beehive-bootstrap的约束下，对于前端的回应的具体约束与实现。</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基础模板</title>
      <link href="/2023/11/09/java/ChatGpt/README/"/>
      <url>/2023/11/09/java/ChatGpt/README/</url>
      
        <content type="html"><![CDATA[<h2 id="项目待完成内容"><a href="#项目待完成内容" class="headerlink" title="项目待完成内容"></a>项目待完成内容</h2><ol><li>分析一下几个package之间怎么相互引用与涉及管理</li><li>明确不同的文件名的命名方式</li><li>把这个部署到linux机器上并把部署过程用博客记录下来</li><li></li></ol><p>描述</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>分析原因</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>如何避免</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基础模板</title>
      <link href="/2023/10/31/A%E5%9F%BA%E7%A1%80%E6%A8%A1%E6%9D%BF/base/"/>
      <url>/2023/10/31/A%E5%9F%BA%E7%A1%80%E6%A8%A1%E6%9D%BF/base/</url>
      
        <content type="html"><![CDATA[<h2 id="a"><a href="#a" class="headerlink" title="a"></a>a</h2><p>描述</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>分析原因</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>如何避免</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>知错就改</title>
      <link href="/2023/10/31/A%E5%9F%BA%E7%A1%80%E6%A8%A1%E6%9D%BF/%E7%9F%A5%E9%94%99%E5%B0%B1%E6%94%B9/"/>
      <url>/2023/10/31/A%E5%9F%BA%E7%A1%80%E6%A8%A1%E6%9D%BF/%E7%9F%A5%E9%94%99%E5%B0%B1%E6%94%B9/</url>
      
        <content type="html"><![CDATA[<h2 id="错误现象"><a href="#错误现象" class="headerlink" title="错误现象"></a>错误现象</h2><p>描述</p><h2 id="错误分析"><a href="#错误分析" class="headerlink" title="错误分析"></a>错误分析</h2><p>分析原因</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>如何解决</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>如何避免</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基础模板</title>
      <link href="/2023/10/31/java/ChatGpt/base/"/>
      <url>/2023/10/31/java/ChatGpt/base/</url>
      
        <content type="html"><![CDATA[<h2 id="a"><a href="#a" class="headerlink" title="a"></a>a</h2><p>首先我先要思考一下。</p><p>依赖注入这个概念我要明确。</p><p>依赖注入主要作用就是解耦合。</p><p>常常通过的方式就是将原本类中自己实例化的东西，修改成为通过某种方式传入，可以说就是一种多态的思想。</p><p>传入的方案：</p><ul><li>构造函数引入</li><li>set方法传入</li><li>某种注释引入（java中的<code>@Autowired</code>）</li><li></li></ul><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>分析原因</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>如何避免</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基础模板</title>
      <link href="/2023/10/31/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/github/git%E7%9A%84%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/"/>
      <url>/2023/10/31/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/github/git%E7%9A%84%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="https://cdn.jsdelivr.net/gh/xudingxie/DrawingBed/pictures/images.jpg" alt="img"></p><p>作为程序员怎么可能不接触github。不去使用git去做版本管理。但是平时我总是对于git的命令一知半解。现在趁着这个机会把整体过一下。</p><h2 id="常见命令"><a href="#常见命令" class="headerlink" title="常见命令"></a>常见命令</h2><h3 id="克隆-新建仓库"><a href="#克隆-新建仓库" class="headerlink" title="克隆&#x2F;新建仓库"></a>克隆&#x2F;新建仓库</h3><p>新建仓库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><p>克隆仓库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone &lt;GitHub 仓库的 URL&gt;</span><br></pre></td></tr></table></figure><h3 id="从云端拉取信息"><a href="#从云端拉取信息" class="headerlink" title="从云端拉取信息"></a>从云端拉取信息</h3><ol><li>获取信息，暂不合并</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin</span><br></pre></td></tr></table></figure><p>1.1. 获取信息后，合并信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge</span><br></pre></td></tr></table></figure><p>1.2. 获取信息后，重置为云端信息.不保留当前信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard origin/main</span><br></pre></td></tr></table></figure><ol start="2"><li><p>获取信息，并尝试合并</p><p>相当于1与1.1的复合</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin main</span><br></pre></td></tr></table></figure><h3 id="提交信息到云端仓库"><a href="#提交信息到云端仓库" class="headerlink" title="提交信息到云端仓库"></a>提交信息到云端仓库</h3><ol><li>把信息保存暂存区</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><ol><li>把信息保存到本地分支，并提交信息记录描述</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &#x27;fix:****&#x27;</span><br></pre></td></tr></table></figure><p>-m ‘**’:表示附加信息’fix:等’。作为提交记录</p><ol><li>信息上传到云端</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin main</span><br></pre></td></tr></table></figure><p>从本地的main分支上传到远端存储库</p><h3 id="查看与设置配置"><a href="#查看与设置配置" class="headerlink" title="查看与设置配置"></a>查看与设置配置</h3><p>查看所有配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --list</span><br></pre></td></tr></table></figure><h3 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h3><p>要在Git中设置代理，你可以使用以下命令：</p><ol><li>设置全局代理（对所有仓库生效）：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bashCopy codegit config --global http.proxy http://代理服务器:端口</span><br><span class="line">git config --global https.proxy https://代理服务器:端口</span><br></pre></td></tr></table></figure><p>请将 “代理服务器” 和 “端口” 替换为你的代理服务器的实际地址和端口号。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bashCopy codegit config --global http.proxy http://proxy.example.com:8080</span><br><span class="line">git config --global https.proxy https://proxy.example.com:8080</span><br></pre></td></tr></table></figure><ol><li>如果你只想为特定仓库设置代理，可以进入该仓库的目录并运行以下命令：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bashCopy codegit config http.proxy http://代理服务器:端口</span><br><span class="line">git config https.proxy https://代理服务器:端口</span><br></pre></td></tr></table></figure><p>同样，将 “代理服务器” 和 “端口” 替换为你的代理服务器的实际地址和端口号。</p><ol><li>要禁用代理，可以运行以下命令：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bashCopy codegit config --global --unset http.proxy</span><br><span class="line">git config --global --unset https.proxy</span><br></pre></td></tr></table></figure><p>或者对于特定仓库：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bashCopy codegit config --unset http.proxy</span><br><span class="line">git config --unset https.proxy</span><br></pre></td></tr></table></figure><p>这将从Git配置中删除代理设置，使Git不再使用代理。</p><p>请注意，代理服务器的设置可能因你的网络环境和需求而有所不同，确保按照你的代理服务器提供商或网络管理员的建议来设置代理。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>如何避免</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>动态样式</title>
      <link href="/2023/10/31/%E5%89%8D%E7%AB%AF/%E5%8A%A8%E6%80%81%E6%A0%B7%E5%BC%8F/"/>
      <url>/2023/10/31/%E5%89%8D%E7%AB%AF/%E5%8A%A8%E6%80%81%E6%A0%B7%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="动态样式"><a href="#动态样式" class="headerlink" title="动态样式"></a>动态样式</h1><p>在写样式的时候总会遇到自己希望根据不同的情况来展示不同的样式。</p><p>所以在这里展示一些方案。</p><h3 id="方案1-样式的动态绑定"><a href="#方案1-样式的动态绑定" class="headerlink" title="方案1 样式的动态绑定"></a>方案1 样式的动态绑定</h3><p>简单来说直接绑定某个变量。最终根据返回的变量名称来展示不同的变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div :class=&quot;changedclass&quot;&gt;</span><br><span class="line">    </span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h3 id="方案2-样式固定，但是样式中去绑定变量"><a href="#方案2-样式固定，但是样式中去绑定变量" class="headerlink" title="方案2 样式固定，但是样式中去绑定变量"></a>方案2 样式固定，但是样式中去绑定变量</h3><p>简单来说是使用v-bind去绑定变量区的某个变量。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line">:deep(.product-descriptions-status) &#123;</span><br><span class="line">    background-color: v-bind(productStatusColor);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>关于hexo的目录设置，我心中的理想的方案:</p><p>​categories是有分级设置的。所以可以通过分级来进行类似书页的目录的格式。</p><p>顶级目录类似书名，次级目录就是目录中的内容。最终落实就是文章的标题。很简单但也似乎不那么简单。那样出现目录层次不一的情况，比如顶级目录下的文章比较多。就会出现问题。这个问题应该是由作者来解决。但是如果二级目录过多有什么问题呢？也会出现页面放不下的可能性。可以翻页。ok</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo未完成内容</title>
      <link href="/2023/10/30/hexo/%E5%BE%85%E5%8A%9E%E4%BA%8B%E9%A1%B9/"/>
      <url>/2023/10/30/hexo/%E5%BE%85%E5%8A%9E%E4%BA%8B%E9%A1%B9/</url>
      
        <content type="html"><![CDATA[<p>博客当前的的缺陷</p><ol><li><del>登陆加载的图标</del></li><li><del>首页的公众号</del></li><li><del>文章的图片</del></li><li>内容的标题的无题的修改</li></ol><p>关于hexo的目录设置，我心中的理想的方案:</p><p>​categories是有分级设置的。所以可以通过分级来进行类似书页的目录的格式。</p><p>顶级目录类似书名，次级目录就是目录中的内容。最终落实就是文章的标题。很简单但也似乎不那么简单。那样出现目录层次不一的情况，比如顶级目录下的文章比较多。就会出现问题。这个问题应该是由作者来解决。但是如果二级目录过多有什么问题呢？也会出现页面放不下的可能性。可以翻页。ok</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test文件</title>
      <link href="/2023/10/25/test/test/"/>
      <url>/2023/10/25/test/test/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo new在子目录创建文章</title>
      <link href="/2023/10/22/hexo/hexo%E5%9C%A8%E5%AD%90%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%AD/"/>
      <url>/2023/10/22/hexo/hexo%E5%9C%A8%E5%AD%90%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%AD/</url>
      
        <content type="html"><![CDATA[<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>在博客写的比较多之后，看到目录中其实有很多的文件，看着比较头疼。所以有的时候希望能够把文件放到不同文件夹中来区分他们来分类。</p><h2 id="实现方案"><a href="#实现方案" class="headerlink" title="实现方案"></a>实现方案</h2><p>命令</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post -p hexo/newFile</span><br></pre></td></tr></table></figure><p>以上的命令就是在_post文件夹下创建一个hexo文件夹，在hexo文件夹中创建一个newFile.md的文件夹</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WPF拷贝项目引用全部失效</title>
      <link href="/2023/10/18/WinForm/WPF%E6%8B%B7%E8%B4%9D%E9%A1%B9%E7%9B%AE%E5%BC%95%E7%94%A8%E5%85%A8%E9%83%A8%E5%A4%B1%E6%95%88/"/>
      <url>/2023/10/18/WinForm/WPF%E6%8B%B7%E8%B4%9D%E9%A1%B9%E7%9B%AE%E5%BC%95%E7%94%A8%E5%85%A8%E9%83%A8%E5%A4%B1%E6%95%88/</url>
      
        <content type="html"><![CDATA[<h1 id="WPF项目拷贝引用全部失效"><a href="#WPF项目拷贝引用全部失效" class="headerlink" title="WPF项目拷贝引用全部失效"></a>WPF项目拷贝引用全部失效</h1><p>今天接手同事的项目，运行花了一定的时间。记录一下中间踩坑的记录</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>打开压缩文件夹，没有sln文件，直接通过csproj文件打开项目。发现无法运行，提示各种环境都没有。<br>打开引用，发现所有引用全部黄色警告提示，判断所有引用失效。</p><h3 id="准备首先是Nuget包管理无法打开，点击无反应。"><a href="#准备首先是Nuget包管理无法打开，点击无反应。" class="headerlink" title="准备首先是Nuget包管理无法打开，点击无反应。"></a>准备首先是Nuget包管理无法打开，点击无反应。</h3><p>因为需要Sln文件之后才可以NuGet管理，所以应该先创建，所以可以先退出项目，会提示修改出一个sln文件。<br>点击确定，重新通过sln文件打开项目。发现Nuget包管理可以正常弹出界面。</p><h3 id="已下载，但是还是提示没有找到或配置"><a href="#已下载，但是还是提示没有找到或配置" class="headerlink" title="已下载，但是还是提示没有找到或配置"></a>已下载，但是还是提示没有找到或配置</h3><p>Nuget包会自动提示下载那些已经配置的包，下载完成后还是提示，重新启动项目还是会报错。<br>错误提示类似这样，开头就是提示包没有。<br><a href="https://imgse.com/i/p9lEmLD"><img src="https://s1.ax1x.com/2023/04/28/p9lEmLD.md.png" alt="p9lEmLD.md.png"></a></p><p>怀疑是NUGET的预编译的大坑。编译的记录报错下来了，所以我们需要重新生成。<br>打开csproj项目，删除文件内下面所有内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;Import Project=&quot;..\packages\System.Data.SQLite.Core.1.0.109.2\build\net46\System.Data.SQLite.Core.targets&quot; Condition=&quot;Exists(&#x27;..\packages\System.Data.SQLite.Core.1.0.109.2\build\net46\System.Data.SQLite.Core.targets&#x27;)&quot; /&gt;</span><br><span class="line"> &lt;Target Name=&quot;EnsureNuGetPackageBuildImports&quot; BeforeTargets=&quot;PrepareForBuild&quot;&gt;</span><br><span class="line">   &lt;PropertyGroup&gt;</span><br><span class="line">     &lt;ErrorText&gt;这台计算机上缺少此项目引用的 NuGet 程序包。使用“NuGet 程序包还原”可下载这些程序包。有关更多信息，请参见 http://go.microsoft.com/fwlink/?LinkID=322105。缺少的文件是 &#123;0&#125;。&lt;/ErrorText&gt;</span><br><span class="line">   &lt;/PropertyGroup&gt;</span><br><span class="line">   &lt;Error Condition=&quot;!Exists(&#x27;..\packages\System.Data.SQLite.Core.1.0.109.2\build\net46\System.Data.SQLite.Core.targets&#x27;)&quot; Text=&quot;$([System.String]::Format(&#x27;$(ErrorText)&#x27;, &#x27;..\packages\System.Data.SQLite.Core.1.0.109.2\build\net46\System.Data.SQLite.Core.targets&#x27;))&quot; /&gt;</span><br><span class="line"> &lt;/Target&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>删除完毕，重新打开。问题解决。</p>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
          <category> 日常学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 知错就改 </tag>
            
            <tag> 基础学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win服务-知错就改</title>
      <link href="/2023/10/18/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/win%E6%9C%8D%E5%8A%A1-%E7%9F%A5%E9%94%99%E5%B0%B1%E6%94%B9/"/>
      <url>/2023/10/18/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/win%E6%9C%8D%E5%8A%A1-%E7%9F%A5%E9%94%99%E5%B0%B1%E6%94%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="win服务的坑"><a href="#win服务的坑" class="headerlink" title="win服务的坑"></a>win服务的坑</h1><h2 id="1-系统错误5，拒绝访问"><a href="#1-系统错误5，拒绝访问" class="headerlink" title="1 系统错误5，拒绝访问"></a>1 系统错误5，拒绝访问</h2><p>已经管理员依旧现实拒绝访问5<br><a href="https://imgse.com/i/p9BjHUK"><img src="https://s1.ax1x.com/2023/05/10/p9BjHUK.md.png" alt="p9BjHUK.md.png"></a>  </p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><ol><li>在任务管理器中选择对应的服务，右键选择打开服务。找到对应的服务<br><a href="https://imgse.com/i/p9Bjjvd"><img src="https://s1.ax1x.com/2023/05/10/p9Bjjvd.png" alt="p9Bjjvd.png"></a>  </li><li>请检查登陆，是不是本地用户登陆。请选择本地系统账户。<br><a href="https://imgse.com/i/p9Bvmbq"><img src="https://s1.ax1x.com/2023/05/10/p9Bvmbq.png" alt="p9Bvmbq.png"></a><br>这个时候重新启动服务执行成功</li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> <span class="built_in">start</span> 服务名称</span><br></pre></td></tr></table></figure><p>这是临时补救方案，重新安装还是会出现问题。<br>下面是永久方案。<br>在项目中点击ProjectInstaller.cs<br>点击serviceProcessInstaller1,属性页中把Account修改成为LocalSystem<br><a href="https://imgse.com/i/p9BxQeI"><img src="https://s1.ax1x.com/2023/05/10/p9BxQeI.png" alt="p9BxQeI.png"></a>  </p><ol start="3"><li>如果步骤2在报错的时候还是提示错误，右键选择属性，把禁用修改成为自动或者手动<br><a href="https://imgse.com/i/p9BvA2Q"><img src="https://s1.ax1x.com/2023/05/10/p9BvA2Q.png" alt="p9BvA2Q.png"></a></li></ol><h2 id="2-系统错误，无法启动服务，原因可能是已经被禁用或与其相关联的设备没有启动。"><a href="#2-系统错误，无法启动服务，原因可能是已经被禁用或与其相关联的设备没有启动。" class="headerlink" title="2 系统错误，无法启动服务，原因可能是已经被禁用或与其相关联的设备没有启动。"></a>2 系统错误，无法启动服务，原因可能是已经被禁用或与其相关联的设备没有启动。</h2><p>卸载安装之后，提示如下错误<br><a href="https://imgse.com/i/p9Bv8xJ"><img src="https://s1.ax1x.com/2023/05/10/p9Bv8xJ.md.png" alt="p9Bv8xJ.md.png"></a><br>但是查看依存关系，发现并没有任何依存。<br><a href="https://imgse.com/i/p9Bv0PO"><img src="https://s1.ax1x.com/2023/05/10/p9Bv0PO.png" alt="p9Bv0PO.png"></a><br>可能是你卸载了，但是没有死透。<br>我就是，之前有打开任务管理器此时窗口A，进入服务界面，右键打开服务了，此时打开新窗口B。<br>查看服务，然后窗口B最小化。<br>此时卸载服务a，卸载流程很顺利，但是此时把最小化的窗口B打开发现服务a还在，右键刷新服务a也在。<br>此时应该关闭这个窗口B，重新安装即可。  </p><h2 id="3-如果服务的stop有问题，就无法关闭服务"><a href="#3-如果服务的stop有问题，就无法关闭服务" class="headerlink" title="3 如果服务的stop有问题，就无法关闭服务"></a>3 如果服务的stop有问题，就无法关闭服务</h2><p>当服务的关闭的代码运行会出现错误，这个时候服务就无法通过手动或者直接的关闭方案。只能强行关闭。  </p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">taskkill</span> /f /pid pidNum</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
          <category> 日常学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 知错就改 </tag>
            
            <tag> 基础学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSharp中事件，action等讲解</title>
      <link href="/2023/10/18/C%20Sharp/C%20Sharp%20%E4%BA%8B%E4%BB%B6%EF%BC%8Caction%E7%AD%89%E8%AE%B2%E8%A7%A3/"/>
      <url>/2023/10/18/C%20Sharp/C%20Sharp%20%E4%BA%8B%E4%BB%B6%EF%BC%8Caction%E7%AD%89%E8%AE%B2%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="delegate-event-Action-Func关系讲解"><a href="#delegate-event-Action-Func关系讲解" class="headerlink" title="delegate,event,Action,Func关系讲解"></a>delegate,event,Action,Func关系讲解</h1><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><ul><li><p>delegate是一切的基础。</p></li><li><p>event是实践中优化的使用，比delegate多了点限制。现在常用：比如winform中的内容。</p></li><li><p>Action，Func是delegate的更加的简写方案。</p></li></ul><h2 id="delegate"><a href="#delegate" class="headerlink" title="delegate"></a>delegate</h2><p>这个定义的是一个委托类型。也相当于方法的类型（指定了输入输出的内容）。</p><p>delegate用法目前两种：</p><ol><li>函数泛型</li><li>订阅发布</li></ol><p>理解下来其实都是一样的做法，它们都是订阅。这个函数类型其实可以理解成为一样的。</p><blockquote><p>前者是把声明出来的delegate作为函数的类型来使用。</p><p>后者是把声明出来的方法类型再次实例化。具体到某种方法A，开放A出来给所有程序调用去订阅。订阅的要求就是方法B必须与方法A具有相同的输入输出。</p></blockquote><h3 id="函数泛型"><a href="#函数泛型" class="headerlink" title="函数泛型"></a>函数泛型</h3><p>可以指定某种方法的使用以及返回值</p><p>定义泛型方法和相对应的方法</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Cat</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="built_in">double</span> <span class="title">MathFunction</span>(<span class="params"><span class="built_in">double</span> x, <span class="built_in">double</span> y</span>)</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">double</span> <span class="title">CatDie</span>(<span class="params"><span class="built_in">double</span> oldVal, <span class="built_in">double</span> currentVal</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;cat die&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> oldVal - currentVal;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">double</span> <span class="title">CatBirth</span>(<span class="params"><span class="built_in">double</span> current, <span class="built_in">double</span> newVal</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;cat give birth&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> newVal + current;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">GetActualCatNum</span>(<span class="params">MathFunction mathFunction,<span class="built_in">double</span> x,<span class="built_in">double</span> y</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="keyword">value</span>=mathFunction(x,y);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;current value:&quot;</span>+<span class="keyword">value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在另外的类中使用</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Cat cat = <span class="keyword">new</span> Cat();</span><br><span class="line">cat.GetActualCatNum(cat.CatDie, <span class="number">12</span>, <span class="number">3</span>);</span><br><span class="line">Console.ReadLine();</span><br></pre></td></tr></table></figure><h3 id="订阅发布"><a href="#订阅发布" class="headerlink" title="订阅发布"></a>订阅发布</h3><p>工作中经常使用的对象：订阅一个内容。让其他方法去接收订阅的消息。</p><p>在多线程的环境中非常常见。</p><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><p>演示一个简单订阅发布模式；</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Cat</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="built_in">double</span> <span class="title">MathFunction</span>(<span class="params"><span class="built_in">double</span> x, <span class="built_in">double</span> y</span>)</span>;</span><br><span class="line">    <span class="keyword">public</span> MathFunction CatChange;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>订阅者：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Mouse</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">double</span> <span class="title">CatAlarm</span>(<span class="params"><span class="built_in">double</span> x,<span class="built_in">double</span> y</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Cat number change&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>订阅与发生地点：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Cat cat = <span class="keyword">new</span> Cat();</span><br><span class="line">Mouse mouse = <span class="keyword">new</span> Mouse();</span><br><span class="line">cat.CatChange += mouse.CatAlarm;</span><br><span class="line">cat.CatChange.Invoke(<span class="number">28</span>,<span class="number">4</span>);</span><br></pre></td></tr></table></figure><blockquote><p>对案例进行分析。在cat中创建一个发布者，mouse创建了一个订阅者。在第三方进行订阅，并触发猫数目变化。此时订阅者就收到消息，打印相应内容。</p></blockquote><h4 id="用法讲解"><a href="#用法讲解" class="headerlink" title="用法讲解"></a>用法讲解</h4><p>示例中使用+&#x3D;，此外还有-&#x3D; ，&#x3D;这几个符号来进行订阅发布。</p><p>多个订阅，按照顺序依次向下。</p><p>多个订阅，其中一个抛出异常，后续订阅不进行。</p><p>多个订阅，异步的订阅会以异步的形式完成。</p><h2 id="event"><a href="#event" class="headerlink" title="event"></a>event</h2><p>这个是为了解决delegate的一些问题出现的。比如前者&#x3D;这个有可能会误用导致前面的订阅内容清空，并不是很好的情况。</p><p>事件event是一种特殊的委托，它只能+&#x3D;，-&#x3D;，不能直接用&#x3D;。event在定义类中（发布者）是可以直接&#x3D;的，但是在其他类中（订阅者）就只能+&#x3D; -&#x3D;了，<strong>也就是说发布者发布一个事件后，订阅者针对他只能进行自身的订阅和取消。</strong></p><p>相比较delegate的一些优化内容：</p><ul><li>订阅者只能进行自身的订阅和取消，不能全部清空。</li><li>事件的触发只能在事件的发布者内容，外部不能触发。</li></ul><h3 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h3><p>事件的发布者：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Cat</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="built_in">double</span> <span class="title">MathFunction</span>(<span class="params"><span class="built_in">double</span> x, <span class="built_in">double</span> y</span>)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">event</span> MathFunction CatEvent;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnCatEvent</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        CatEvent(<span class="number">38</span>, <span class="number">5</span>);</span><br><span class="line">        CatEvent.Invoke(<span class="number">38</span>, <span class="number">5</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>事件的订阅者</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Mouse</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">double</span> <span class="title">CatAlarm</span>(<span class="params"><span class="built_in">double</span> x,<span class="built_in">double</span> y</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Cat number change&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>事件进行订阅</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Cat cat = <span class="keyword">new</span> Cat();</span><br><span class="line">Mouse mouse = <span class="keyword">new</span> Mouse();</span><br><span class="line">cat.CatEvent += mouse.CatAlarm;</span><br></pre></td></tr></table></figure><h4 id="规范使用"><a href="#规范使用" class="headerlink" title="规范使用"></a>规范使用</h4><p>经过长久的经验积累后，人们发现，绝大多数事件的定义，是用public delegate void XXX(object sender, EventArgs e);这样一个委托原型进行定义的，是一件重复性的工作，于是，EventHandler应运而生。它的出现就是为了避免这种重复性工作，并建议尽量使用该类型作为事件的原型。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//@sender: 引发事件的对象</span></span><br><span class="line"><span class="comment">//@e: 传递的参数</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="keyword">void</span> <span class="title">EventHandler</span>(<span class="params"><span class="built_in">object</span> sender, myEventArgs e</span>)</span>;</span><br><span class="line"><span class="comment">//使用</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">event</span> EventHandler emd;</span><br></pre></td></tr></table></figure><p>其中：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">MyEventArgs</span>:<span class="title">EventArgs</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>常见命名规范：以EventHandler结尾，以EventArgs结尾</p><h2 id="Action，Func"><a href="#Action，Func" class="headerlink" title="Action，Func"></a>Action，Func</h2><p>本文最开始探讨委托，然后直接顺到了事件的相关话题上。其实，关于委托还有一个重点话题漏掉了，那就是Func与Action。</p><p>在委托delegate出现了很久以后，微软的.NET设计者们终于领悟到，其实所有的委托定义都可以归纳并简化成只用Func与Action这两个语法糖来表示。其中，Func代表有返回值的委托，Action代表无返回值的委托。有了它们两，我们以后就不再需要用关键字delegate来定义委托了。</p><p>比如一下方案：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="built_in">double</span> <span class="title">MathFunction1</span>(<span class="params"><span class="built_in">double</span> x, <span class="built_in">double</span> y</span>)</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="built_in">double</span> <span class="title">MathFunction2</span>(<span class="params"><span class="built_in">double</span> x, <span class="built_in">double</span> y</span>)</span>;</span><br><span class="line"><span class="comment">//无论在泛型方案还是说在发布订阅中都完全相同的作用。没有区别。</span></span><br><span class="line"><span class="comment">//完全可以直接使用</span></span><br><span class="line">Func&lt;<span class="built_in">double</span>,<span class="built_in">double</span>,<span class="built_in">double</span>&gt;</span><br><span class="line"><span class="comment">//来代替。</span></span><br></pre></td></tr></table></figure><blockquote><p>综上Action，Func就是delegate的简写方法。</p></blockquote><h3 id="简化delegate中的示例"><a href="#简化delegate中的示例" class="headerlink" title="简化delegate中的示例"></a>简化delegate中的示例</h3><p>此处就简写一下上面的示例</p><h4 id="泛型方案"><a href="#泛型方案" class="headerlink" title="泛型方案"></a>泛型方案</h4><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Cat</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">GetActualCatNum_2</span>(<span class="params">Func&lt;<span class="built_in">double</span>,<span class="built_in">double</span>,<span class="built_in">double</span>&gt; myFunc, <span class="built_in">double</span> x, <span class="built_in">double</span> y</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="keyword">value</span> = myFunc(x, y);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;current value:&quot;</span> + <span class="keyword">value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用泛型</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Cat cat = <span class="keyword">new</span> Cat();</span><br><span class="line">cat.GetActualCatNum_2(cat.CatDie, <span class="number">12</span>, <span class="number">3</span>);</span><br></pre></td></tr></table></figure><h4 id="发布订阅-delegate篇"><a href="#发布订阅-delegate篇" class="headerlink" title="发布订阅-delegate篇"></a>发布订阅-delegate篇</h4><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Cat</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Func&lt;<span class="built_in">double</span>,<span class="built_in">double</span>,<span class="built_in">double</span>&gt; CatChange_2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>订阅者：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Mouse</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">double</span> <span class="title">CatAlarm</span>(<span class="params"><span class="built_in">double</span> x,<span class="built_in">double</span> y</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Cat number change&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>订阅与发生地点：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Cat cat = <span class="keyword">new</span> Cat();</span><br><span class="line">Mouse mouse = <span class="keyword">new</span> Mouse();</span><br><span class="line">cat.CatChange_2 += mouse.CatAlarm;</span><br><span class="line">cat.CatChange_2.Invoke(<span class="number">28</span>,<span class="number">4</span>);</span><br></pre></td></tr></table></figure><h4 id="发布订阅-event篇"><a href="#发布订阅-event篇" class="headerlink" title="发布订阅-event篇"></a>发布订阅-event篇</h4><p>发布者：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Cat</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">event</span> Func&lt;<span class="built_in">double</span>, <span class="built_in">double</span>, <span class="built_in">double</span>&gt; CatEvent_2;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnCatEvent</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        CatEvent_2(<span class="number">40</span>, <span class="number">3</span>);</span><br><span class="line">        CatEvent_2.Invoke(<span class="number">40</span>, <span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>订阅者：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Mouse</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">double</span> <span class="title">CatAlarm</span>(<span class="params"><span class="built_in">double</span> x,<span class="built_in">double</span> y</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Cat number change&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>进行订阅：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Cat cat = <span class="keyword">new</span> Cat();</span><br><span class="line">Mouse mouse = <span class="keyword">new</span> Mouse();</span><br><span class="line">cat.CatEvent_2 += mouse.CatAlarm;</span><br><span class="line">cat.OnCatEvent();</span><br></pre></td></tr></table></figure><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>[参考资料](<a href="https://zhuanlan.zhihu.com/p/413733828">C#中委托（delegate）与事件（event）的快速理解 - 知乎 (zhihu.com)</a>)</p>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
          <category> 日常学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 基础学习 </tag>
            
            <tag> 事件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSharp中logger4-知错就改-不生成对应元素</title>
      <link href="/2023/10/18/C%20Sharp/C%20Sharp%20%E4%B8%ADlogger4-%E7%9F%A5%E9%94%99%E5%B0%B1%E6%94%B9-%E4%B8%8D%E7%94%9F%E6%88%90%E5%AF%B9%E5%BA%94%E5%85%83%E7%B4%A0/"/>
      <url>/2023/10/18/C%20Sharp/C%20Sharp%20%E4%B8%ADlogger4-%E7%9F%A5%E9%94%99%E5%B0%B1%E6%94%B9-%E4%B8%8D%E7%94%9F%E6%88%90%E5%AF%B9%E5%BA%94%E5%85%83%E7%B4%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="logger4-知错就改-无法生成与写入"><a href="#logger4-知错就改-无法生成与写入" class="headerlink" title="logger4-知错就改-无法生成与写入"></a>logger4-知错就改-无法生成与写入</h1><h2 id="错误现象"><a href="#错误现象" class="headerlink" title="错误现象"></a>错误现象</h2><p>无论怎么写都不对。断点检查，发现是权限不足。好像是配置不够</p><p><img src="https://cdn.jsdelivr.net/gh/2508838014/DrawingBed/pictures/image-20230720185541135.png" alt="image-20230720185541135"></p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>把对应的config文件复制到输出目录。</p><p><img src="https://cdn.jsdelivr.net/gh/2508838014/DrawingBed/pictures/image-20230720185635223.png" alt="image-20230720185635223"></p><p>如图所示，就是把对应的图片显示出来。</p>]]></content>
      
      
      <categories>
          
          <category> logger4 - 知错就改 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> logger4 </tag>
            
            <tag> 知错就改 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub绑定域名</title>
      <link href="/2023/10/18/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/github/GitHub%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/"/>
      <url>/2023/10/18/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/github/GitHub%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="GitHub绑定域名"><a href="#GitHub绑定域名" class="headerlink" title="GitHub绑定域名"></a>GitHub绑定域名</h1><p>今天突发奇想把github的博客绑定好上自己的域名。下面是一些步骤和遇到的问题</p><p>步骤：</p><ol><li>记录ipv4的信息。</li><li>将域名绑定到原本的github的page的地址</li><li>在github的pages中绑定域名。</li></ol><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><h3 id="不满足启用https的条件"><a href="#不满足启用https的条件" class="headerlink" title="不满足启用https的条件"></a>不满足启用https的条件</h3><p>enforce https为灰色</p><p>提示：There isn’t a GitHub Pages site here. If you’re trying to publish one, read the full documentation to learn how to set up GitHub Pages for your repository, organization, or user account.</p><p>解决方案：</p><ol><li>cloundflare中开启了tls。将tls关闭。删除github中绑定的域名。重新添加。</li><li>该方案来自网络。此处仅仅是收集做参考。可以删除域名之后，重新添加并且绑定。即可。</li></ol><h3 id="绑定成功但是页面没有显示。直接为空。"><a href="#绑定成功但是页面没有显示。直接为空。" class="headerlink" title="绑定成功但是页面没有显示。直接为空。"></a>绑定成功但是页面没有显示。直接为空。</h3><p>我在操作的时候开始是没有按照步骤完成的。首先进行了操作2.并没有进行操作1就会导致这个问题。</p><h3 id="绑定成功访问并没有访问到我的页面。但是界面中已经出现github的404"><a href="#绑定成功访问并没有访问到我的页面。但是界面中已经出现github的404" class="headerlink" title="绑定成功访问并没有访问到我的页面。但是界面中已经出现github的404."></a>绑定成功访问并没有访问到我的页面。但是界面中已经出现github的404.</h3><p>这个我没有遇到，但是此处给一个排查的思路。</p><p>我是在GitHub的绑定域名已经成功，但是此时还没有启用https。此时我如果在github的界面中进行删除绑定的域名就会出现这个问题。</p>]]></content>
      
      
      <categories>
          
          <category> 域名绑定 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 域名绑定 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>区分不同的下载版本</title>
      <link href="/2023/10/18/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/%E5%8C%BA%E5%88%86%E4%B8%8D%E5%90%8C%E7%9A%84%E4%B8%8B%E8%BD%BD%E7%89%88%E6%9C%AC/"/>
      <url>/2023/10/18/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/%E5%8C%BA%E5%88%86%E4%B8%8D%E5%90%8C%E7%9A%84%E4%B8%8B%E8%BD%BD%E7%89%88%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="下载版本区别"><a href="#下载版本区别" class="headerlink" title="下载版本区别"></a>下载版本区别</h1><p>在网上下载软件的时候会有各种版本的区别。<br><a href="https://imgse.com/i/p9YLOB9"><img src="https://s1.ax1x.com/2023/05/04/p9YLOB9.md.png" alt="p9YLOB9.md.png"></a><br>特别是github上，所以怎么区别各种版本呢，它们之间有什么区别。  </p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>普通windows基本就是下载win_x86_64版本就好，或者说直接amd-64(intel自己开发的已经自己都不用了改用amd64)  </p><h2 id="架构区分"><a href="#架构区分" class="headerlink" title="架构区分"></a>架构区分</h2><p>arm架构与x86架构都是架构上的区别，最重要的区分应该就是指令集上的区分</p><ul><li>arm简单指令集RISC</li><li>x86复杂指令集CISC</li></ul><h2 id="计算区别"><a href="#计算区别" class="headerlink" title="计算区别"></a>计算区别</h2><p>arm架构与x86架构都有32位与64位运算的区别。<br>arm架构是由arm开发，于2011年发布了ARMv8 64位架构，这是为了下一代ARM指令集架构工作若干年后的结晶。为了基于原有的原则和指令集，开发一个简明的64位架构，ARMv8使用了两种执行模式，AArch32和AArch64。顾名思义，一个运行32位代码，一个运行64位代码（详情戳）。ARM设计的巧妙之处，是处理器在运行中可以无缝地在两种模式间切换。这意味着64位指令的解码器是全新设计的，不用兼顾32位指令，而处理器依然可以向后兼容。<br>对于64位计算，ARM和Intel也有一些显著区别。Intel并没有开发64位版本的x86指令集。64位的指令集名为x86-64（有时简称为x64），实际上是AMD设计开发的。Intel想做64位计算，它知道如果从自己的32位x86架构进化出64位架构，新架构效率会很低，于是它搞了一个新64位处理器项目名为IA64。由此制造出了Itanium系列处理器。<br>同时AMD知道自己造不出能与IA64兼容的处理器，于是它把x86扩展一下，加入了64位寻址和64位寄存器。最终出来的架构，就是 AMD64，成为了64位版本的x86处理器的标准。IA64项目并不算得上成功，现如今基本被放弃了。Intel最终采用了AMD64。Intel当前给出的移动方案，是采用了AMD开发的64位指令集（有些许差别）的64位处理器。<br>综合一下，其实x86架构中就是intel开发了x86指令集，amd开发了x64指令集，intel与amd互相授权对方使用各自的指令集。<br>arm架构都是由arm开发的x86与x64，可以向后兼容。  </p><h2 id="使用场景区别"><a href="#使用场景区别" class="headerlink" title="使用场景区别"></a>使用场景区别</h2><p>由于架构设计上的区别，arm的功耗比较低，所以最常用于移动领域，m1芯片就是arm架构。<br>x86架构就是服务器与pc上的老大。</p>]]></content>
      
      
      <categories>
          
          <category> 学习路线 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习路线 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>es6的新增语法</title>
      <link href="/2023/10/18/%E5%89%8D%E7%AB%AF/es6%E7%9A%84%E6%96%B0%E5%A2%9E%E8%AF%AD%E6%B3%95/"/>
      <url>/2023/10/18/%E5%89%8D%E7%AB%AF/es6%E7%9A%84%E6%96%B0%E5%A2%9E%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="es的特殊语法"><a href="#es的特殊语法" class="headerlink" title="es的特殊语法"></a>es的特殊语法</h1><h2 id="对象解构"><a href="#对象解构" class="headerlink" title="对象解构"></a>对象解构</h2><p>有的时候对象的某些属性我们并不需要，然后它的存在又影响自己进行赋值或者遍历的时候就需要把这个属性给剔除出来。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;Alice&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">30</span>,</span><br><span class="line">  <span class="attr">gender</span>: <span class="string">&#x27;female&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> &#123; gender, ...rest &#125; = obj;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(rest); <span class="comment">// &#123; name: &#x27;Alice&#x27;, age: 30 &#125;</span></span><br></pre></td></tr></table></figure><p>在这个示例代码中，我们定义了一个名为 <code>obj</code> 的对象，它包含了 <code>name</code>、<code>age</code> 和 <code>gender</code> 三个属性。然后，我们使用对象解构语法来将 <code>gender</code> 属性剔除出去，并将剩余的属性存储在名为 <code>rest</code> 的新对象中。最后，我们使用 <code>console.log()</code> 方法来输出 <code>rest</code> 对象的内容，可以看到它只包含了 <code>name</code> 和 <code>age</code> 两个属性。</p><p>需要注意的是，对象解构语法只是将一个对象中的属性提取出来，并将它们存储在新的变量中。如果你需要修改原始对象，你仍然需要使用对象的赋值语法来进行修改。</p>]]></content>
      
      
      <categories>
          
          <category> 学习路线 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习路线 </tag>
            
            <tag> es6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ts的特殊类型</title>
      <link href="/2023/10/18/%E5%89%8D%E7%AB%AF/ts%E7%9A%84%E7%89%B9%E6%AE%8A%E7%B1%BB%E5%9E%8B/"/>
      <url>/2023/10/18/%E5%89%8D%E7%AB%AF/ts%E7%9A%84%E7%89%B9%E6%AE%8A%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="ts中的特殊类型"><a href="#ts中的特殊类型" class="headerlink" title="ts中的特殊类型"></a>ts中的特殊类型</h1><h2 id="Record"><a href="#Record" class="headerlink" title="Record&lt;K,T&gt;"></a>Record&lt;K,T&gt;</h2><p>有的时候我们并不能知道后台传递过来对象中的属性的名称，与属性的数目。可能只是知道对象的名称。这个时候可以怎么接收有一个特殊的类型***RecordRecord&lt;K, T&gt;***类型。</p><p><code>Record</code> 是 TypeScript 中的一个泛型类型，它表示一个由指定类型的属性名和属性值组成的对象类型。具体来说，<code>Record&lt;K, T&gt;</code> 表示一个对象类型，它的属性名为类型 <code>K</code> 中的值，属性值为类型 <code>T</code> 中的值。</p><p>例如，如果你想要定义一个类型为 <code>&#123; name: string, age: number &#125;</code> 的对象类型，你可以使用 <code>Record</code> 类型来定义它： </p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">Person</span> = <span class="title class_">Record</span>&lt;<span class="string">&#x27;name&#x27;</span> | <span class="string">&#x27;age&#x27;</span>, <span class="built_in">string</span> | <span class="built_in">number</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">person</span>: <span class="title class_">Person</span> = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;Alice&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">30</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在这个示例代码中，我们使用 <code>Record</code> 类型来定义了一个名为 <code>Person</code> 的类型，它的属性名为 <code>&#39;name&#39;</code> 和 <code>&#39;age&#39;</code>，属性值为 <code>string</code> 和 <code>number</code>。然后，我们定义了一个名为 <code>person</code> 的变量，它的类型为 <code>Person</code>，并将一个包含了 <code>name</code> 和 <code>age</code> 两个属性的对象赋值给它。</p><p>需要注意的是，<code>Record</code> 类型只是一个泛型类型，它并不会创建一个对象。如果你需要创建一个对象，你仍然需要使用对象字面量或者 <code>new</code> 关键字来进行创建。</p>]]></content>
      
      
      <categories>
          
          <category> 学习路线 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习路线 </tag>
            
            <tag> ts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue生产开发环境的分别配置</title>
      <link href="/2023/10/18/%E5%89%8D%E7%AB%AF/vue/vue%E7%94%9F%E4%BA%A7%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E5%88%86%E5%88%AB%E9%85%8D%E7%BD%AE/"/>
      <url>/2023/10/18/%E5%89%8D%E7%AB%AF/vue/vue%E7%94%9F%E4%BA%A7%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E5%88%86%E5%88%AB%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="vue不同模式下基础配置实现"><a href="#vue不同模式下基础配置实现" class="headerlink" title="vue不同模式下基础配置实现"></a>vue不同模式下基础配置实现</h1><p>有的时候开发环境与实际环境还是有一定的区别。需要我们根据情况选择部分内容是否启用。比如：后台服务的网址、是否启用代理等。所以最舒服的情况下可以把这些配置放在一起。方便我们使用。</p><p>示例：</p><p><img src="https://cdn.jsdelivr.net/gh/2508838014/DrawingBed/pictures/Code_w9YFkNIli0.png" alt="image-20231016103348389"></p><p>文件名称：</p><pre><code>- .env- .env.production- .env.development</code></pre><blockquote><p>​在项目中，如果我使用的是 vite ，要想在项目中使用变量的开头就需要是 <code>VITE_</code>，而不是 <code>VITE_</code> 开头的变量就不能被获取到。另外注意一下值的引号是否添加。似乎是有一定的影响</p></blockquote><h2 id="env"><a href="#env" class="headerlink" title=".env"></a>.env</h2><p>通用环境配置，也可以说是基础配置。</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span> 资源公共路径,需要以 /开头和结尾</span><br><span class="line">VITE<span class="built_in">_</span>PUBLIC<span class="built_in">_</span>PATH = &#x27;/&#x27;</span><br><span class="line"></span><br><span class="line"><span class="params">#</span> 是否hash路由模式</span><br><span class="line">VITE<span class="built_in">_</span>USE<span class="built_in">_</span>HASH = false</span><br><span class="line"></span><br><span class="line"><span class="params">#</span> base api</span><br><span class="line">VITE<span class="built_in">_</span>BASE<span class="built_in">_</span>API = &#x27;/api&#x27;</span><br><span class="line"></span><br><span class="line"><span class="params">#</span> 是否启用MOCK</span><br><span class="line">VITE<span class="built_in">_</span>USE<span class="built_in">_</span>MOCK = false</span><br><span class="line"></span><br><span class="line"><span class="params">#</span> 是否启用压缩</span><br><span class="line">VITE<span class="built_in">_</span>USE<span class="built_in">_</span>COMPRESS = true</span><br><span class="line"></span><br><span class="line"><span class="params">#</span> 压缩类型</span><br><span class="line">VITE<span class="built_in">_</span>COMPRESS<span class="built_in">_</span>TYPE = gzip</span><br><span class="line"></span><br><span class="line"><span class="params">#</span> api路径</span><br><span class="line">VITE<span class="built_in">_</span>BASE<span class="built_in">_</span>URL = &#x27;http://localhost:3003&#x27;</span><br><span class="line"></span><br><span class="line">VITE<span class="built_in">_</span>RESOURCE<span class="built_in">_</span>BASE<span class="built_in">_</span>URL = &#x27;http://localhost:3003&#x27;</span><br></pre></td></tr></table></figure><h2 id="env-production"><a href="#env-production" class="headerlink" title=".env.production"></a>.env.production</h2><p>生产环境。下的配置。</p><h2 id="env-development"><a href="#env-development" class="headerlink" title=".env.development"></a>.env.development</h2><p>开发环境下的配置。</p><h2 id="信息的引入"><a href="#信息的引入" class="headerlink" title="信息的引入"></a>信息的引入</h2><p>在对应的文件中引入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> request = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">VITE_API_URL</span>,</span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">1000</span>*<span class="number">15</span>,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//或者这样</span></span><br><span class="line"><span class="comment">// 在 vite 程序中获取</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">VITE_APP_BASE_API</span>); <span class="comment">// /dev-api</span></span><br><span class="line"><span class="comment">// 在 vue2 项目中获取</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(process.<span class="property">env</span>.<span class="property">VUE_APP_BASE_API</span>); <span class="comment">// /dev-api</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>通过这样的方案。就比较容易做一些全局的管理了。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li><p>默认情况下 .env 文件要放在和 package.json 同一目录下才可以被加载，除非在配置文件中更改加载目录。</p></li><li><p>不同的环境会加载不同的 .env 文件。</p></li><li><p>要想使用环境变量，变量的开头有固定要求，在 vite 项目中以 VITE_ 开头，在 vue2 项目中以 VUE_APP 开头。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习路线 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习路线 </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue按需引入</title>
      <link href="/2023/10/18/%E5%89%8D%E7%AB%AF/vue/vue%E6%8C%89%E9%9C%80%E5%BC%95%E5%85%A5/"/>
      <url>/2023/10/18/%E5%89%8D%E7%AB%AF/vue/vue%E6%8C%89%E9%9C%80%E5%BC%95%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="vue按需引入"><a href="#vue按需引入" class="headerlink" title="vue按需引入"></a>vue按需引入</h1><p><a href="https://juejin.cn/post/7232223238808404026">vue3+Vite+Ts 中使用自动引入，解放双手 - 掘金 (juejin.cn)</a></p><h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><p>vue组件与element ui的快速引入</p><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><h3 id="unplugin-auto-import"><a href="#unplugin-auto-import" class="headerlink" title="unplugin-auto-import"></a>unplugin-auto-import</h3><p>这是用于配置的关键插件</p><h4 id="配置："><a href="#配置：" class="headerlink" title="配置："></a>配置：</h4><ol><li><p>安装vite插件：<code>unplugin-auto-import</code> yarn add unplugin-auto-import -D</p></li><li><pre><code class="ts">import &#123; defineConfig &#125; from &#39;vite&#39;;import vue from &#39;@vitejs/plugin-vue&#39;;import AutoImport from &#39;unplugin-auto-import/vite&#39;;export default defineConfig(&#123;  plugins: [    vue(),    AutoImport(&#123;      // 自动导入 Vue 相关函数，如：ref, reactive, toRef 等      imports: [&#39;vue&#39;],    &#125;),  ],&#125;);<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### element ui组件的自动引入</span><br><span class="line"></span><br><span class="line">其中注意，elmessage在js中也就是个变量与ref，reactive差不多的类型。所以这个的引入需要自己思考。</span><br><span class="line"></span><br><span class="line">&gt; 参考官网 用到`unplugin-vue-components `和 `unplugin-auto-import`这两款插件</span><br><span class="line"></span><br><span class="line">```ts</span><br><span class="line">// vite.config.ts</span><br><span class="line">import &#123; defineConfig &#125; from &#x27;vite&#x27;</span><br><span class="line">import AutoImport from &#x27;unplugin-auto-import/vite&#x27;</span><br><span class="line">import Components from &#x27;unplugin-vue-components/vite&#x27;</span><br><span class="line">import &#123; ElementPlusResolver &#125; from &#x27;unplugin-vue-components/resolvers&#x27;</span><br><span class="line"></span><br><span class="line">export default defineConfig(&#123;</span><br><span class="line">  // ...</span><br><span class="line">  plugins: [</span><br><span class="line">    // ...</span><br><span class="line">    AutoImport(&#123;</span><br><span class="line">    // 自动导入element相关函数，如：ElMessage, ElMessageBox..</span><br><span class="line">      resolvers: [ElementPlusResolver()],</span><br><span class="line">    &#125;),</span><br><span class="line">    Components(&#123;</span><br><span class="line">    // 自动导入element相关组件</span><br><span class="line">      resolvers: [ElementPlusResolver()],</span><br><span class="line">    &#125;),</span><br><span class="line">  ],</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></code></pre></li></ol><p>说明：</p><p><code>unplugin-auto-import</code>会默认在要目录生成<code>auto-imports.d.ts</code>文件，<code>unplugin-vue-components</code>对应会在根目录生成<code>components.d.ts</code>文件，分别描述自动导入的 API、component。通过在tsconfig.json的include中引入对应配置文件，避免TS报错。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">AutoImport</span>(&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="comment">// 配置文件生成位置，默认是根目录 /auto-imports.d.ts</span></span><br><span class="line">  <span class="comment">// dts: &#x27;./auto-imports.d.ts&#x27;,</span></span><br><span class="line">&#125;),</span><br><span class="line"><span class="title class_">Components</span>(&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="comment">// 配置文件生成位置，默认是根目录 /components.d.ts</span></span><br><span class="line">  <span class="comment">// dts: &#x27;./components.d.ts&#x27;,</span></span><br><span class="line">&#125;),</span><br></pre></td></tr></table></figure><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="1-可能遇到ts-eslint不识别而导入报错的问题"><a href="#1-可能遇到ts-eslint不识别而导入报错的问题" class="headerlink" title="1. 可能遇到ts,eslint不识别而导入报错的问题"></a>1. 可能遇到ts,eslint不识别而导入报错的问题</h3><p>1、typescript 报错：<code>&#39;reactive&#39; is not defined.</code> 原因：TS未识别到vue api,没有相应的模块声明文件</p><p>处理：在vite中配置并生成auto-imports.d.ts ，并在tsconfig.json中引入</p><p>&#x2F;&#x2F; vite.config.js</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vite.config.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="title function_">vue</span>(),</span><br><span class="line">    <span class="title class_">AutoImport</span>(&#123;</span><br><span class="line">      <span class="comment">// 自动导入 Vue 相关函数，如：ref, reactive, toRef 等</span></span><br><span class="line">      <span class="attr">imports</span>: [<span class="string">&#x27;vue&#x27;</span>],</span><br><span class="line">      <span class="comment">// 生成自动导入的TS声明文件</span></span><br><span class="line">       <span class="attr">dts</span>: <span class="string">&quot;./auto-imports.d.ts&quot;</span>, </span><br><span class="line">    &#125;),</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F; tsconfig.json</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">     <span class="string">&quot;include&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;src/**/*.d.ts&quot;</span>,</span><br><span class="line">        <span class="string">&quot;./*.d.ts&quot;</span>,</span><br><span class="line">        <span class="string">&quot;./auto-imports.d.ts&quot;</span> <span class="comment">// 导入上一步生成的配置文件</span></span><br><span class="line">      ],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="eslint不识别报错-error-reactive-is-not-defined-no-undef"><a href="#eslint不识别报错-error-reactive-is-not-defined-no-undef" class="headerlink" title="eslint不识别报错 error &#39;reactive&#39; is not defined no-undef"></a>eslint不识别报错 <code>error &#39;reactive&#39; is not defined no-undef</code></h2><p>原因：未配置自动导入相应的eslint规则<br>处理：通过autoimport中的配置生成对应<code>.eslintrc-auto-import.json</code>配置文件，并在.eslintrc中引入 生成之后enbled:false 避免重复生成</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vite.config.js  </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// ......</span></span><br><span class="line"> <span class="title class_">AutoImport</span>(&#123;</span><br><span class="line">      <span class="attr">imports</span>: [<span class="string">&quot;vue&quot;</span>],</span><br><span class="line">      <span class="attr">resolvers</span>: [<span class="title class_">ElementPlusResolver</span>()],</span><br><span class="line">      <span class="attr">dts</span>: <span class="string">&quot;/auto-import.d.ts&quot;</span>,</span><br><span class="line">      <span class="attr">eslintrc</span>: &#123;</span><br><span class="line">        <span class="attr">enabled</span>: <span class="literal">true</span>,  <span class="comment">// 1、改为true用于生成eslint配置。2、生成后改回false，避免重复生成消耗</span></span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;),</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-配置src-component目录下的组件自动引入"><a href="#3-配置src-component目录下的组件自动引入" class="headerlink" title="3 配置src&#x2F;component目录下的组件自动引入&#96;"></a>3 配置src&#x2F;component目录下的组件自动引入&#96;</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&#x27;vite&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&#x27;@vitejs/plugin-vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">AutoImport</span> <span class="keyword">from</span> <span class="string">&#x27;unplugin-auto-import/vite&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Components</span> <span class="keyword">from</span> <span class="string">&#x27;unplugin-vue-components/vite&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="title function_">vue</span>(),</span><br><span class="line">    <span class="title class_">AutoImport</span>(&#123;</span><br><span class="line">      <span class="comment">// 自动导入 Vue 相关函数，如：ref, reactive, toRef 等</span></span><br><span class="line">      <span class="attr">imports</span>: [<span class="string">&#x27;vue&#x27;</span>],</span><br><span class="line">    &#125;),</span><br><span class="line"><span class="title class_">Components</span>(&#123;</span><br><span class="line">      <span class="comment">// 指定自动导入的组件位置，默认是 src/components</span></span><br><span class="line">       <span class="attr">dirs</span>: [<span class="string">&#x27;src/components&#x27;</span>,<span class="string">&#x27;src/otherComponents&#x27;</span>],</span><br><span class="line">    &#125;),</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习路线 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习路线 </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue运行提示创建文件夹权限错误</title>
      <link href="/2023/10/18/%E5%89%8D%E7%AB%AF/vue/vue%E8%BF%90%E8%A1%8C%E6%8F%90%E7%A4%BA%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9%E6%9D%83%E9%99%90%E9%94%99%E8%AF%AF/"/>
      <url>/2023/10/18/%E5%89%8D%E7%AB%AF/vue/vue%E8%BF%90%E8%A1%8C%E6%8F%90%E7%A4%BA%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9%E6%9D%83%E9%99%90%E9%94%99%E8%AF%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="vue运行出错"><a href="#vue运行出错" class="headerlink" title="vue运行出错"></a>vue运行出错</h1><h2 id="错误原因"><a href="#错误原因" class="headerlink" title="错误原因"></a>错误原因</h2><p><img src="https://cdn.jsdelivr.net/gh/2508838014/DrawingBed/pictures/image-20231017115515390.png" alt="image-20231017115515390"></p><p>错误原因：</p><p><img src="https://cdn.jsdelivr.net/gh/2508838014/DrawingBed/pictures/image-20231017131804640.png" alt="image-20231017131804640"></p><p>其中dts路径错误</p><p>之前错误的路径：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dts:&quot;/auto-imports.d.ts&quot;</span><br></pre></td></tr></table></figure><p>，表示写在根目录下某个文件。根目录又是系统文件集中区域，nodeJs是没有相应的权限的。修改成上图所示路径后问题解决。</p>]]></content>
      
      
      <categories>
          
          <category> 知错就改 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 知错就改 </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue实现字符串超出部分隐藏</title>
      <link href="/2023/10/18/%E5%89%8D%E7%AB%AF/vue/vue%E5%AE%9E%E7%8E%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%B6%85%E5%87%BA%E9%83%A8%E5%88%86%E9%9A%90%E8%97%8F/"/>
      <url>/2023/10/18/%E5%89%8D%E7%AB%AF/vue/vue%E5%AE%9E%E7%8E%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%B6%85%E5%87%BA%E9%83%A8%E5%88%86%E9%9A%90%E8%97%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="vue实现字符串超出部分隐藏"><a href="#vue实现字符串超出部分隐藏" class="headerlink" title="vue实现字符串超出部分隐藏"></a>vue实现字符串超出部分隐藏</h1><p>有的时候在一些地方会放置字符串。比如昵称。但是往往由于布局的设置，如果完完整整的显示出出来，会出现比如压榨后面的组件的空间。导致组件错位等。所以在这个时候我们希望能把超出部分的内容给隐藏起来。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;span :title=&quot;props.title&quot; class=&quot;title-span&quot;&gt;&#123;&#123; props.title &#125;&#125;&lt;/span&gt;</span><br></pre></td></tr></table></figure><p>对应的样式：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.title-span</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;<span class="comment">//要求是这个格式</span></span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">80px</span>;<span class="comment">//控制最大的宽度</span></span><br><span class="line">    <span class="attribute">white-space</span>: nowrap;<span class="comment">// /* 禁止文本换行 */</span></span><br><span class="line">    <span class="selector-tag">text</span>-<span class="attribute">overflow</span>: ellipsis;<span class="comment">// /* 超出宽度的文本用省略号代替 */</span></span><br><span class="line">    <span class="attribute">overflow</span>: hidden;<span class="comment">// /* 超出容器宽度的部分进行隐藏 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中display：block是因为只有块级元素才有宽与高，但是span是行级元素。</p>]]></content>
      
      
      <categories>
          
          <category> 学习路线 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习路线 </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>apifox的使用</title>
      <link href="/2023/10/18/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/apifox%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/10/18/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/apifox%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Apifox的使用"><a href="#Apifox的使用" class="headerlink" title="Apifox的使用"></a>Apifox的使用</h1><p>看到有推荐这个的看到了这个软件。于是自己拿来使用。现在做一些记录。</p><h2 id="关于mock的部分"><a href="#关于mock的部分" class="headerlink" title="关于mock的部分"></a>关于mock的部分</h2><p>语法请参考<a href="http://mockjs.com/examples.html#DPD">Mock.js (mockjs.com)</a></p><h3 id="1-1-在固定的一组字符串中返回其中一个"><a href="#1-1-在固定的一组字符串中返回其中一个" class="headerlink" title="1-1. 在固定的一组字符串中返回其中一个"></a>1-1. 在固定的一组字符串中返回其中一个</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;message&quot;: &quot;&quot;,</span><br><span class="line">  &quot;success&quot;: true,</span><br><span class="line">  &quot;content&quot;: &#123;</span><br><span class="line">    &quot;code&quot;: &quot;@city()&quot;,</span><br><span class="line">    &quot;status|1&quot;: [&#x27;Auto&#x27;,&#x27;Manual&#x27;,&#x27;Stop&#x27;,&#x27;Warn&#x27;,&#x27;error&#x27;</span><br><span class="line">    ],</span><br><span class="line">    &quot;stopNum&quot;:&#x27;@integer(2,</span><br><span class="line">    500)&#x27;,</span><br><span class="line">    &quot;workLastingTime&quot;:‘@Date&#x27;,</span><br><span class="line">    &quot;highestCTTime&quot;:‘@Date&#x27;,</span><br><span class="line">    &quot;stopLastingTime&quot;:‘@Date&#x27;,</span><br><span class="line">    &quot;data|1&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;temp&quot;:&#x27;@name&#x27;,</span><br><span class="line">        &quot;phone&quot;:&#x27;@phone&#x27;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;errorCode&quot;: 0</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-2-特点：返回固定长度的浮点数组"><a href="#1-2-特点：返回固定长度的浮点数组" class="headerlink" title="1-2. 特点：返回固定长度的浮点数组"></a>1-2. 特点：返回固定长度的浮点数组</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;message&quot;: &quot;&quot;,</span><br><span class="line">    &quot;success&quot;: true,</span><br><span class="line">    &quot;content&quot;: &#123;</span><br><span class="line">        &quot;uclX&quot;: 3.9590502,</span><br><span class="line">        &quot;lclX&quot;: 3.02845,</span><br><span class="line">        &quot;uclR&quot;: 0.80858266,</span><br><span class="line">        &quot;lclR&quot;: 0,</span><br><span class="line">        &quot;averages|9999&quot;: [</span><br><span class="line">            &#x27;@float(3, 4.5, 2,3)&#x27;</span><br><span class="line">        ],</span><br><span class="line">        &quot;ranges|9999&quot;: [</span><br><span class="line">            &#x27;@float(0, 1, 2,3)&#x27;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;errorCode&quot;: 0</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-1-脚本编辑-特点：可以获取到请求携带的数据。"><a href="#2-1-脚本编辑-特点：可以获取到请求携带的数据。" class="headerlink" title="2-1. 脚本编辑-特点：可以获取到请求携带的数据。"></a>2-1. 脚本编辑-特点：可以获取到请求携带的数据。</h3><p>生成浮点数区间：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Math.random() * (max-min) + min;</span><br></pre></td></tr></table></figure><p>实现方案</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">var MockJs = require(&#x27;mockjs&#x27;);</span><br><span class="line">// 获取“智能 Mock”自动生成的 json</span><br><span class="line">var responseJson = fox.mockResponse.json();</span><br><span class="line">var productNum=parseInt(fox.mockRequest.getParam(&#x27;productType&#x27;));</span><br><span class="line"></span><br><span class="line">responseJson.content.averages=[];</span><br><span class="line">responseJson.content.ranges=[];</span><br><span class="line">responseJson.content.uclX=Math.random() * (4.5-4) + 4;</span><br><span class="line">responseJson.content.lclX=Math.random() * (3-2) + 2;</span><br><span class="line">responseJson.content.uclR=Math.random() * ( 1-0.9) + 0.9;</span><br><span class="line">responseJson.content.lclR=Math.random() * ( 0.1-0) + 0;</span><br><span class="line"></span><br><span class="line">for(let i=0;i&lt;productNum;i++)&#123;</span><br><span class="line">    responseJson.content.averages.push(Math.random() * ( 4.5-3) + 3)</span><br><span class="line">    responseJson.content.ranges.push(Math.random() * (1-0) + 0)</span><br><span class="line">&#125;</span><br><span class="line">responseJson.success=true;</span><br><span class="line">fox.mockResponse.setBody(responseJson)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>apifox中的mock的url错误</title>
      <link href="/2023/10/18/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/apifox%E4%B8%AD%E7%9A%84mock%E7%9A%84url%E9%94%99%E8%AF%AF/"/>
      <url>/2023/10/18/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/apifox%E4%B8%AD%E7%9A%84mock%E7%9A%84url%E9%94%99%E8%AF%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="知错就改Apifox-mock的url错误"><a href="#知错就改Apifox-mock的url错误" class="headerlink" title="知错就改Apifox-mock的url错误"></a>知错就改Apifox-mock的url错误</h1><h2 id="错误现象"><a href="#错误现象" class="headerlink" title="错误现象"></a>错误现象</h2><p>我在正常进行测试页面的时候，突然返回404了。我于是检查Apifox的mock内容。在apifox发送请求还是404于是判定，apifox的mock模块应该出现问题了。检查发现mock的url发生了改变。后缀跟着的是一串数字，而不是路径信息。</p><h2 id="错误原因"><a href="#错误原因" class="headerlink" title="错误原因"></a>错误原因</h2><p>查询官方的<a href="https://apifox.com/help/api-mock/intro-to-mock">Mock 功能简介 | Apifox 帮助文档</a>后确定，此处的url是id模式，而不是之前的路径模式，所以之前的url才会404.现在的问题就是怎么把这个id模式修改成为路径模式。</p><p>然后一条信息抓住了我的眼球：必须以&#x2F;作为开头。转会Apifox检查。发现get的接口路径的确不知道何时修改成为完整的url而不是只有后缀的部分。修改url为之前的路径。修改完成。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>修改get接口的url从完整的url到部分路径部分。修改完成。</p>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue中与ts中的遍历</title>
      <link href="/2023/10/18/%E5%89%8D%E7%AB%AF/vue/vue%E4%B8%AD%E4%B8%8Ets%E4%B8%AD%E7%9A%84%E9%81%8D%E5%8E%86/"/>
      <url>/2023/10/18/%E5%89%8D%E7%AB%AF/vue/vue%E4%B8%AD%E4%B8%8Ets%E4%B8%AD%E7%9A%84%E9%81%8D%E5%8E%86/</url>
      
        <content type="html"><![CDATA[<h1 id="vue中与ts中的遍历"><a href="#vue中与ts中的遍历" class="headerlink" title="vue中与ts中的遍历"></a>vue中与ts中的遍历</h1><p>在vue中经常遇见遍历某个数组或者遍历某个对象中的全部属性的情况。</p><ol><li>遍历对象中的全部属性</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-descriptions title=&quot;设备基础信息&quot; :border=&quot;true&quot;&gt;</span><br><span class="line">    &lt;el-descriptions-item</span><br><span class="line">v-for=&quot;(value,key) in deviceBaseData&quot; </span><br><span class="line">        :label=&quot;key&quot;&gt;</span><br><span class="line">        &#123;&#123;value&#125;&#125;</span><br><span class="line">    &lt;/el-descriptions-item&gt;</span><br><span class="line">&lt;/el-descriptions&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>遍历数组中的全部内容</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-select v-model=&quot;form.checkItemCode&quot;&gt;</span><br><span class="line">    &lt;el-option</span><br><span class="line">v-for=&quot;item in formConfig.checkItemOptions&quot; </span><br><span class="line">        :value=&quot;item&quot; </span><br><span class="line">        :key=&quot;item&quot;</span><br><span class="line">        :label=&quot;item&quot; /&gt;</span><br><span class="line">&lt;/el-select&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ts </tag>
            
            <tag> vue </tag>
            
            <tag> 遍历 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swagger-学习路线-开始使用</title>
      <link href="/2023/08/08/java/Swagger-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/08/08/java/Swagger-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Swagger"><a href="#Swagger" class="headerlink" title="Swagger"></a>Swagger</h1><p><a href="https://so.csdn.net/so/search?q=Swagger&spm=1001.2101.3001.7020">Swagger</a> 是一个规范且完整的框架，用于生成、描述、调用和可视化 RESTful 风格的 Web 服务。</p><p>Swagger 的目标是对 REST API 定义一个标准且和语言无关的接口，可以让人和计算机拥有无须访问源码、文档或网络流量监测就可以发现和理解服务的能力。当通过 Swagger 进行正确定义，用户可以理解远程服务并使用最少实现逻辑与远程服务进行交互。与为底层编程所实现的接口类似，Swagger 消除了调用服务时可能会有的猜测。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis-学习路线-开始使用</title>
      <link href="/2023/08/08/java/Mybatis-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/08/08/java/Mybatis-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--mybatis-plus--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.chat.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.DbType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.annotation.MapperScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="comment">//配置以来</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="comment">//配置扫描</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.test.chat.mapper&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBatisPlusConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> MybatisPlusInterceptor <span class="title function_">mybatisPlusInterceptor</span><span class="params">()</span>&#123;</span><br><span class="line">        MybatisPlusInterceptor interceptor=<span class="keyword">new</span> <span class="title class_">MybatisPlusInterceptor</span>();</span><br><span class="line">        interceptor.addInnerInterceptor(<span class="keyword">new</span> <span class="title class_">PaginationInnerInterceptor</span>(DbType.MYSQL));</span><br><span class="line">        <span class="keyword">return</span> interceptor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hyper-v虚拟机安装-Ubuntu</title>
      <link href="/2023/08/05/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/Hyper-v%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85-Ubuntu/"/>
      <url>/2023/08/05/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/Hyper-v%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85-Ubuntu/</url>
      
        <content type="html"><![CDATA[<h1 id="Hypera-v虚拟机安装Ubuntu"><a href="#Hypera-v虚拟机安装Ubuntu" class="headerlink" title="Hypera-v虚拟机安装Ubuntu"></a>Hypera-v虚拟机安装Ubuntu</h1><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><h3 id="开启Hypera-v"><a href="#开启Hypera-v" class="headerlink" title="开启Hypera-v"></a>开启Hypera-v</h3><ol><li>打开设置</li><li>应用</li><li>可选功能</li><li>更多Windows功能</li><li>在其中勾选开启“Hypre-V冰点击确认保存即可</li></ol><h3 id="下载Uabuntu"><a href="#下载Uabuntu" class="headerlink" title="下载Uabuntu"></a>下载Uabuntu</h3><ol><li>下载的网址：[UBuntu下载的官方网址](<a href="https://ubuntu.com/download">Get Ubuntu | Download | Ubuntu</a>)</li><li>选择下载的版本</li></ol><p>试了下，安装非常简单。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vue-学习路线-router-link的replace</title>
      <link href="/2023/07/25/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-router-link%E7%9A%84replace/"/>
      <url>/2023/07/25/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-router-link%E7%9A%84replace/</url>
      
        <content type="html"><![CDATA[<h1 id="vue-学习路线-router-link的replace"><a href="#vue-学习路线-router-link的replace" class="headerlink" title="vue-学习路线-router-link的replace"></a>vue-学习路线-router-link的replace</h1><p>页面切换有两种模式：</p><pre><code>- 页面的页面切换的时候就是类似数组的push方法。压栈。所以页面的前进与后退都是修改指针前后。- 页面的切换还有replace方式。就是不保存之前的记录，生成新的，消灭旧的。</code></pre><p>正常网页默认的就是push模式，如何使用第二种replace的方式。</p><p>就是在router-link配置replace的属性为ture</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;router-link replace :to=&quot;/home/message/detail/mid/mtitle&quot;&gt; link &lt;/router-link&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123;  RouterView &#125; from &#x27;vue-router&#x27;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><blockquote><p>直接写这个属性就是表示默认给true。当然可以勤劳点       :replace&#x3D;’true’</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> vue - 学习路线 - replace </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习路线 </tag>
            
            <tag> vue </tag>
            
            <tag> 动画replace </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-学习路线-路由的props配置</title>
      <link href="/2023/07/25/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-%E8%B7%AF%E7%94%B1%E7%9A%84props%E9%85%8D%E7%BD%AE/"/>
      <url>/2023/07/25/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-%E8%B7%AF%E7%94%B1%E7%9A%84props%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="vue-学习路线-路由的props配置"><a href="#vue-学习路线-路由的props配置" class="headerlink" title="vue-学习路线-路由的props配置"></a>vue-学习路线-路由的props配置</h1><p>三种写法。第三种写法的局限性最小，也最容易管理。建议使用第三种写法的前两个的方案。</p><h2 id="第一种写法props的固定对象传递"><a href="#第一种写法props的固定对象传递" class="headerlink" title="第一种写法props的固定对象传递"></a>第一种写法props的固定对象传递</h2><p>无法动态给与数据</p><ol><li>接受参数</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;router-link :to=&quot;/home/message/detail/mid/mtitle&quot;&gt; &#123;&#123;id&#125;&#125; &lt;/router-link&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123;  RouterView &#125; from &#x27;vue-router&#x27;</span><br><span class="line">    </span><br><span class="line">    export default&#123;</span><br><span class="line">        props:[&#x27;id&#x27;,&#x27;title&#x27;]</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>路由修改</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: &#x27;/home/messgae/detail&#x27;,</span><br><span class="line">      name: &#x27;home&#x27;,</span><br><span class="line">      component: HomeView,</span><br><span class="line">//第一种写法，值为对象，该对象中所有key-value都会以props组件形式进行接受</span><br><span class="line">  props: &#123;id:1,title:&#x27;helleo&#x27;&#125;</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><h2 id="props的第二种写法"><a href="#props的第二种写法" class="headerlink" title="props的第二种写法"></a>props的第二种写法</h2><p>只能传递params参数，不能传递query参数</p><ol><li>传递参数</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;router-link :to=&quot;&#123;</span><br><span class="line">                        name:&#x27;jia&#x27;,</span><br><span class="line">                        params:&#123;</span><br><span class="line">                        id:mId,</span><br><span class="line">                        title:myTitle</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;&quot;&gt; link &lt;/router-link&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123;  RouterView &#125; from &#x27;vue-router&#x27;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>路由修改</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> routes: [</span><br><span class="line">   &#123;</span><br><span class="line">     path: &#x27;/home/messgae/detail&#x27;,</span><br><span class="line">     name: &#x27;home&#x27;,</span><br><span class="line">     component: HomeView,</span><br><span class="line">//第二种写法，值为布尔值，如果布尔值为true，就会把该路由组件收到的所有params参数，以props的形式传给该组件</span><br><span class="line">  props: true</span><br><span class="line">   &#125;,</span><br></pre></td></tr></table></figure><ol start="3"><li>接受参数：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;router-link :to=&quot;/home/message/detail/mid/mtitle&quot;&gt; &#123;&#123;id&#125;&#125; &lt;/router-link&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123;  RouterView &#125; from &#x27;vue-router&#x27;</span><br><span class="line">    </span><br><span class="line">    export default&#123;</span><br><span class="line">        props:[&#x27;id&#x27;,&#x27;title&#x27;]</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="props的第三种写法"><a href="#props的第三种写法" class="headerlink" title="props的第三种写法"></a>props的第三种写法</h2><p>传递的是一个方法过去。使用route作为回调参数</p><ol><li>xxxxxxxxxx $route.params.id$route.params.titlevue</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;router-link :to=&quot;&#123;</span><br><span class="line">                        name:&#x27;jia&#x27;,</span><br><span class="line">                        params:&#123;</span><br><span class="line">                        id:mId,</span><br><span class="line">                        title:myTitle</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;&quot;&gt; link &lt;/router-link&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123;  RouterView &#125; from &#x27;vue-router&#x27;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>路由修改</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: &#x27;/home/messgae/detail&#x27;,</span><br><span class="line">      name: &#x27;home&#x27;,</span><br><span class="line">      component: HomeView,</span><br><span class="line">//第三种写法，值为函数</span><br><span class="line">  props($route)&#123;</span><br><span class="line">return &#123;id:$route.query.id,title:$route.query.title&#125;</span><br><span class="line">&#125;</span><br><span class="line">//和上面等价。只是更简化了部分信息</span><br><span class="line">  props(&#123;query&#125;&#125;)&#123;</span><br><span class="line">return &#123;id:query.id,title:query.title&#125;</span><br><span class="line">&#125;</span><br><span class="line">//和上面等价。只是更加解构赋值。当然可读性有所下降</span><br><span class="line">  props(&#123;query：&#123;id,title&#125;&#125;&#125;)&#123;</span><br><span class="line">return &#123;id,title&#125;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><ol start="3"><li>接受参数：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;router-link :to=&quot;/home/message/detail/mid/mtitle&quot;&gt; &#123;&#123;id&#125;&#125; &lt;/router-link&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123;  RouterView &#125; from &#x27;vue-router&#x27;</span><br><span class="line">    </span><br><span class="line">    export default&#123;</span><br><span class="line">        props:[&#x27;id&#x27;,&#x27;title&#x27;]</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue - 学习路线 - query </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习路线 </tag>
            
            <tag> vue </tag>
            
            <tag> props </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-学习路线-路由的params参数</title>
      <link href="/2023/07/25/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-%E8%B7%AF%E7%94%B1%E7%9A%84params%E5%8F%82%E6%95%B0/"/>
      <url>/2023/07/25/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-%E8%B7%AF%E7%94%B1%E7%9A%84params%E5%8F%82%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="vue-学习路线-路由的params参数"><a href="#vue-学习路线-路由的params参数" class="headerlink" title="vue-学习路线-路由的params参数"></a>vue-学习路线-路由的params参数</h1><h2 id="携带params参数的字符串写法"><a href="#携带params参数的字符串写法" class="headerlink" title="携带params参数的字符串写法"></a>携带params参数的字符串写法</h2><ol><li>传递参数</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;router-link :to=&quot;/home/message/detail/mid/mtitle&quot;&gt; link &lt;/router-link&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123;  RouterView &#125; from &#x27;vue-router&#x27;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>路由修改</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">routes: [</span><br><span class="line">  &#123;</span><br><span class="line">    path: &#x27;/home/messgae/detail/:id/:title&#x27;,</span><br><span class="line">    name: &#x27;home&#x27;,</span><br><span class="line">    component: HomeView</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><ol start="3"><li>接受参数：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$route.params.id</span><br><span class="line">$route.params.title</span><br></pre></td></tr></table></figure><h2 id="携带query参数的对象写法"><a href="#携带query参数的对象写法" class="headerlink" title="携带query参数的对象写法"></a>携带query参数的对象写法</h2><p>router只能通过name都可跳转。</p><p>当然name需要提前有所配置。</p><ol><li>传递参数<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;router-link :to=&quot;&#123;</span><br><span class="line">                        name:&#x27;jia&#x27;,</span><br><span class="line">                        params:&#123;</span><br><span class="line">                        id:mId,</span><br><span class="line">                        title:myTitle</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;&quot;&gt; link &lt;/router-link&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123;  RouterView &#125; from &#x27;vue-router&#x27;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></li></ol><p>这个写法会直接报错，也就是说不能用path的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">//这种写法是会报错的</span><br><span class="line">  &lt;router-link :to=&quot;&#123;</span><br><span class="line">                        path:&#x27;/home&#x27;,</span><br><span class="line">                        params:&#123;</span><br><span class="line">                        id:mId,</span><br><span class="line">                        title:myTitle</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;&quot;&gt; link &lt;/router-link&gt;</span><br><span class="line">//这种写法ok</span><br><span class="line">  &lt;router-link :to=&quot;&#123;</span><br><span class="line">                        name:&#x27;jia&#x27;,</span><br><span class="line">                        params:&#123;</span><br><span class="line">                        id:mId,</span><br><span class="line">                        title:myTitle</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;&quot;&gt; link &lt;/router-link&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123;  RouterView &#125; from &#x27;vue-router&#x27;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>路由修改：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">routes: [</span><br><span class="line">  &#123;</span><br><span class="line">    path: &#x27;/home/messgae/detail/:id/:title&#x27;,</span><br><span class="line">    name: &#x27;home&#x27;,</span><br><span class="line">    component: HomeView</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><ol start="2"><li>接受参数：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$route.params.id</span><br><span class="line">$route.params.title</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue - 学习路线 - params </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习路线 </tag>
            
            <tag> vue </tag>
            
            <tag> params </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-学习路线-路由的query参数</title>
      <link href="/2023/07/25/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-%E8%B7%AF%E7%94%B1%E7%9A%84query%E5%8F%82%E6%95%B0/"/>
      <url>/2023/07/25/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-%E8%B7%AF%E7%94%B1%E7%9A%84query%E5%8F%82%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="vue-学习路线-路由的query参数"><a href="#vue-学习路线-路由的query参数" class="headerlink" title="vue-学习路线-路由的query参数"></a>vue-学习路线-路由的query参数</h1><h2 id="携带query参数的字符串写法"><a href="#携带query参数的字符串写法" class="headerlink" title="携带query参数的字符串写法"></a>携带query参数的字符串写法</h2><ol><li>传递参数</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;router-link :to=&quot;/home/message/detail?id=$&#123;mId&#125;&amp;title=$&#123;mTitle&#125;&quot;&gt; link &lt;/router-link&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123;  RouterView &#125; from &#x27;vue-router&#x27;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>接受参数：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$route.query.id</span><br><span class="line">$route.query.title</span><br></pre></td></tr></table></figure><h2 id="携带query参数的对象写法"><a href="#携带query参数的对象写法" class="headerlink" title="携带query参数的对象写法"></a>携带query参数的对象写法</h2><p>router可以通过path和name都可跳转。</p><p>当然name需要提前有所配置。</p><ol><li>传递参数<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;router-link :to=&quot;&#123;</span><br><span class="line">                        path:&#x27;/home&#x27;,</span><br><span class="line">                        query:&#123;</span><br><span class="line">                        id:mId,</span><br><span class="line">                        title:myTitle</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;&quot;&gt; link &lt;/router-link&gt;</span><br><span class="line">  &lt;router-link :to=&quot;&#123;</span><br><span class="line">                        name:&#x27;jia&#x27;,</span><br><span class="line">                        query:&#123;</span><br><span class="line">                        id:mId,</span><br><span class="line">                        title:myTitle</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;&quot;&gt; link &lt;/router-link&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123;  RouterView &#125; from &#x27;vue-router&#x27;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></li><li>接受参数：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$route.query.id</span><br><span class="line">$route.query.title</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue - 学习路线 - query </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习路线 </tag>
            
            <tag> vue </tag>
            
            <tag> query </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-学习路线-插槽slot</title>
      <link href="/2023/07/20/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-%E6%8F%92%E6%A7%BDslot/"/>
      <url>/2023/07/20/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-%E6%8F%92%E6%A7%BDslot/</url>
      
        <content type="html"><![CDATA[<h1 id="vue-学习路线-插槽slot"><a href="#vue-学习路线-插槽slot" class="headerlink" title="vue-学习路线-插槽slot"></a>vue-学习路线-插槽slot</h1><p>插槽可以分为三类</p><ul><li>默认插槽</li><li>具名插槽</li><li>作用域插槽</li></ul><p>各自有各自的特点。</p><h2 id="默认插槽"><a href="#默认插槽" class="headerlink" title="默认插槽"></a>默认插槽</h2><p>特点：简单实用，不需要命名，直接将对应的内容放到插槽对应的地方。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;RouterView /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123;  RouterView &#125; from &#x27;vue-router&#x27;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">    </span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="具名插槽"><a href="#具名插槽" class="headerlink" title="具名插槽"></a>具名插槽</h2><p>特点：如果有多个插槽的地区，比如图片与文字，所需要的给的地方是不一样的。</p><h2 id="作用域插槽"><a href="#作用域插槽" class="headerlink" title="作用域插槽"></a>作用域插槽</h2><p>特点：在子组件中如果需要给与不同的样式，但是信息的内容又差不多。可以通过这样的方案。比如特殊显示某个类型的信息。但是这个类型的信息实际内容其实是和其他内容没有什么大的不同的情况</p>]]></content>
      
      
      <categories>
          
          <category> vue - 学习路线 - slot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习路线 </tag>
            
            <tag> vue </tag>
            
            <tag> slot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-学习路线-第三方动画库</title>
      <link href="/2023/07/16/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-%E7%AC%AC%E4%B8%89%E6%96%B9%E5%8A%A8%E7%94%BB%E5%BA%93/"/>
      <url>/2023/07/16/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-%E7%AC%AC%E4%B8%89%E6%96%B9%E5%8A%A8%E7%94%BB%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h1 id="vue-学习路线-第三方动画库"><a href="#vue-学习路线-第三方动画库" class="headerlink" title="vue-学习路线-第三方动画库"></a>vue-学习路线-第三方动画库</h1><p>首先提到的是一个css的库[animate.css官方链接](<a href="https://animate.style/">Animate.css | A cross-browser library of CSS animations.</a>)</p><ol><li>安装库</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install animate.css --save</span><br></pre></td></tr></table></figure><ol start="2"><li>在组件中引入使用</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div </span><br><span class="line">       name=&#x27;animate__animated animate__bounce&#x27;</span><br><span class="line">       enter-active-class=&quot;从官网上找对应的名字&quot;</span><br><span class="line">       leave-active-class=&quot;从官网上找对应的名字&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script &gt;</span><br><span class="line">    import &#x27;animate.css&#x27;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue - 学习路线 - 第三方动画库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习路线 </tag>
            
            <tag> vue </tag>
            
            <tag> 第三方动画库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-学习路线-动画组</title>
      <link href="/2023/07/15/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-%E5%8A%A8%E7%94%BB%E7%BB%84/"/>
      <url>/2023/07/15/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-%E5%8A%A8%E7%94%BB%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h1 id="vue-学习路线-动画组"><a href="#vue-学习路线-动画组" class="headerlink" title="vue-学习路线-动画组"></a>vue-学习路线-动画组</h1><p>之前有学习过利用transform来让其中的元素具有动画效果，也可以用name的方案来让动画效果在不同的位置上有所区别。但是这个也有一定的限制，里面只能有一个元素。虽然可以用div标签这样同生共死，但是还是可以有其他方案，让他们效果一样，但是并不用一起出现。那就是transition-group</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;transition-group name=&quot;fade&quot;&gt;</span><br><span class="line"></span><br><span class="line">  &lt;div v-if=&quot;show&quot;&gt;Hello, world!&lt;/div&gt;&lt;transition name=&quot;fade&quot;&gt;</span><br><span class="line"></span><br><span class="line">  &lt;div v-if=&quot;show&quot;&gt;Hello, world!&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/transition-group&gt;</span><br><span class="line"></span><br><span class="line">&lt;script &gt;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.fade-enter-active, .fade-leave-active &#123;</span><br><span class="line">  transition: my-animation opacity 0.5s ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.fade-enter, .fade-leave-to &#123;</span><br><span class="line">  opacity: transform:translateX(-100%);</span><br><span class="line">&#125;</span><br><span class="line">.fade-enter-to, .fade-leave &#123;</span><br><span class="line">  opacity: transfrom:translateX(0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/transition&gt;</span><br><span class="line"></span><br><span class="line">&lt;script scoped&gt;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.fade-enter-active, .fade-leave-active &#123;</span><br><span class="line">  transition: my-animation opacity 0.5s ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.fade-enter, .fade-leave-to &#123;</span><br><span class="line">  opacity: transform:translateX(-100%);</span><br><span class="line">&#125;</span><br><span class="line">.fade-enter-to, .fade-leave &#123;</span><br><span class="line">  opacity: transfrom:translateX(0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue - 学习路线 - 动画组 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习路线 </tag>
            
            <tag> vue </tag>
            
            <tag> 动画组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-学习路线-动画效果</title>
      <link href="/2023/07/14/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C/"/>
      <url>/2023/07/14/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="vue-学习路线-动画效果"><a href="#vue-学习路线-动画效果" class="headerlink" title="vue-学习路线-动画效果"></a>vue-学习路线-动画效果</h1><h2 id="CSS动画"><a href="#CSS动画" class="headerlink" title="CSS动画"></a>CSS动画</h2><p>css中使用@keyframes作为关键字实现动画</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-bind:style=&quot;&#123; animation: &#x27;my-animation 2s ease-in-out infinite&#x27; &#125;&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script &gt;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">    @keyframes my-animation&#123;</span><br><span class="line">        form &#123;</span><br><span class="line">            transform:translateX(-100%)</span><br><span class="line">        &#125;</span><br><span class="line">        to &#123;</span><br><span class="line">            transfrom:translateX(0)</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="vue官方给与的方案-动画方案"><a href="#vue官方给与的方案-动画方案" class="headerlink" title="vue官方给与的方案-动画方案"></a>vue官方给与的方案-动画方案</h2><p>fade可以替换为任何自定义名称，如果不设置name。则默认为名称为v</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;transition name=&quot;fade&quot; :apprear=&#x27;true&#x27;&gt;</span><br><span class="line">  &lt;div v-if=&quot;show&quot; &gt;Hello, world!&lt;/div&gt;</span><br><span class="line">&lt;/transition&gt;</span><br><span class="line"></span><br><span class="line">&lt;script &gt;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.fade-enter-active, .fade-leave-active &#123;</span><br><span class="line">  transition: my-animation 0.5s ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> @keyframes my-animation&#123;</span><br><span class="line">        form &#123;</span><br><span class="line">            transform:translateX(-100%)</span><br><span class="line">        &#125;</span><br><span class="line">        to &#123;</span><br><span class="line">            transfrom:translateX(0)</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;  </span><br><span class="line">    </span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>这里，我们使用了 <code>.fade-enter-active</code> 和 <code>.fade-leave-active</code> 类来设置动画效果的持续时间、缓动函数等属性，使用 <code>.fade-enter</code> 和 <code>.fade-leave-to</code> 类来设置动画开始和结束时的样式。</p><p>active实际就是意思在执行开始的时候执行对应的css效果。</p><p>apprear属性表示在第一次加载出现的时候就执行这个动画效果，否则是不执行对应的动画效果的。</p><h2 id="vue官方给与的方案-过度效果"><a href="#vue官方给与的方案-过度效果" class="headerlink" title="vue官方给与的方案-过度效果"></a>vue官方给与的方案-过度效果</h2><p>  fade可以替换为任何自定义名称，如果不设置name。则默认为名称为v</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;transition name=&quot;fade&quot;&gt;</span><br><span class="line">  &lt;div v-if=&quot;show&quot;&gt;Hello, world!&lt;/div&gt;</span><br><span class="line">&lt;/transition&gt;</span><br><span class="line"></span><br><span class="line">&lt;script scoped&gt;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.fade-enter-active, .fade-leave-active &#123;</span><br><span class="line">  transition: my-animation opacity 0.5s ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.fade-enter, .fade-leave-to &#123;</span><br><span class="line">  opacity: transform:translateX(-100%);</span><br><span class="line">&#125;</span><br><span class="line">.fade-enter-to, .fade-leave &#123;</span><br><span class="line">  opacity: transfrom:translateX(0);</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue - 学习路线 - 动画效果 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习路线 </tag>
            
            <tag> vue </tag>
            
            <tag> 动画效果 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常见GitHub访问失败汇总</title>
      <link href="/2023/07/11/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/github/%E5%B8%B8%E8%A7%81GitHub%E8%AE%BF%E9%97%AE%E5%A4%B1%E8%B4%A5%E6%B1%87%E6%80%BB/"/>
      <url>/2023/07/11/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/github/%E5%B8%B8%E8%A7%81GitHub%E8%AE%BF%E9%97%AE%E5%A4%B1%E8%B4%A5%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="常见情况的github访问失败的汇总"><a href="#常见情况的github访问失败的汇总" class="headerlink" title="常见情况的github访问失败的汇总"></a>常见情况的github访问失败的汇总</h1><p>作为程序员，在github上的操作是避免不了的。但是由于某些原因，github的访问经常会出现各种问题，比如超时。现在汇总一下各种情况下如何解决。</p><h2 id="TimeOut"><a href="#TimeOut" class="headerlink" title="TimeOut"></a>TimeOut</h2><p>这是最常见的问题。在各种环境都存在。</p><h3 id="Git-GUI"><a href="#Git-GUI" class="headerlink" title="Git GUI"></a>Git GUI</h3><p>Git GUI往往都是在上传我的博客的时候会出现的问题。我现在的操作方案是修改了一下网文GitHub的网址的描述方案。</p><p>之前也曾经尝试过一些乱七八糟的方案，</p><ul><li><p>比如最为常见的设置代理再取消代理。———-有时有效</p></li><li><p>开全局代理————————————————无效.应该是git并不走代理的原因，就像uwp应用默认也不进行代理。</p></li></ul><h3 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h3><p>在这里是用于上传Github图床，有时就会出现这个问题。</p><p>这个的操作方式目前，目前是通过steam++的加速Github的PAC模式进行操作。</p><h3 id="VSCode"><a href="#VSCode" class="headerlink" title="VSCode"></a>VSCode</h3><p>这里需要上传自己的文件到GitHub进行备份等，主要是超时问题。</p><p>目前是通过设置电脑代理，代理127.0.0.1的10809端口，然后在git的界面中设置代理这个端口。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.proxy &#x27;<span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">10809</span>&#x27;</span><br><span class="line">git config --global https.proxy &#x27;<span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">10809</span>&#x27;</span><br></pre></td></tr></table></figure><p>如果需要取消代理</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --unset http.proxy</span><br><span class="line">git config --global --unset https.proxy</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 实用技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实用技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记-放弃幻想认清现实</title>
      <link href="/2023/07/11/%E6%97%A5%E8%AE%B0/%E6%97%A5%E8%AE%B0-%E6%94%BE%E5%BC%83%E5%B9%BB%E6%83%B3%E8%AE%A4%E6%B8%85%E7%8E%B0%E5%AE%9E/"/>
      <url>/2023/07/11/%E6%97%A5%E8%AE%B0/%E6%97%A5%E8%AE%B0-%E6%94%BE%E5%BC%83%E5%B9%BB%E6%83%B3%E8%AE%A4%E6%B8%85%E7%8E%B0%E5%AE%9E/</url>
      
        <content type="html"><![CDATA[<h1 id="有些事情无法调和"><a href="#有些事情无法调和" class="headerlink" title="有些事情无法调和"></a>有些事情无法调和</h1><p>一个人总是会孤单，想起不该想的人<br>该给自己一个结论<br>她不会再回来了。<br>当初分手的原因很多。缺少关心，不信任，得不到对方家里的祝福!<br>没有祝福的家是不会圆满的。归根结底，自己还是不够好，做不到一定ok，哈哈哈哈啊哈。<br>现在她是别人的小傻子，和我有什么关系吗？并没有！<br>作为前男友，我搞个屁，就不去折腾了。<br>至于缺点嘛，一个是其实真的很没有动力，和我一样，失去了理解的心。<br>她只是被我绑上战车的人，自己并没有充足的动力，只是好奇有个关心的人罢了，灰烬的余火。<br>我以为是两个人的惺惺相惜，实际却是一个人的单相情愿，她的心里只是好奇，一个人冲进了她的生活，带来很很多的风景<br>有些话在慢慢讲，讲完了，就散了吧。风景看完了，人不能停留，我们终究会屈服于现实，一个充满人情事故的现实。<br>你会考虑到家里人的态度，你会执着于如何为什么对方不够优秀，不能满足基本的需求。<br>你我都不理解，大家只是懂得事情，没有去有情感上的共鸣。<br>情感上没有共鸣，哪里来的依据呢。<br>我想着事情去共鸣，但是我没有做好，省钱干嘛呢，哈哈哈。<br>不如去套话，去顺着她讲。去聊天，去认识到新的人的情感。<br>慢慢的两个人都烦了，我是真的好烦啊。<br>她总是那么冷漠，脾气那么大，动不动喜欢删除联系方式。<br>不爱讲话沟通，冷战，平时也不想讲话。很冰，聊天讲不了话，生气讲不了话。不理她过一段时间就是删除好友<br>好难伺候。<br>现在还来得及，大家还有很多的机会。是放弃吧。<br>嘿嘿欸黑</p><p>现在，给自己一个目标。<br>2024.1.1 65kg<br>给自己的交代。<br>配一台主机，就是想玩</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-学习路线-部署项目</title>
      <link href="/2023/07/11/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE/"/>
      <url>/2023/07/11/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="vue-学习路线-部署项目"><a href="#vue-学习路线-部署项目" class="headerlink" title="vue-学习路线-部署项目"></a>vue-学习路线-部署项目</h1><p>无论前面学习怎么样，最终还是落到项目的部署上来。</p><ol><li>下载并安装nginx</li><li>配置nginx</li><li>下载并安装node.js</li><li>打包vue项目</li></ol><h2 id="下载并安装nginx"><a href="#下载并安装nginx" class="headerlink" title="下载并安装nginx"></a>下载并安装nginx</h2><p>下载网址：<a href="http://nginx.org/en/download.html">nginx官方下载网址</a></p><p>版本区别：</p><ul><li><p><strong>Mainline version</strong>：正在开发中的版本，可以理解成开发版本</p></li><li><p><strong>Stable version</strong>：稳定版本，生产环境必备</p></li><li><p><strong>Legacy versions</strong>：历史版本</p></li></ul><p>此处我下载的是最新的windows稳定版本，下载之后，解压缩就好像可以直接使用。</p><p>停止的命令：</p><ol><li><p>cd到nginx的执行目录</p></li><li><p>这种是比较温和的，完成当前任务后停止：</p></li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -s quit</span><br></pre></td></tr></table></figure><p>这种比较强力，直接停止：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -s stop</span><br></pre></td></tr></table></figure><h2 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置nginx</h2><ol><li>修改&#x2F;conf&#x2F;nginx.conf文件</li><li>配置如下：</li></ol><p><img src="https://cdn.jsdelivr.net/2508838014/DrawingBed/pictures/pictures/image-20230711190712772.png" alt="image-20230711190712772"></p><ol><li><p>执行命令：测试配置是否正确</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -t</span><br></pre></td></tr></table></figure></li><li><p>打开对应程序</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">start</span> nginx</span><br></pre></td></tr></table></figure></li><li><p>在地址栏检查对应的内容是否ok</p></li></ol><h2 id="下载并安装node-js"><a href="#下载并安装node-js" class="headerlink" title="下载并安装node.js"></a>下载并安装node.js</h2><p>下载网址：<a href="https://nodejs.org/en">node.js官方下载网址</a></p><p>肯定是安装lst（long support stable）版本。</p><p>点击msi，一路接受就ok了。</p><h2 id="打包vue项目"><a href="#打包vue项目" class="headerlink" title="打包vue项目"></a>打包vue项目</h2><p>正常只需要执行下面这个命令就可以</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><p>然后把dist文件夹copy至nginx的配置中所设定的位置。</p><p>重新启动nginx就可以访问成功</p><h2 id="设为开机自启动"><a href="#设为开机自启动" class="headerlink" title="设为开机自启动"></a>设为开机自启动</h2><p>如果前面的设置没有问题，那就是没有问题了。现在做一些额外的内容，比如这个开机自启动。</p><p>把nginx.exe创建快捷方式，并且copy到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Startup</span><br></pre></td></tr></table></figure><p>这样就可以实现开启自启动了。</p>]]></content>
      
      
      <categories>
          
          <category> vue - 学习路线 - 部署项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习路线 </tag>
            
            <tag> vue </tag>
            
            <tag> 部署项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生日祝福</title>
      <link href="/2023/07/11/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/%E7%94%9F%E6%97%A5%E7%A5%9D%E7%A6%8F/"/>
      <url>/2023/07/11/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/%E7%94%9F%E6%97%A5%E7%A5%9D%E7%A6%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="生日华语"><a href="#生日华语" class="headerlink" title="生日华语"></a>生日华语</h1><p>冲姐姐，23岁生日快乐！<br>欢迎来到这个世界<strong>小时</strong>秒</p><p>xxxxxxxxxx cd C:\windows\system32\drivers\etccmd</p><p>愿生辰快乐，</p><p>春去秋往，万事胜意，</p><p>四方梦想，如愿以偿。</p><pre><code>                        &lt;div class=&quot;fb7-page-book&quot;&gt;                                &lt;h1&gt;目录&lt;/h1&gt;                                &lt;h6&gt;有些事我还记着&lt;/h6&gt;                                &lt;ol&gt;                                &lt;li&gt;&lt;a href=&quot;javascript:setPage(4)&quot;&gt;幸福莫过于初见&lt;/a&gt;&lt;/li&gt;                                &lt;li&gt;&lt;a href=&quot;javascript:setPage(4)&quot;&gt;打打闹闹，往前奔跑&lt;/a&gt;&lt;/li&gt;                                &lt;li&gt;&lt;a href=&quot;javascript:setPage(4)&quot;&gt;短暂的暑假&lt;/a&gt;&lt;/li&gt;                                &lt;li&gt;&lt;a href=&quot;javascript:setPage(4)&quot;&gt;步入大学&lt;/a&gt;&lt;/li&gt;                                &lt;li&gt;&lt;a href=&quot;javascript:setPage(4)&quot;&gt;Timeam sententiae nam at, vim eu harum quaerendum.&lt;/a&gt;&lt;/li&gt;                                &lt;li&gt;&lt;a href=&quot;javascript:setPage(4)&quot;&gt;Ea quo illum aliquando.&lt;/a&gt;&lt;/li&gt;                                &lt;li&gt;&lt;a href=&quot;javascript:setPage(4)&quot;&gt;Facete temporibus consectetuer id per, erant numquam rationibus cu his&lt;/a&gt;.&lt;/li&gt;                                &lt;/ol&gt;                                &lt;h6&gt;故事风起云涌&lt;/h6&gt;                                &lt;ol&gt;                                &lt;li&gt;&lt;a href=&quot;javascript:setPage(4)&quot;&gt;漫长的拉扯&lt;/a&gt;&lt;/li&gt;                                &lt;li&gt;&lt;a href=&quot;javascript:setPage(4)&quot;&gt;拉力赛冠军&lt;/a&gt;&lt;/li&gt;                                &lt;li&gt;&lt;a href=&quot;javascript:setPage(4)&quot;&gt;诸多的第一次&lt;/a&gt;&lt;/li&gt;                                &lt;li&gt;&lt;a href=&quot;javascript:setPage(4)&quot;&gt;大大方方向前走&lt;/a&gt;.&lt;/li&gt;                                &lt;/ol&gt;                                &lt;h6&gt;不经历风雨怎么见彩虹&lt;/h6&gt;                                &lt;ol&gt;                                &lt;li&gt;&lt;a href=&quot;javascript:setPage(4)&quot;&gt;深夜emo&lt;/a&gt;&lt;/li&gt;                                &lt;li&gt;&lt;a href=&quot;javascript:setPage(4)&quot;&gt;游戏后的争吵&lt;/a&gt;&lt;/li&gt;                                &lt;li&gt;&lt;a href=&quot;javascript:setPage(4)&quot;&gt;消失的好友&lt;/a&gt;&lt;/li&gt;                                &lt;li&gt;&lt;a href=&quot;javascript:setPage(4)&quot;&gt;重归于好&lt;/a&gt;&lt;/li&gt;                                &lt;li&gt;&lt;a href=&quot;javascript:setPage(4)&quot;&gt;逐步冷血&lt;/a&gt;&lt;/li&gt;                                &lt;li&gt;&lt;a href=&quot;javascript:setPage(4)&quot;&gt;现实的无奈&lt;/a&gt;&lt;/li&gt;                                &lt;li&gt;&lt;a href=&quot;javascript:setPage(4)&quot;&gt;不够努力的自己&lt;/a&gt;.&lt;/li&gt;                                &lt;/ol&gt;                                &lt;h6&gt;梦想的征途&lt;/h6&gt;                                &lt;ol&gt;                                &lt;li&gt;&lt;a href=&quot;javascript:setPage(4)&quot;&gt;大步向前&lt;/a&gt;&lt;/li&gt;                                &lt;li&gt;&lt;a href=&quot;javascript:setPage(4)&quot;&gt;认清自己&lt;/a&gt;&lt;/li&gt;                                &lt;li&gt;&lt;a href=&quot;javascript:setPage(4)&quot;&gt;未来共勉&lt;/a&gt;&lt;/li&gt;                                &lt;/ol&gt;                                                &lt;/div&gt;       </code></pre><p>今年的生日没有礼物。就自己做了个网站给姐姐庆生。<br>哇，从遇见你已经好久好久了啊。17岁高二遇见了你。当时看到你其实第一眼看着没有多少感受，就是很正常啊，天天在那里看小说，哪里来的儿女情长。<br>最开始相见的记忆已经模糊不清，但是在高中同一片屋檐下学习的日子却逐步烙印在心中。<br>当时慢慢发现和你聊天挺有意思的，捉弄着你，吸引你的注意力是真的有意思。<br>现在想想那就是来自青春的荷尔蒙在涌动吧，当时还没有想到我们能有那么多的交际。<br>配图：回忆相关</p><p>你第一次在我心中留下深刻的印象是一次周末回来。<br>记不清当时为什么，你请了你周围一圈喝奶茶。我第一次得到来自女孩子的奶茶，当时突然就觉得你这个人很好。<br>心中认定，你是一个值得结交的人。<br>高中的生活那么平淡且幸福。<br>看小说，捉弄你，睡觉，学习。<br>看小说，捉弄你，睡觉，学习。<br>看小说，捉弄你，睡觉，学习。<br>看小说，捉弄你，睡觉，学习。<br>高中结束了。<br>配图高中教室</p><p>来到了人生中少有的没有后续学习压力的第一个暑假。<br>焦急的等待着自己的分数。在高考查分的那一天。我心里压力拉满。<br>还记得那是一个下午查分的时刻，真正开始查询分数的时间比官方通知的时间提前了几个小时。<br>我一个人在家，查到的分数与一本线进行对比，感觉有点低。也算不出所料吧。<br>接下来就是打听身边人的分数，在听到姐姐与我同分的时候是有点小确幸的。想听着你的志愿，一起步入大学。<br>但是自己还是太胆小了，后面你第一批没有成功心中我也在为你可惜，心中也是重新燃起一丝希望，我们似乎真的可以在同一个大学。在同一个省份。<br>在得知你远在哈尔滨之后，我搜索了下哈尔滨的位置，太远了。路费有点小贵。没有前往哈尔滨和姐姐带过一段时间可以说是我在大学中最后悔的事情了。<br>在这个暑假里，我第一次得到了和你独处的机会。和后来的你一样，还是喜欢躺在床上，看着你呼呼大睡的样子，我可以说是心中有了一些小想法。<br>想让你成为我的女朋友。<br>嘿嘿嘿。<br>配图小猪睡床</p><p>步入大学的校门。一切那么陌生，你算少有的同龄人，成为了交流的对象。<br>步入了一个新的阶段。</p><p>风起云涌</p><p>步入大学，脸皮越来越厚。<br>经常在qq里调戏姐姐，把姐姐撩的很。但是异地恋的痛苦让姐姐又很不愿意接受。<br>我开始死缠烂打，在中间也慢慢了解姐姐，了解姐姐的身世，了解姐姐的性格，明白姐姐喜怒哀乐。<br>成为姐姐的男友也慢慢稳步推进。<br>但是异地恋的难处，也让两个人望而却步。<br>感情的升温与现实的冷漠成了两人之间深深的隔阂。</p><p>终究凭借着三寸不烂之舌我说服了姐姐。<br>修成正果！<br>配图:qq截图同意女朋友</p><p>有了女朋友之后，就可以解锁好多好多的成就了。<br>第一次异性的电影<br>第一次和女友逛街<br>第一次接吻<br>第一次那么温暖的抱抱<br>。。。。。。</p><p>我们一起约定，好好的。<br>郎才女貌。<br>一起有个温暖的家<br>明媒正娶，不要孩子，好好过二人世界。<br>那段时间眼中只有彼此。</p><p>好事多磨<br>我们之后开始有了争执，<br>印象最深的时候，那是一个夜晚，半夜一两点了。我收到了来自姐姐二十多个电话，惊得我连忙回拨回去。<br>很幸运接通了，当时具体在讲什么呢？大致是挽留吧，当时我出了宿舍门，你也在楼道口，讲了好久好久的电话。<br>现在想想，因为大家都是有点期待吧，电话哪怕是道歉，可是也可以讲好久，接听的人也可以听好久。大家都支持很久。<br>许多的问题我现在还记得，我不回消息，打电话也不接。大晚上讲话讲着讲着，我居然是睡着了。老猪了。<br>我对姐姐也是提了一堆要求的样子，要求姐姐接受我，虽然我优点没看到，但是脸皮是看到了。</p><p>哇，当时打游戏也是一堆问题。<br>印象中还是我带你打的王者，当时趁着你很菜的时候，欺骗你做了你的师傅，还在1v1的时候没有丝毫手下留情，各种花式吊打。<br>可惜，我终究还是个菜鸡，情商也低，在双排的时候不能眼观六路，救姐姐于水火，还不能带姐姐夺取胜利。<br>玩了许多局，就像一根木头，不讲话，默默输掉，疯狂掉分，不像双排，怨气越来越大。<br>最后都不乐意一起双排了。双排成为了负担。交流的信息越来越少了。</p><p>两人的矛盾越来越多，终究开始的删除好友，大家各自开始。<br>我们俩也会在轮流服软，各自找个阶梯，一次次删除再加上好友。<br>消耗了热情，问题却还有，我们之间需要一个变数，一个很大的变数。<br>这个变数要么是开辟新的方向，足以让我们俩消耗精力在其中，就比如热恋中的畅谈。<br>要么是环境的变化，两人生活在一起，可以经常见面交流，很舒服。<br>可惜，我们都没有这种的变化，<br>我们走向的是分开，环境还是那样，正如我一开始看到的，我觉得两人的家距离很近，很方便的，你觉得很远，不能天天见面交流。<br>这个后面也的确不算什么，但是在学生的我们的眼中，的确很远。<br>热情消散了。</p><p>这中间我又发起了冲锋，勇敢牛牛，不怕困难。<br>我们又好了一段时间，可是我们俩都没有说，问题他还在，需要一个变量，不然就是慢性死亡。<br>这个变量，我期待着毕业，你说考研，我说考公，大家走了不同的路，交流越来越少。<br>不过我们还是情侣。<br>很有意思的情侣，很特殊，因为我周围的人都看好我，却也知道，又分手了，却不知道什么时候会又复合了。</p><p>两人两条路，大家都在走着，姐姐却因为疫情，失败了。<br>我也因为选错了赛道，落选了。<br>幸运没有眷顾着我们俩，<br>爱神也没有眷顾，在我们最需要彼此抱团取暖的时刻，我们却相隔一方。<br>血越来越冷。</p><p>毕业了，我们俩真的失业了。<br>新的噩耗，传到我的耳中，我父亲出了变故。那段时间你奔波在外，谋取生路。<br>我在照顾一段时间后，毅然放弃原有的想法，踏上了谋取生存的道路。<br>可是我的心态变了，我不是那个能够笑呵呵说着我娶你啊，我知道，我现在不够。<br>我是个社会上的人了，面临了更多的要求。<br>娶一个人，基本的要求都满足不了，那怎么有用呢？<br>现实很骨感。</p><p>这中间其实我也有很多的机会，但是我很差，没有满足要求。<br>我记得比如当时说要减肥，直到现在，我估计我也就是稳定在70公斤这样。<br>有许多的要求，我都不能满足。<br>娶姐姐的要求真的很低啊。这么低的要求，我没有理由去吐槽，去要求更低。<br>姐姐的要求也很低啊，光明正大的谈个恋爱，怎么了，没有问题啊。<br>一米八。<br>不错的身材。<br>对你好。<br>不算多的彩礼。<br>我真的不够好吧，我只能自己在其他方向上发光发热了。</p><p>梦想的征途<br>现在相隔不远，但是心中的距离很远。<br>那个是世人的眼光，是心底对于认可的要求。<br>大家年龄不大，还可以选择路。<br>踏上自己的征程吧</p><p>想了下我自己。<br>我的优点也就剩下，目前工资其实还好，但是可惜还要还房贷，呜呜呜呜。<br>也就剩下对女友好了，全心全意的好，我会真的想去摘星星，摘不下来就画下来，把星星让心爱的人捧起。</p><p>未来的路，大家共同向前。</p><p>姐姐，满意这个生日礼物嘛。<br>接下来是评价环节。<br>如果姐姐有男友。那我麻溜的走开，发个邮件<a href="mailto:&#x32;&#x35;&#48;&#x38;&#x38;&#x33;&#56;&#48;&#49;&#x34;&#64;&#113;&#113;&#46;&#99;&#111;&#x6d;">&#x32;&#x35;&#48;&#x38;&#x38;&#x33;&#56;&#48;&#49;&#x34;&#64;&#113;&#113;&#46;&#99;&#111;&#x6d;</a>给我，告诉我你真的有男友，还有满意度<br>满意，一般般，渣渣<br>最好附上优化意见，求求你了。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 - 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生日祝福 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vps流量消失事件</title>
      <link href="/2023/07/11/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/vps%E6%B5%81%E9%87%8F%E6%B6%88%E5%A4%B1%E4%BA%8B%E4%BB%B6/"/>
      <url>/2023/07/11/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/vps%E6%B5%81%E9%87%8F%E6%B6%88%E5%A4%B1%E4%BA%8B%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="记录vps流量离奇消失案件。"><a href="#记录vps流量离奇消失案件。" class="headerlink" title="记录vps流量离奇消失案件。"></a>记录vps流量离奇消失案件。</h1><p>在想要使用，发现打不开，然后自己的端口也没有。在自己的服务主页，发现商品的被管理员关闭。通过工单询问后得知，因为带宽被消耗一空，向管理员进行申诉。<br>未来怎么避免再此发生。</p><h1 id="记录自己的VPS盗刷"><a href="#记录自己的VPS盗刷" class="headerlink" title="记录自己的VPS盗刷"></a>记录自己的VPS盗刷</h1><p>首先定位为什么被盗刷。<br>分析已知信息。自己被盗刷的时间应该是25号左右。盗刷时间大概一整天。结合25号自己的作为，有这么几种可能性：</p><ul><li>自己的上传与下载信息没有加密，新建了一个链接，导致被人抓取，意外导致事情的发生。</li><li>VNC软件有问题，被人窃取电脑信息，导致连接。顺便说一嘴，公司也正好发生了不应该的上传信息。但是幸好，经过判断不是自己的账号，但是人魂都被吓走了</li></ul><p>那如何判断呢？<br>如果自己重新登陆上去的时候，发现x-ui面板上有流量统计不正常的记录，那大概率就是因为加密问题。<br>删除不安全的链接。<br>如果上去没有异常现象，那我最好是重置一些密码，把</p><p>自己的VPS搭建成功后并没有每天去巡视，以后有经验的了，必须做一个限制。之后我要上机看看是什么导致的这个原因。<br>可以看到我的流量在不知道什么情况下，流量全部被消耗一空。</p><h1 id="最终结论"><a href="#最终结论" class="headerlink" title="最终结论"></a>最终结论</h1><p>我把账号密码重置为复杂版本就ok了</p><p>说明简单的0000会被强行撞库撞出来。</p>]]></content>
      
      
      <categories>
          
          <category> vps - 知错就改 - 流量消失 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vps - 流量消失 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx-知错就改-http500</title>
      <link href="/2023/07/11/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/npm/nginx-%E7%9F%A5%E9%94%99%E5%B0%B1%E6%94%B9-http500/"/>
      <url>/2023/07/11/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/npm/nginx-%E7%9F%A5%E9%94%99%E5%B0%B1%E6%94%B9-http500/</url>
      
        <content type="html"><![CDATA[<h1 id="nginx-知错就改-http500"><a href="#nginx-知错就改-http500" class="headerlink" title="nginx-知错就改-http500"></a>nginx-知错就改-http500</h1><h1 id="错误信息"><a href="#错误信息" class="headerlink" title="错误信息"></a>错误信息</h1><p>在logs的error中可以看到</p><p>rewrite or internal redirection cycle while internally redirecting to “&#x2F;index.html”, client: 192.168.*.62, server: localhost, request: “GET &#x2F; HTTP&#x2F;1.1”, host: “192.168.*.62”</p><p>这样的错误提示。</p><p>浏览主页显示也不正常；提示错误500</p><p><img src="https://github.com/2508838014/DrawingBed/blob/main/pictures/image-20230711195233711.png" alt="image-20230711195233711"></p><h1 id="错误原因"><a href="#错误原因" class="headerlink" title="错误原因"></a>错误原因</h1><p>因为就是路径不正确。需要认真考虑好路径</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>检查root的路径是否有问题。改正问题</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>新知识get</p>]]></content>
      
      
      <categories>
          
          <category> ngnix - 知错就改 - http500 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx - 知错就改 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx-学习路线-基础配置</title>
      <link href="/2023/07/11/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/npm/nginx-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/"/>
      <url>/2023/07/11/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/npm/nginx-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="nginx-学习路线-基础配置"><a href="#nginx-学习路线-基础配置" class="headerlink" title="nginx-学习路线-基础配置"></a>nginx-学习路线-基础配置</h1><p>今天开始准备了nginx的配置，发现还是有很多的坑等内容的。</p><ol><li>root</li><li>index</li><li>location</li><li>server_name</li></ol><h2 id="root"><a href="#root" class="headerlink" title="root"></a>root</h2><p>很直白，根目录的意思，但是这个需要注意的是填写内容的方式。</p><p>根据我的亲身体验，默认的起始地址有点可能是nginx.exe所在的位置。</p><h2 id="index"><a href="#index" class="headerlink" title="index"></a>index</h2><p>我对这个的认知理解就是到所匹配的根目录后索要匹配的文件。</p><h2 id="location"><a href="#location" class="headerlink" title="location"></a>location</h2><p>这个就是重定向的关键</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">#监听的端口</span><br><span class="line">listern   80;</span><br><span class="line">#监听的ip/域名（一台设备可以有多个域名，多个ip）</span><br><span class="line">server_name  localhost;</span><br><span class="line">#匹配/images/开头过来的url</span><br><span class="line">location /images/ &#123;</span><br><span class="line">#如果location中与外部有重叠，内部为准</span><br><span class="line">server_name    example2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#没有做任何额外匹配，可以理解成默认情况</span><br><span class="line">location / &#123;</span><br><span class="line">root   /34/</span><br><span class="line">index  index.html index htm</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> nginx - 学习路线 - 基础配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx - 学习路线 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github与JSDelivr与PicGo与Typora免费图床</title>
      <link href="/2023/07/11/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/github/Github%E4%B8%8EJSDelivr%E4%B8%8EPicGo%E4%B8%8ETypora%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8A/"/>
      <url>/2023/07/11/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/github/Github%E4%B8%8EJSDelivr%E4%B8%8EPicGo%E4%B8%8ETypora%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www2014.aspxhtml.com/post-23469/">GitHub+JSDelivr+PicGo+Typora免费白嫖高速稳定图床 - AspxHtml学习分享网</a><br>上面是关注链接，下面是上面的内容的搬运，防止对方消息</p><h2 id="创建Github仓库"><a href="#创建Github仓库" class="headerlink" title="创建Github仓库"></a>创建Github仓库</h2><p>注册&#x2F;登录自己的 GitHub，创建一个新的名字任意的公开仓库。然后上传图片到仓库中，这里我直接使用浏览器端上传的，也可以使用 Git 进行上传。</p><ul><li>在创建的仓库中Upload files。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/2508838014/DrawingBed//pictures/202306301923325.png" alt="image-20230630191927757"></p><ul><li><p>选择上传的图片，然后提交</p><p><img src="https://cdn.jsdelivr.net/gh/2508838014/DrawingBed//pictures/202306301924822.png" alt="image-20230630192032685"></p></li><li><p>提交之后，就可以在浏览器通过地址进行访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//raw.githubusercontent.com/你的用户名/你的仓库名/main/文件路径</span><br></pre></td></tr></table></figure></li><li><p>之后就是使用链接进行访问即可</p></li></ul><h2 id="使用jsDelivr进行CDN加速"><a href="#使用jsDelivr进行CDN加速" class="headerlink" title="使用jsDelivr进行CDN加速"></a>使用jsDelivr进行CDN加速</h2><p>前面已经利用 GitHub 仓库实现了图床功能，但是大家都知道，GitHub 在国内访问很慢，甚至经常打不开，那么我们的图片就存在加载速度慢的问题，怎么办呢？<strong>jsDelivr</strong> 可以解决此问题，显著提高图片访问的响应速度，并且开源免费！其官网为：<a href="https://www.jsdelivr.com/">jsDelivr - A free, fast, and reliable CDN for open source</a>。</p><p>使用方法也非常的简单，直接在浏览器通过地址<code>//cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径</code>就可以访问 GitHub 上的图片，并且响应速度非常快！其中@发布的版本号可以直接省略，默认加载最新版本，即直接可以简写为<code>//cdn.jsdelivr.net/gh/你的用户名/你的仓库名/文件路径</code></p><p>比如：&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;yifeng-talking&#x2F;pictures&#x2F;avatar.jpg</p><h2 id="使用PicGo上传图片"><a href="#使用PicGo上传图片" class="headerlink" title="使用PicGo上传图片"></a>使用PicGo上传图片</h2><p>前面实现了 GitHub 仓库作为图床，jsDelivr 对图片进行加速。但是每次我们都需要使用 Git 工具或者在 GitHub 仓库中进行上传图片，并且要自己拼接图片地址，非常麻烦，有没有更快速更简洁的方式呢？此时神器 <strong>PicGo</strong> 就派上了用场，同样开源免费！</p><p>PicGo 是一个用于快速上传图片并获取图片 URL 链接的工具，支持多个图床进行使用，其中当然包括我们现在使用的 GitHub 图床了，它同时支持 Windows、macOS、Linux平台，详情可见：<a href="https://github.com/Molunerfinn/PicGo">Molunerfinn&#x2F;PicGo: A simple &amp; beautiful tool for pictures uploading built by vue-cli-electron-builder (github.com)</a></p><p>这里以 Windows 为例，说明 PicGo 的使用方法。</p><ul><li><p>下载并安装 PicGo，&#x2F;&#x2F;github.com&#x2F;Molunerfinn&#x2F;PicGo&#x2F;releases&#x2F;download&#x2F;v2.2.2&#x2F;PicGo-Setup-2.2.2.exe</p></li><li><p>打开 PicGo 软件，找到<code>图床设置</code>中的<code>GitHub图床</code>，填写相关信息。</p><ul><li><p><strong>设定仓库名【必填】</strong>：填写<code>你的用户名/你的仓库名</code>，比如我的 yifeng-talking&#x2F;pictures</p></li><li><p><strong>设定分支名【必填】</strong>：填写<code>main</code></p></li><li><p><strong>设定Token【必填】</strong>：在Github主页点击自己头像后，依次选择【Settings】-&gt;【Developer settings】-&gt;【Personal access tokens】-&gt;【Generate new token】，填写Note描述（随便），设置过期时间Expiration为永不过期No expiration，设定勾选【repo】，然后点击下方的【Generate token】生成一个Token，这个Token只会显示一次，自行保存，然后复制到 PicGo 中。</p></li><li><p>指定存储路径【选填】：填写图片要存储的路径，比如填【images&#x2F;】，这样就会在仓库下创建一个名为 images 的文件夹，图片将会储存在此文件夹中，这里不填。</p></li><li><p><strong>设定自定义域名【选填】</strong>：图片上传后，PicGo 会按照【自定义域名+上传的图片名】的方式生成访问链接，放到剪贴板上，因为我们要使用 jsDeliver 进行加速，因而这里设置为<code>//cdn.jsdelivr.net/gh/你的用户名/你的仓库名</code>，比如我设置为**&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;yifeng-talking&#x2F;pictures**</p><p><img src="https://cdn.jsdelivr.net/gh/2508838014/DrawingBed//pictures/202306301934822.png" alt="image-20230630193403797"></p><ul><li><p>接着就可以在<code>上传区</code>，将自己的图片上传，甚至可以直接将剪切板的截图上传，上传成功后会直接将相应链接复制到剪切板中，我们就可以直接复制到博客（MarkDown 编辑器）中。</p></li><li><p>在<code>PicGo设置中</code>，可以自定义一些设置，比如上传前重命名、时间戳重命名等，自行设置。</p></li></ul></li></ul></li></ul><h2 id="Typora配置PicGo上传"><a href="#Typora配置PicGo上传" class="headerlink" title="Typora配置PicGo上传"></a>Typora配置PicGo上传</h2><p>​      前面使用了 PicGo 工具快速上传图片并获取图片 URL 链接，方便了很多，但是每次都要先在 PicGo 中进行上传，然后将剪切板中链接复制到 MarkDown 编辑器中，有没有更优雅简便的方式，可以将两步合二为一呢？答案是<strong>Typera+PicGo</strong>。</p><p>Typera 是一款轻便简洁的 Markdown 编辑器，可以即时渲染，并且完全免费，推荐大家用此软件进行写作，其官网为：<a href="https://www.typora.io/">Typora — a markdown editor, markdown reader.</a></p><p>下面介绍 Typora 结合 PicGo 实现上传功能。</p><ul><li><p>下载 Typora，网址<a href="https://www.typora.io/#windows">Typora — a markdown editor, markdown reader.</a></p></li><li><p>打开 PicGo，在<code>PicGo设置</code>中，点击【设置 Server 】，将监听端口修改为：36677</p></li><li><p>打开 Typera，点击【文件】 -&gt; 【偏好设置】-&gt; 【图像】，然后进行如下配置，其中 PicGo 路径是你的 PicGo 的安装路径。</p><p><img src="https://cdn.jsdelivr.net/gh/2508838014/DrawingBed//pictures/202306301936343.png" alt="image-20230630193601321"></p></li><li><p>在 Typera 中书写文章，插入图片（也可以直接将截图复制）时会自动将图片进行上传，并显示在文章中，非常的方便。当然插入图片时也可以不选择上传图片，也就是不自动上传图片，可以手动在图片上右击上传图片。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/2508838014/DrawingBed//pictures/202306301936975.png" alt="image-20230630193647949"></p><p>以上就是使用 <code>GitHub</code> + <code>jsDelivr</code> + <code>PicGo</code> + <code>TyPora</code> 搭建免费稳定图床的全过程，希望对你有所帮助！</p>]]></content>
      
      
      <categories>
          
          <category> 小工具 - 图床 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-学习路线-删除文章</title>
      <link href="/2023/07/10/hexo/hexo-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-%E5%88%A0%E9%99%A4%E6%96%87%E7%AB%A0/"/>
      <url>/2023/07/10/hexo/hexo-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-%E5%88%A0%E9%99%A4%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-学习路线-删除文章"><a href="#hexo-学习路线-删除文章" class="headerlink" title="hexo-学习路线-删除文章"></a>hexo-学习路线-删除文章</h1><p>有的时候有些文章我们需要删除，因为写的太烂。但是怎么删除也是一个问题。直接删除好像是会导致文件的生成错误。</p><p>所以需要进行一些额外的操作。</p><ol><li><p>打开source目录下_post文件夹下的需要删除的文章，进行删除</p></li><li><p>进入hexo的界面。执行</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure></li><li><p>删除完成。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
          <category> 学习路线 </category>
          
          <category> 删除文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 学习路线 </tag>
            
            <tag> 删除文章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-学习路线-tags与categories的认识</title>
      <link href="/2023/07/10/hexo/hexo-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-tags%E4%B8%8Ecategories%E7%9A%84%E8%AE%A4%E8%AF%86/"/>
      <url>/2023/07/10/hexo/hexo-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-tags%E4%B8%8Ecategories%E7%9A%84%E8%AE%A4%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-学习路线-tags-categories"><a href="#hexo-学习路线-tags-categories" class="headerlink" title="hexo-学习路线-tags,categories"></a>hexo-学习路线-tags,categories</h1><p>虽然自己写了很多次的博客，但是tags与categories还是没有分清区别。这里就进行一次区分。</p><h2 id="tags"><a href="#tags" class="headerlink" title="tags"></a>tags</h2><ul><li><p>顺序性：不区分先后</p></li><li><p>层级：不区分层级</p></li></ul><h2 id="categories"><a href="#categories" class="headerlink" title="categories"></a>categories</h2><ul><li><p>顺序性：顺序有一定的影响</p></li><li><p>层级：区分多层层级</p></li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line"><span class="bullet">-</span> category1</span><br><span class="line"><span class="bullet">-</span> category2</span><br></pre></td></tr></table></figure><p>等价于</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line"><span class="bullet">-</span> category1</span><br><span class="line"><span class="bullet">-</span> category2</span><br></pre></td></tr></table></figure><p>等价于</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line"><span class="bullet">-</span> [category1,category2]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
          <category> 学习路线 </category>
          
          <category> tags </category>
          
          <category> categories </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 学习路线 </tag>
            
            <tag> tags </tag>
            
            <tag> [object Object] </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-学习路线-自定义事件的解绑</title>
      <link href="/2023/07/10/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BA%8B%E4%BB%B6%E7%9A%84%E8%A7%A3%E7%BB%91/"/>
      <url>/2023/07/10/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BA%8B%E4%BB%B6%E7%9A%84%E8%A7%A3%E7%BB%91/</url>
      
        <content type="html"><![CDATA[<h1 id="vue-学习路线-自定义事件的解绑"><a href="#vue-学习路线-自定义事件的解绑" class="headerlink" title="vue-学习路线-自定义事件的解绑"></a>vue-学习路线-自定义事件的解绑</h1><p>在vue中可能会出现自己需要把自己定义的事件从之前的组件上解绑</p><h2 id="vue2"><a href="#vue2" class="headerlink" title="vue2"></a>vue2</h2><p>解绑事件有多个方案:</p><ul><li>在被绑定的组件内</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">unbindmethod1()&#123;</span><br><span class="line">this.$off(&#x27;eventName&#x27;)//解绑自定义事件</span><br><span class="line">&#125;</span><br><span class="line">unbindmethod2()&#123;</span><br><span class="line">this.$off(&#x27;eventName1&#x27;,&#x27;eventName2&#x27;)//解绑多个自定义事件</span><br><span class="line">&#125;</span><br><span class="line">unbindmethod3()&#123;</span><br><span class="line">this.$off()//解绑多个自定义事件</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：在组件被销毁之后，自定义事件全部销毁，但是原生事件还是可以生效的。</p><ul><li>在父组件内</li></ul><pre><code class="vue">&lt;template&gt;    &lt;myComponent @myEventName1=&#39;myMethodName1&#39;&gt;&lt;/myComponent&gt;    &lt;myComponent @myEventName1=&#39;myMethodName2(value)&#39;&gt;&lt;/myComponent&gt;&lt;/template&gt;&lt;script&gt;    methods:&#123;        //无参绑定        myMethosName1()&#123;            console.log(&quot;123&quot;)        &#125;,       //有参绑定       myMethosName2(value)&#123;            console.log(&quot;123&quot;)        &#125;,    &#125;&lt;/script&gt;</code></pre>]]></content>
      
      
      <categories>
          
          <category> vue - 学习路线 - 自定义事件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习路线 </tag>
            
            <tag> vue </tag>
            
            <tag> 自定义事件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-学习路线-自定义事件的绑定</title>
      <link href="/2023/07/10/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BA%8B%E4%BB%B6%E7%9A%84%E7%BB%91%E5%AE%9A/"/>
      <url>/2023/07/10/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BA%8B%E4%BB%B6%E7%9A%84%E7%BB%91%E5%AE%9A/</url>
      
        <content type="html"><![CDATA[<h1 id="vue-学习路线-自定义事件绑定"><a href="#vue-学习路线-自定义事件绑定" class="headerlink" title="vue-学习路线-自定义事件绑定"></a>vue-学习路线-自定义事件绑定</h1><h2 id="事件的绑定"><a href="#事件的绑定" class="headerlink" title="事件的绑定"></a>事件的绑定</h2><p>首先自定义的事件是通过两个方面来进行绑定的。一个是父组件，一个是子组件。</p><h2 id="事件的绑定-1"><a href="#事件的绑定-1" class="headerlink" title="事件的绑定"></a>事件的绑定</h2><p>首先在父组件中填入内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;myComponent @myEventName1=&#x27;myMethodName1&#x27;&gt;&lt;/myComponent&gt;</span><br><span class="line">&lt;myComponent @myEventName1=&#x27;myMethodName2(value)&#x27;&gt;&lt;/myComponent&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    methods:&#123;</span><br><span class="line">        //无参绑定</span><br><span class="line">        myMethosName1()&#123;</span><br><span class="line">            console.log(&quot;123&quot;)</span><br><span class="line">        &#125;,</span><br><span class="line">       //有参绑定</span><br><span class="line">       myMethosName2(value)&#123;</span><br><span class="line">            console.log(&quot;123&quot;)</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>子组件myComponent中填入如下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;button @ckick=&#x27;myChildMethodName1&#x27;&gt;&lt;/button&gt;</span><br><span class="line">&lt;button @ckick=&#x27;myChildMethodName2(value)&#x27;&gt;&lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    methods:&#123;</span><br><span class="line">        无参绑定</span><br><span class="line">        myChildMethosName1()&#123;</span><br><span class="line">            console.log(&quot;234&quot;)</span><br><span class="line">            this.e$emit(&quot;myEventName1&quot;)</span><br><span class="line">        &#125;,</span><br><span class="line">        //有参绑定</span><br><span class="line">        myChildMethosName2(value)&#123;</span><br><span class="line">            console.log(&quot;234&quot;)</span><br><span class="line">            this.e$emit(&quot;myEventName1&quot;,value)</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue - 学习路线 - 自定义事件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习路线 </tag>
            
            <tag> vue </tag>
            
            <tag> 自定义事件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>水上漂流的奇妙之旅</title>
      <link href="/2023/07/02/%E6%97%A5%E8%AE%B0/%E6%B0%B4%E4%B8%8A%E6%BC%82%E6%B5%81%E7%9A%84%E5%A5%87%E5%A6%99%E4%B9%8B%E6%97%85/"/>
      <url>/2023/07/02/%E6%97%A5%E8%AE%B0/%E6%B0%B4%E4%B8%8A%E6%BC%82%E6%B5%81%E7%9A%84%E5%A5%87%E5%A6%99%E4%B9%8B%E6%97%85/</url>
      
        <content type="html"><![CDATA[<h1 id="水上漂流的奇妙之旅"><a href="#水上漂流的奇妙之旅" class="headerlink" title="水上漂流的奇妙之旅"></a>水上漂流的奇妙之旅</h1><p>故事的开头还要从一次水上乐园开始。</p><h2 id="事情的开章"><a href="#事情的开章" class="headerlink" title="事情的开章"></a>事情的开章</h2><p>夏日炎炎，一行三人甲乙丙，三个当代大学生准备前往水上乐园欣赏夏日的美景与感受玩水的乐趣。</p><p>三人在游玩了几个惊险刺激的项目后，突然一个水上漂流的内容引起了三人的注意。作为这个水上乐园唯一的内部收费项目，它必然有着自己独到的特点才能脱颖而出。于是三人很快啊，就交了租金，租三个单人的橡皮船，踏上了漂流之旅。却不曾想，这成为了不幸的开端。</p><p>甲没有学过游泳之类的，手脚比较笨重，在坐到橡皮船上，一招不慎，翻了个底朝天。但也幸好水不深，很快就站稳了脚步，准备重新出发。在工作人员的帮助下，也顺利坐了上去。其余两人手脚伶俐的坐到了属于自己的橡皮船上。即将开始漂流之旅。</p><p>漂流还没开始，乙就发现甲的眼镜不见了，顿时甲开始慌了神，立刻从橡皮船上翻了出来，开始寻找着眼镜，期盼着丢失的时间不长，还是可以找到。在甲寻找的时间里，乙丙也由于水流的作用，一路向下，但也心中牵挂着甲的事情，早早的结束了漂流，来到起点准备一起帮忙寻找。</p><h2 id="大海捞针"><a href="#大海捞针" class="headerlink" title="大海捞针"></a>大海捞针</h2><p>在这水道中找到一个小小的眼镜，就仿佛大海捞针。甲在经过翻来覆去的寻找之后，终究还是决定放弃，在水流的作用下，安静的享受这漂流的感受。慢慢的，顺着水流，甲终于还是回到了起点，在这里。甲乙丙三人再次碰了头。作为好兄弟，怎么能看着兄弟东西丢失自己无动于衷呢，于是三人再次燃起战火，开始了全地图的寻找。</p><h2 id="刻舟求剑"><a href="#刻舟求剑" class="headerlink" title="刻舟求剑"></a>刻舟求剑</h2><p>突然乙想出来了一个想法，我们这慢慢找和刻舟求剑有什么区别啊，不如我拿我眼镜测一下水速，不就能判断出大致位置，这不找的更快嘛。说干就干，乙叫来丙帮忙看着。并且嘱咐着，我一放手你就抓紧抓着，丙一听这个主意好啊。三，二，一，放手。只见眼镜入水一瞬间，便顺着水流快速跑去，乙一伸手，没摸到。丙这眼疾手快，右手一探，摸回来一把水，水道里却再也不见眼镜的踪影。</p><p>这下好了，一个人丢眼镜变成两个人丢眼镜。都是大学生，离开了眼镜仿佛一个睁眼瞎，大家这下找眼镜的需求变成了必须了，三人中出现两个瞎子可回不了家。幸好，整个水道不算那么长，整个一圈也就漂流三四十分钟的水准，一路摸索着，终究从起点，又即将到达起点。大家的士气也慢慢降下来，准备接受这个答案，回去先配眼镜去了。</p><h2 id="守株待兔"><a href="#守株待兔" class="headerlink" title="守株待兔"></a>守株待兔</h2><p>忽然，一个救生员游了过来，原来这一路上他们看到这三人的动作也帮忙找了眼镜，居然真的在接近终点的地方找到了一副眼镜，经过辨认。这是来自甲的眼镜，这下三人的士气再次振奋起来，抛弃负重把橡皮船放到岸边，全力以赴找眼镜，既然能找到第一个，就可以找到第二个。大海捞针也未尝不可！</p><p>在询问过前面安全员怎么发现的方式，三人决定拉网，守株待兔的寻找。原来是在接近终点的地方发现的。原来水流这么强啊，不如我们三人就蹲在这守住，就看眼镜会不会飘过来。守株待兔模式启动。</p><p>伴随着守株待兔与时不时的调整位置，皇天不负有心人。终于是让乙脚下踩到了眼镜，刚出来一看，旁边就有一个女生说，这就是我的眼镜，乙简单辨认了一下，真的不是自己的眼镜，只好失望的把眼镜交还给了别人。但是有一就有二，三人一路上疯狂寻找，却也怎么都找不到另外的眼镜，太阳也慢慢的从天空中隐去了自己的身影。不找了，三人在最后的尝试后，决定放弃了寻找。</p><p>先把橡皮艇还回去吧，三人来到了之前放橡皮艇的地方。是这里吗？是这里吧！三人对视了一眼，原来放着其中两人橡皮船的地方赫然只剩下了一个。真TM倒霉啊，眼镜丢了，这橡皮船也丢了。三人郁闷的回到了起点，正打算让工作人员帮忙打听一下，做最后的安排的乙却突然发现，这旁边的一个人的橡皮船怎么和自己的一样啊，他们明明只有两个人，却有三个橡皮船。便上去交涉，居然真的是自己的橡皮船。失而复得的喜悦短暂的压住心情，来到归还地点，三人因为超时却也还又被扣了一笔钱。</p><p>眉笔，真的眉笔。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cloudflare-优选节点</title>
      <link href="/2023/06/08/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/cloudflare-%E4%BC%98%E9%80%89%E8%8A%82%E7%82%B9/"/>
      <url>/2023/06/08/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/cloudflare-%E4%BC%98%E9%80%89%E8%8A%82%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="cloudflare优选节点"><a href="#cloudflare优选节点" class="headerlink" title="cloudflare优选节点"></a>cloudflare优选节点</h1><p><a href="https://github.com/XIU2/CloudflareSpeedTest/tags">工具下载网址</a></p>]]></content>
      
      
      <categories>
          
          <category> cloudflare </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cloudflare </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos7-知错就改-正确密码却无法登录</title>
      <link href="/2023/06/08/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/centos7-%E7%9F%A5%E9%94%99%E5%B0%B1%E6%94%B9-%E6%AD%A3%E7%A1%AE%E5%AF%86%E7%A0%81%E5%8D%B4%E6%97%A0%E6%B3%95%E7%99%BB%E5%BD%95/"/>
      <url>/2023/06/08/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/centos7-%E7%9F%A5%E9%94%99%E5%B0%B1%E6%94%B9-%E6%AD%A3%E7%A1%AE%E5%AF%86%E7%A0%81%E5%8D%B4%E6%97%A0%E6%B3%95%E7%99%BB%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>CentOS7 root 用户正确密码提示:“sorry,that didn’t work.please try again”  </p><h1 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h1><p>CentOS 7.9版本 root用户密码输入正确，出现错误密码提示:“sorry,that didn’t work.please try</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>一，创建普通用户，以前通用户登录  </p><p> 打开终端：输入命令  </p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd root</span><br></pre></td></tr></table></figure><p>然后输入旧密码，新密码，再确认新密码（输入密码没有任何显示不用管）<br>二，重新以root用户登录，Ok</p>]]></content>
      
      
      <categories>
          
          <category> centos7 - 知错就改 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 知错就改 </tag>
            
            <tag> centos7 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WPF-触发多个事件</title>
      <link href="/2023/06/08/WinForm/WPF-%E8%A7%A6%E5%8F%91%E5%A4%9A%E4%B8%AA%E4%BA%8B%E4%BB%B6/"/>
      <url>/2023/06/08/WinForm/WPF-%E8%A7%A6%E5%8F%91%E5%A4%9A%E4%B8%AA%E4%BA%8B%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="WPF-添加事件"><a href="#WPF-添加事件" class="headerlink" title="WPF-添加事件"></a>WPF-添加事件</h1><p>有时我们需要确定这样的情况。分类再分类。在不同的区域里来触发不同的事件。有的时候还需要叠加触发事件。所以叠加的时候也会有不同的需求。<br>所以我这边看到了一个如何针对进行来实现的表现。<br>在WPF中，事件处理程序的调用遵循事件路由的机制。事件路由指的是从WPF元素树的根节点开始，通过一系列的隧道和冒泡的过程，最终到达事件目标元素的过程。事件处理程序可以被添加到三种不同的路由策略中：   </p><ul><li>直接路由：直接将事件路由到目标元素，只有目标元素的事件处理程序被调用。</li><li>隧道路由：从根元素向下到达目标元素的过程中，先调用元素的事件处理程序，再向下路由。</li><li>冒泡路由：从目标元素向上到达根元素的过程中，先调用元素的事件处理程序，再向上路由。<br>当我们给一个元素添加事件处理程序时，我们可以通过设置handledEventsToo参数来指定事件处理程序是在隧道或冒泡过程中被调用，还是在直接路由中被调用，或者是在所有路由过程中都被调用。</li></ul><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><p>隧道路由</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yourElement.AddHandler(yourEvent, <span class="keyword">new</span> YourEventHandler(yourMethod), <span class="literal">true</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>冒泡路由</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yourElement.AddHandler(yourEvent, <span class="keyword">new</span> YourEventHandler(yourMethod), <span class="literal">false</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>四类：<br>isAuto&#x3D;true。仅仅需要修改自己的变量  </p><p>isDown&#x3D;true。  </p><p>两个按键，每个按键都有keydown，keyUp<br>down  </p><table><thead><tr><th align="center">fw&#x2F;bw</th><th align="center">isDown&#x2F;isUp</th><th align="center">Function</th></tr></thead><tbody><tr><td align="center">true</td><td align="center">true</td><td align="center">先给反信号false，再给正信号true</td></tr><tr><td align="center">false</td><td align="center">true</td><td align="center">先给正信号false，再给反信号true</td></tr><tr><td align="center">true</td><td align="center">false</td><td align="center">先给正信号false，读取颜色</td></tr><tr><td align="center">false</td><td align="center">false</td><td align="center">先给反信号false，读取颜色</td></tr></tbody></table><p>所以总结，有可能出现的问题，其实在按键结束的时候需要true-》false的发送消息，如果长按超过100ms才是这样的顺序。<br>不然就是false-&gt;true.或许是故意的？<br>长按是关闭，短按是打开。<br>fw是先给反信号false，再让正信号true-》false，读取fwIn颜色——–》它锁，需要先把相关信号关闭才能修改。修改自身<br>bw是先给正信号false，再让反信号true-》false，读取bwIn颜色——–》自锁，需要关闭自身信号关闭才能修改。修改相关信号<br>如果fw与be实际上是差不多的。其实如果把fw的正反信号传入变量互换位置。执行出来的效果就是bw  </p>]]></content>
      
      
      <categories>
          
          <category> WPF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WPF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java-基本结构</title>
      <link href="/2023/06/08/java/java-%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84/"/>
      <url>/2023/06/08/java/java-%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h1 id="java基本结构"><a href="#java基本结构" class="headerlink" title="java基本结构"></a>java基本结构</h1><p>在传统的Java企业应用架构中，通常使用经典的三层架构或四层架构来组织代码。在这些架构中，DAO层通常被归类为数据访问层，而与DAO平级的层级包括以下几个：  </p><ul><li><p>Service层：Service层是业务逻辑层，主要负责处理业务逻辑、事务管理和调用DAO层进行数据访问。在Service层中，通常会对多个DAO方法进行组合，以完成复杂的业务逻辑。同时，Service层还负责对外提供API接口，供其他应用程序或服务调用。  </p></li><li><p>Controller层：Controller层是表现层，主要负责接收请求、处理请求参数、调用Service层处理业务逻辑，并将处理结果返回给客户端。在Web应用程序中，Controller层通常是由Servlet、Struts、Spring MVC等框架来实现。  </p></li><li><p>Utils层：Utils层是工具层，主要负责提供一些工具类和工具方法，用于辅助实现系统的其他功能。例如，日期时间处理、字符串处理、文件上传下载、加密解密等。  </p></li><li><p>Model层：Model层是模型层，主要负责定义业务实体对象和数据传输对象，以及对应的业务逻辑和数据访问方法。在基于Spring框架的应用程序中，Model层通常由POJO（Plain Old Java Object）对象来表示，这些对象包含了与业务实体对象对应的属性和方法。  </p></li><li><p>DAO：数据访问层。定义一些访问数据的方案等。比如连接数据库的常量等。PO持久化到数据库是要进行相关的数据库操作的(CRUQ)，这些对数据库操作的方法会统一放到一个Java对象中，这就是DAO。</p></li></ul><p>需要注意的是，以上几个层级的划分是一种常见的做法，实际应用中可能会根据具体的需求和实际情况进行调整和扩展。  </p><h2 id="Java中POJO、VO、DTO、PO、Entity的区别"><a href="#Java中POJO、VO、DTO、PO、Entity的区别" class="headerlink" title="Java中POJO、VO、DTO、PO、Entity的区别"></a>Java中POJO、VO、DTO、PO、Entity的区别</h2><p>在看一些实际的项目的源码的时候，我们会发现POJO、VO、DTO、PO、Entity、domain的区别,那它们分别是什么呢，与我们学习Java时遇到的POJO有什么不同呢。下面就来简单的谈谈一下我对它们的一个理解。</p><p><img src="https://cdn.jsdelivr.net/gh/xudingxie/DrawingBed/pictures/6b7b093d848976ca97ee6b3fdd9196fc.png" alt="img"></p><p>1、POJO（Plain Ordinary Java Object）：即无规则简单Java对象，就是一个我们最常见的普通Java对象，这个概念是被大家叫出来的，它具有一些属性，然后提供对应的getter和setter。即不与数据库打交道的简单对象。<br>一个中间对象，可以转化为VO、DTO、PO</p><p>2、VO（View Object）：视图对象【表示层对象】，用于展示层，它的作用是把某个指定页面（或组件）的所有数据封装起来。即和html、jsp等页面属性对应的java对象。<br>对应页面显示的数据对象，可以和表对应，也可以不对应。一般在Controller层使用.<a href="https://so.csdn.net/so/search?q=ajax&spm=1001.2101.3001.7020">ajax</a>要什么,就封装什么 </p><p>3、DTO（Data Transfer Object）：数据传输对象，这个概念来源于J2EE的设计模式，原来的目的是为了EJB的分布式应用提供粗粒度的数据实体，以减少分布式调用的次数，从而提高分布式调用的性能和降低网络负载，但在这里，我泛指用于展示层与服务层之间的数据传输对象。即提取数据库中所需要的的属性减少不需要的属性来提高传输速度、流量。POJO在系统间传递时。当我们需要在两个系统间传递数据时，一种方式就是将POJO序列化后传递，这个传递状态的POJO就是DTO<br>传递数据。如PO有100个属性，页面VO只显示10个，那么DTO就也传输10个。一般在Service层使用。专门负责接收前端表格数据的对应结构的javabean. </p><p>4.、Entity ：entity里的每一个字段，与数据库相对应。<br>实体，和PO的功能类似，和数据表一一对应，一个实体一张表</p><p>5、PO（Persistent Object持久化对象）持久化对象，它跟数据表形成一一对应的映射关系。POJO在持久层的体现，对POJO持久化后就成了PO。PO更多的是跟数据库设计层面相关，一般PO与数据表对应，一个PO就是对应数据表的一条记录。<br>一般在Dao层使用</p><p>6、domain：封装数据库的<a href="https://so.csdn.net/so/search?q=javabean&spm=1001.2101.3001.7020">javabean</a>对象,一个对象可以封装多个表格数据.（domain的范围大于entity） ,即领域模型 银行 保险 电商 物流 医疗 DDD 领域驱动设计.需要和相关领域的专家讨论得出。</p><p>- JavaBean: 先说JavaBean，JavaBean更多的是一种规范，也即包含一组set和get方法的Java对象。</p><p>- POJO: 普通的Java对象，对于属性一般实现了JavaBean的标准，另外还可以包含一些简单的业务逻辑(方法)。</p><h3 id="POJO与JavaBean的比较："><a href="#POJO与JavaBean的比较：" class="headerlink" title="POJO与JavaBean的比较："></a>POJO与JavaBean的比较：</h3><p>pojo:用于数据的临时传递，它只能装载数据，作为数据存储的载体，不具有业务逻辑的处理能力。<br>javaBean:与pojo相比，它里面可以有其他方法。<br>JavaBean是可重用组件，需要符合以下条件：</p><p>这个类必须有一个公共的缺省构造函数<br>这个类的属性使用getter和setter来访问设置数据，其他方法遵从标准命名规范<br>这个类可以序列化</p><h3 id="VO与DTO的比较"><a href="#VO与DTO的比较" class="headerlink" title="VO与DTO的比较"></a>VO与DTO的比较</h3><p>在比较小的项目中这两个就基本是等价的。</p><p>VO的前端传来的数据结构，也就是Controller层的数据结构。</p><p>DTO可以认为时Services层中的处理的内容。</p><p>理论上Controller层不应该处理任何逻辑。所以在Services层进行处理，那VO与DTO就应该是一致从。从一些博主那里看到的例子</p><pre><code>1. 基本上是不做逻辑处理，只是说简单的视觉处理。比如修改描述从性别女，到女演员。从年龄17到描述修改成未成年。可是仔细想一下这个不应该是Servcice的返回不对吗？或者应该通过前端去组合的内容。所以很勉强。但是也可用1. 做简单的逻辑处理，比如获取到的是两个字段，但是实际只要一个字段。所以丢弃一部分。可是从services层的基础设计阶段不就是根据Controller层的内容一一对应的吗？所以很勉强。</code></pre><p>后面看到一个说法。VO与DTO的是从两个不同的视角来看到数据的。这个看到我茅塞顿开。</p><p><strong>VO</strong>：展示层需要展示的数据。 </p><p><strong>DTO</strong>：业务逻辑层需要接收的数据和返回的数据。</p><p>它们是在解耦合的情况中引入的不同的说法。一个是参数一个是被传入的参数。这两个一定会高度保持相似啊。所以遇到比较简单的项目中，完全可以只要DTO就可以。</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-ref与reactive</title>
      <link href="/2023/06/07/%E5%89%8D%E7%AB%AF/vue/vue-ref%E4%B8%8Ereactive/"/>
      <url>/2023/06/07/%E5%89%8D%E7%AB%AF/vue/vue-ref%E4%B8%8Ereactive/</url>
      
        <content type="html"><![CDATA[<h1 id="ref与reactive补充"><a href="#ref与reactive补充" class="headerlink" title="ref与reactive补充"></a>ref与reactive补充</h1><p><a href="https://images.cnblogs.com/cnblogs_com/IwishIcould/2021714/o_210828093341bokeyuan.jpg">不错的图像</a></p><h2 id="相关性"><a href="#相关性" class="headerlink" title="相关性"></a>相关性</h2><p>reactive与ref一样都是把数据变为响应式，即数据改变立刻在界面中刷新表现出来的数据。<br>ref本质也是reactive，ref(obj)等价于reactive({value: obj})  </p><blockquote><ul><li>vue3中实现响应式数据的方法是就是使用ref和reactive，所谓响应式就是界面和数据同步，能实现实时更新</li><li>vue2中响应式是通过defineProperty实现的，vue3中是通过ES6的Proxy来实现的</li></ul></blockquote><p><a href="https://imgse.com/i/p9uOXHe"><img src="https://s1.ax1x.com/2023/04/25/p9uOXHe.png" alt="p9uOXHe.png"></a></p><p>由于这个ref与reactive的这个等价关系，所以界面中即template中不需要.value,因为reactive会自动添加这个属性。</p><h2 id="差异性"><a href="#差异性" class="headerlink" title="差异性"></a>差异性</h2><p>但是两者还是有些许的区别。</p><ol><li>参数的区别</li></ol><ul><li>reactive中传递的参数必须是json对象或者数组。</li><li>如果传递了其他对象（比如new Date()），在默认情况下修改对象，界面不会自动更新，如果也需要具有响应式，可以通过重新赋值的方式实现。  </li><li>使用ref函数可以处理基本数据，使其变成响应式数据</li></ul><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ol><li><a href="https://juejin.cn/post/6977929393511514148">Vue3第一篇之ref和reactive详解扩展</a>。其中不止有这个讲解，还有shallowRef和shallowReactive之类的介绍。</li><li><a href="https://www.cnblogs.com/IwishIcould/p/15096750.html">vue3.0中reactive的正确使用姿势 </a></li></ol>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSHARP-数据库连接插件</title>
      <link href="/2023/06/07/C%20Sharp/C%20Sharp%20%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%8F%92%E4%BB%B6/"/>
      <url>/2023/06/07/C%20Sharp/C%20Sharp%20%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="CSharp好用的数据库连接插件"><a href="#CSharp好用的数据库连接插件" class="headerlink" title="CSharp好用的数据库连接插件"></a>CSharp好用的数据库连接插件</h1><p>首先介绍个概念</p><h2 id="EF"><a href="#EF" class="headerlink" title="EF"></a>EF</h2><p>Entity Framework：在.NET3.5之前，我们经常编写ADO.NET代码或企业数据访问块来保存或检索底层数据库中的数据。做法是：打开过一个数据库的连接，创建一个DataSet来获取或提交数据到数据库，通过将DataSet中的数据和.NET对象相互转换来满足业务需求。这是一个麻烦且容易出错的过程。Microsoft提供了“Entity Framework”框架，用于自动地执行所有上述与数据库相关的活动。<br>EF是一个适用于.NET开发的开源ORM框架。它使开发人员能够通过领域对象来处理数据，而无需关注存储此数据的基础数据库。使用实体框架，开发人员在处理数据时可以在更高的抽象级别上工作，并且与传统应用程序相比，可以使用更少的代码创建和维护面向数据的应用程序。<br>官方定义：“实体框架是一种对象关系映射器（O&#x2F;RM），它使.NET开发人员能够通过.NET对象来操作数据库。它消除了开发人员通常需要编写的大多数数据访问代码的需求。“</p><p>实体框架工作在业务实体（域类）和数据库之间。它保存实体属性中的数据到数据库，也可以从数据库中检索数据并自动将其转换为实体对象。  </p><h3 id="EF特点"><a href="#EF特点" class="headerlink" title="EF特点"></a>EF特点</h3><ul><li>跨平台   EF Core是一个跨平台的框架，可以在Windows，Linux和Mac上运行。</li><li>建模     EF可以创建具有不同数据类型get &#x2F; set属性的EDM（Entity Data Model&#x2F;实体数据模型）。它使用此模型查询或保存底层数据库的数据。</li><li>查询     EF允许我们使用LINQ从底层数据库中检索数据，同时也支持直接对数据库执行原始SQL查询。</li><li>更改跟踪  EF会跟踪需要提交到数据库的实体实例（属性值）发生的更改。</li><li>保存     EF调用SaveChanges()方法时，根据实体发生的更改，对数据库执行INSERT，UPDATE和DELETE命令。EF还提供了异步的SaveChangesAsync()方法。</li><li>并发     默认情况下，从数据是从数据库中提取开始，EF使用乐观并发来避免我们做的修改被其他用户覆盖。</li><li>事务     EF在查询或保存数据时自动执行事务管理。它还提供自定义事务管理的选项。</li><li>缓存     EF包括开箱即用的第一级缓存。因此，重复查询将从缓存中返回数据，而不是访问数据库。</li><li>配置     EF允许我们使用注释属性配置EF模型，也可以使用Fluent API来覆盖默认约定。</li><li>迁移    EF提供了一组迁移命令，我们可以在NuGet Package Manager控制台或命令行界面中执行这些命令来创建或管理底层数据库计划。</li></ul><h3 id="组成"><a href="#组成" class="headerlink" title="组成"></a>组成</h3><p>EF的组成简单总结如下：</p><ol><li>EDM(实体数据模型): EDM包含三个主要部分——概念模型,映射和存储模型。</li></ol><ul><li>概念模型（entity）: 概念模型包含了模型类和它们之间的关系。 这将是独立于数据库表设计。  </li><li>存储模型(data): 存储模型是数据库设计模型,包括表、视图、存储过程、以及它们之间的关系和钥匙。</li><li>映射(mapping): 映射由概念模型如何映射到存储模型的信息组成。</li></ul><ol start="2"><li><p>LINQ To Entity（L2E）: L2E是一种的查询实体对象的语言， 它返回在概念模型中定义的实体。 </p></li><li><p>Entity SQL: Entity SQL是一个类似于L2E的查询语言。 然而,它比L2E更加复杂。</p></li><li><p>Object Services(对象服务)：对象服务是访问数据库中的数据并返回数据的主要入口点。它负责数据实例化，把Entity Client Data Provider（下一层）的数据转换成实体对象。</p></li><li><p>Entity Client Data Provider：主要职责是将L2E或Entity Sql转换成数据库可以识别的Sql查询语句，它通过ADO.Net Data Provider向数据库发送或者索取数据。</p></li><li><p>ADO.Net Data Provider：使用标准的Ado.net与数据库通信。</p></li></ol><h2 id="freeSql"><a href="#freeSql" class="headerlink" title="freeSql"></a>freeSql</h2><h2 id="附件"><a href="#附件" class="headerlink" title="附件"></a>附件</h2><h2 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h2><p>ADO.NET</p>]]></content>
      
      
      <categories>
          
          <category> CSHARP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSHARP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm-@type/@next</title>
      <link href="/2023/06/07/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/npm/npm-type-next/"/>
      <url>/2023/06/07/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/npm/npm-type-next/</url>
      
        <content type="html"><![CDATA[<h1 id="types-next"><a href="#types-next" class="headerlink" title="@types.@next"></a>@types.@next</h1><p>npm一般用于安装各种包，来辅助我们的开发<br>经常我们能看到一些命令</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install @types/****</span><br></pre></td></tr></table></figure><p>这种就是在安装ts库中的包</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install @next/****</span><br></pre></td></tr></table></figure><p>@types和@next是针对不同的情况而设置的不同的npm包。</p><h2 id="types"><a href="#types" class="headerlink" title="@types"></a>@types</h2><p>@types是TypeScript的类型定义文件，它们是由TypeScript社区创建的一组npm包，用于定义各种JavaScript库和框架的类型。当我们在TypeScript中使用JavaScript库时，需要引入相应的类型定义文件，以便在编译期间检查类型错误。 </p><p>例如，当我们想要在TypeScript中使用jQuery时，需要先安装jQuery的类型定义文件@types&#x2F;jquery，然后才能在代码中正确地使用jQuery。  </p><h2 id="next"><a href="#next" class="headerlink" title="@next"></a>@next</h2><p>@next则是用于指向下一个版本的npm包。通常情况下，当我们使用npm安装某个库或框架时，会安装最新的稳定版本。但是，有时我们可能想要尝试最新的测试版或开发版，这时就可以使用@next指向下一个版本。  </p><p>例如，在Vue 3发布之前，我们可以使用npm install vue@next命令来安装Vue 3的开发版。这样，我们就可以在项目中尝试Vue 3的新特性，同时也可以帮助Vue社区测试和改进Vue 3。  </p><p>总之，@types和@next是不同的npm包，分别用于类型定义和指向下一个版本。在使用时需要根据具体情况进行选择。 </p>]]></content>
      
      
      <categories>
          
          <category> npm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm-save,save-dev,D,S的区别</title>
      <link href="/2023/06/06/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/npm/npm-save-save-dev-D-S%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>/2023/06/06/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/npm/npm-save-save-dev-D-S%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<h1 id="npm中的save-save-dev-D-S的区别"><a href="#npm中的save-save-dev-D-S的区别" class="headerlink" title="npm中的save,save-dev,D,S的区别"></a>npm中的save,save-dev,D,S的区别</h1><p>看到有些 node.js 的包安装的时候都加上 –save-dev 参数，不知道这参数是做什么的，加和不加有什么区别吗？  </p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install xxx --save-dev</span><br></pre></td></tr></table></figure><p>当你为你的模块安装一个依赖模块时，正常情况下你得先安装他们（在模块根目录下npm install module-name），然后连同版本号手动将他们添加到模块配置文件package.json中的依赖里（dependencies）。  </p><p>-save和save-dev可以省掉你手动修改package.json文件的步骤。  </p><h2 id="save，save-dev的区别"><a href="#save，save-dev的区别" class="headerlink" title="save，save-dev的区别"></a>save，save-dev的区别</h2><ul><li>save-配置在package.json中的dependencies中</li><li>save-dev配置在package.json的devdependencies中<br>dependencies与devdependencies的区别就是，前者是生产时的依赖，后者时开发时的依赖。<br>开发的依赖，顾名思义，在开发的时候会使用，但是开发结束，进行打包的时候，这部分内容就不打包进入了。<br>所以这里应该都是辅助我们开发的工具类  <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;axios&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.3.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;echarts&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.4.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;element-plus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.2.28&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;v-viewer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.0.11&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;vite-plugin-style-import&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;vue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.2.45&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;vue-draggable-next&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.1.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;vue-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^17.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;vue-router&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.1.6&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;devDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;@types/node&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^18.11.19&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;@vitejs/plugin-basic-ssl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;@vitejs/plugin-vue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;4.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;@vue/tsconfig&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.1.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;npm-run-all&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.1.5&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;unplugin-auto-import&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.13.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;unplugin-vue-components&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.23.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;vite&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;vue-tsc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.12&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="简写模式"><a href="#简写模式" class="headerlink" title="简写模式"></a>简写模式</h2><p>有的时候发现上面这两种都不是，而是一个大写字母，那其实就是简写模式。下面是对应的简写。</p><ul><li>-S, –save: Package will appear in your dependencies.</li><li>-D, –save-dev: Package will appear in your devDependencies.</li><li>-O, –save-optional: Package will appear in your optionalDependencies.</li></ul>]]></content>
      
      
      <categories>
          
          <category> npm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-mixin混合</title>
      <link href="/2023/06/05/%E5%89%8D%E7%AB%AF/vue/vue-mixin%E6%B7%B7%E5%90%88/"/>
      <url>/2023/06/05/%E5%89%8D%E7%AB%AF/vue/vue-mixin%E6%B7%B7%E5%90%88/</url>
      
        <content type="html"><![CDATA[<h1 id="学习背景"><a href="#学习背景" class="headerlink" title="学习背景"></a>学习背景</h1><p>根据前面的知识，自己可以知道，vue可以拥有服用css的能力，但是不同的页面往往也有差不多的方法需要实现。<br>虽然说可以通过复用组件的方案进行表现，但是使用上还是不如直接复用一些函数来的舒服。<br>mixin的作用就是用于复用方法的东西。  </p><h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><p>首先复用方法，那肯定是一个js&#x2F;ts的文件用于存储。别的组件想要使用，也是先需要引用，再使用。<br>被复用的方法</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> hunhe =&#123;</span><br><span class="line"><span class="attr">methods</span>:&#123;</span><br><span class="line"><span class="title function_">showName</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;被复用的方法&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;，</span><br><span class="line">mounted（）&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;一些其他时间段的方法也可以使用&quot;</span>)</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用混合的vue组件</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showName&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123;hunhe&#125; <span class="keyword">from</span> <span class="string">&#x27;../mixin&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="attr">name</span>:<span class="string">&quot;***&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="attr">mixins</span>:[hunhe]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>其中注意，即便只有一个，也是要使用mixins。<br>不仅可以带入方法，也可以带入数据。但是如果有数据的名称重复，以vue组件的为主。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> hunhe2 =&#123;</span><br><span class="line"><span class="title function_">data</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="attr">name</span>:<span class="string">&quot;xuexiao&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">methods</span>:&#123;</span><br><span class="line"><span class="title function_">showName</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;被复用的方法&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;，</span><br><span class="line">mounted（）&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;一些其他时间段的方法也可以使用&quot;</span>)</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面提及data中会以为主，但是mounted中的方法不是说只存在一个，而是两个都有。即两个console.log都会打印出来相关的东西。</p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
          <category> 学习系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> 学习系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#Sharp-SQL-Server的连接池</title>
      <link href="/2023/05/21/C%20Sharp/C%20Sharp%20SQL-Server%E7%9A%84%E8%BF%9E%E6%8E%A5%E6%B1%A0/"/>
      <url>/2023/05/21/C%20Sharp/C%20Sharp%20SQL-Server%E7%9A%84%E8%BF%9E%E6%8E%A5%E6%B1%A0/</url>
      
        <content type="html"><![CDATA[<p>连接池实际上都是由sqlServer进行管理的。<br>并且现在都是默认启动了。最小0，最大100.可以修改这个默认配置。<br>刚才其实是在搞如何实现内容。<br>刚刚在项如果我在同一个程序中有实例化了多个数据库套接字，创建了多个连接，而不在相同的连接池。<br>那样岂不是蠢，白白占用了更多的资源（连接池的最小数目*创建的套接字）。<br>所以目前的想法,是公用同一个套接字。那怎么实现，<br>静态变量可以。然后分散在多个程序中。<br>其中还有可以注意的。这里其实dispose与close是差不多的。<br>释放只是多了把中间的连接字符串清空，它也是返回了连接池，<br>close，是直接返回连接池。<br>如果真的是不返回连接池的话，那岂不是很多就是没有用的了。所以还是一致的。这个是从别人文章中看到的。不知道现在还是不是。<br>毕竟现在这些还是不好说的内容。那个文档还是2013年的了。<br><a href="https://blog.csdn.net/liuyaokai1990/article/details/110417590">wen</a></p>]]></content>
      
      
      <categories>
          
          <category> sql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mybatis学习</title>
      <link href="/2023/05/21/java/mybatis%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/05/21/java/mybatis%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="mybatis使用"><a href="#mybatis使用" class="headerlink" title="mybatis使用"></a>mybatis使用</h1><p>第一次听到这个还是我在做毕业课设，现在的我终于想去了解一下<br>这个主要功能就是用于sql的增删改查。</p><h2 id="前世今生"><a href="#前世今生" class="headerlink" title="前世今生"></a>前世今生</h2><p>mybatis 本是apache的一个开源项目iBatis,<br>2010年这个项目由apache迁移到了googlecode，并且改名为MyBatis，2013年11月迁移到Github。<br>MyBatis 是一款优秀的持久层框架，它支持定制化 SQL、存储过程以及高级映射。<br>MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。<br>MyBatis 可以使用简单的 XML 或注解来配置和映射原生信息，将接口和 Java 的 POJOs(普通的 Java对象)映射成数据库中的记录<br>Mybatis官方文档 :<br><a href="http://www.mybatis.org/mybatis-3/zh/index.html">http://www.mybatis.org/mybatis-3/zh/index.html</a></p><p>GitHub :<a href="https://github.com/mybatis/mybatis-3">https://github.com/mybatis/mybatis-3</a></p><h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><p>总结一下，一共这几步</p><ol><li>创建数据库</li><li>导入jar包</li><li>编写xml配置，用于连接数据库的基本参数</li><li>编写工具类，用于连接数据库的实例</li><li>创建数据库对应的实例类</li><li>编写mapper接口，用于增删改查的方法的抽象层次。如果使用注解在其中使用sql语句，那就可以不要步骤七</li><li>编写Mapper.xml 文件。由于我们使用了mybatis,所以这的xml文件相当于我们原来dao得实现类daoimpl。namespace属性对应着接口，不能写错，标签表示是个查询语句。id 属性对应着接口的方法，result Type代表返回得类型，即对应这pojo实体。实际也就是具体的查询语句</li></ol><p>具体操作图片等待后续实现。<br>感觉还是很舒服的使用。</p><h2 id="参考内容"><a href="#参考内容" class="headerlink" title="参考内容"></a>参考内容</h2><p><a href="https://www.cnblogs.com/xiezhr/p/17343390.html">全文的主要参照物</a></p>]]></content>
      
      
      <categories>
          
          <category> mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-踩坑记录-控件不显示</title>
      <link href="/2023/04/25/%E5%89%8D%E7%AB%AF/vue/vue-%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95-%E6%8E%A7%E4%BB%B6%E4%B8%8D%E6%98%BE%E7%A4%BA/"/>
      <url>/2023/04/25/%E5%89%8D%E7%AB%AF/vue/vue-%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95-%E6%8E%A7%E4%BB%B6%E4%B8%8D%E6%98%BE%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue知错就改"><a href="#Vue知错就改" class="headerlink" title="Vue知错就改"></a>Vue知错就改</h1><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li>vue3+vite+ts+element Plus</li><li>vsCode</li><li>windows11</li></ul><h2 id="错误提示"><a href="#错误提示" class="headerlink" title="错误提示"></a>错误提示</h2><p>没啥提示，就是<em>el-backtop</em>控件不能正确显示</p><h2 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h2><p>现在想一想，应该是两个原因。</p><ol><li>一个是target应该绑定在实际要检测的组件上面，特别是它们具有overflow：auto这样的属性的时候。</li><li>自己的屏蔽广告之类的插件会不会有影响。我就是发现自己的代码没有问题，但是怎么都无法显示。vue插件查看，也只是有这个控件，强制显示也会报错。</li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>调试的时候尽量保证环境干净，避免有影响。</p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
          <category> el-backtop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> el-backtop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-踩坑记录-css与scss</title>
      <link href="/2023/04/25/%E5%89%8D%E7%AB%AF/vue/vue-%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95-css%E4%B8%8Escss/"/>
      <url>/2023/04/25/%E5%89%8D%E7%AB%AF/vue/vue-%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95-css%E4%B8%8Escss/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue-踩坑记录"><a href="#Vue-踩坑记录" class="headerlink" title="Vue-踩坑记录"></a>Vue-踩坑记录</h1><p>因为贪图scss的语法很方便。于是使用了这个。同时我也用了.css文件存储了一些比较常用的变量。<br>通过src引入<br>使用lang&#x3D;’scss’设置style。  </p><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>没有报错，就是发现使用scss语法的内容属性没有生效。f12查找对应属性，发现没有这个属性。但是可以在页面解析中发现的确引用了自定义的类。</p><h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><p>scss语法的部分因为某种原因丢失。</p><h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><p>经过查询得知src方案引入css文件与scss并不能共存。<br>将原来的src引入的css文件修改成scss文件。然后引入  </p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>其实这么看scss有些很鸡肋。如果遇到一个页面中有多个样式。<br>引入是比引入css文件麻烦的。css文件会自动把全部引入。然后scss必须手动把样式匹配上去</p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
          <category> 踩坑记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> 踩坑记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-css处理顺序</title>
      <link href="/2023/04/25/%E5%89%8D%E7%AB%AF/vue/vue-css%E5%A4%84%E7%90%86%E9%A1%BA%E5%BA%8F/"/>
      <url>/2023/04/25/%E5%89%8D%E7%AB%AF/vue/vue-css%E5%A4%84%E7%90%86%E9%A1%BA%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue中css处理的顺序"><a href="#Vue中css处理的顺序" class="headerlink" title="Vue中css处理的顺序"></a>Vue中css处理的顺序</h1><h2 id="简单的介绍下顺序"><a href="#简单的介绍下顺序" class="headerlink" title="简单的介绍下顺序"></a>简单的介绍下顺序</h2><p>说明以下css样式处理的顺序。</p><ol><li>处理&lt;style&gt;标签中的CSS预处理器（例如Sass、Less等）。其实就是将预处理部分给处理成普通css</li><li>处理&lt;style&gt;标签中的CSS普通css。（style中编写的内容，）</li><li>处理&lt;style&gt;标签中的CSS模块（Module）。（style中编写的内容，）</li><li>处理&lt;style&gt;标签中的引入的CSS模块（Module）。（引入的css文件）</li><li>处理&lt;template&gt;标签中的普通CSS。（template中的style）</li><li>处理全局CSS。</li></ol><p>在Vue中，&lt;style&gt;标签中的普通CSS和模块CSS有以下区别：<br>作用域：普通CSS的作用域是全局的，而模块CSS的作用域是组件内部的。使用模块CSS可以避免样式污染全局作用域，同时也可以避免组件之间样式的冲突。<br>选择器：普通CSS可以使用全局选择器和后代选择器等高级选择器，而模块CSS只能使用基本选择器（如类选择器、标签选择器等）。这是因为模块CSS只能作用于当前组件内部，无法影响其他组件和全局作用域。<br>命名：普通CSS可以使用任何命名方式，而模块CSS只能使用类名（class）和属性选择器（[attr]）命名。这是因为在使用模块CSS时，类名和属性选择器可以通过编译器进行处理，从而生成唯一的类名，避免了组件之间的命名冲突。<br>引用方式：普通CSS可以通过&lt;link&gt;标签或@import语句引入外部CSS文件，而模块CSS只能通过&lt;style&gt;标签内嵌定义或import语句引入其他模块CSS。<br>需要注意的是，为了避免命名冲突，模块CSS的类名和属性选择器的命名应该具有语义化，同时也应该尽量短小精悍，以减小编译后的文件大小。  </p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>CSS预处理器会被先处理，因为它们需要被转换为普通的CSS，以便后续的处理。<br>处理完CSS预处理器后，会处理普通的CSS。在处理普通CSS时，Vue3会自动将组件中的选择器转换为包含组件唯一ID的选择器，以防止全局污染。<br>处理完普通CSS后，会处理CSS模块。CSS模块是Vue3中新增的功能，它可以使组件内部的CSS样式只在组件内部有效，而不会影响其他组件。<br>在Vue中，使用@import等方式引入外部CSS文件时，这些CSS文件也会按照以上的顺序被处理。具体来说，Vue会将组件的模板和样式编译成一个渲染函数，并将这个渲染函数作为组件的渲染函数。在这个渲染函数中，Vue会将组件的数据和模板进行关联，并生成对应的DOM节点，然后将CSS样式应用到这些DOM节点上。<br>在应用CSS样式时，Vue会先处理组件中直接定义的样式，然后才会处理通过@import等方式引入的外部CSS文件中的样式。如果组件中的样式与外部CSS文件中的样式存在冲突，那么后面的样式会覆盖前面的样式。<br>最后，会处理全局CSS。全局CSS会影响整个应用程序，但是需要注意不要覆盖组件内部的样式。  </p><h2 id="自己测试"><a href="#自己测试" class="headerlink" title="自己测试"></a>自己测试</h2><p>自己测试<br>引入的文件中有样式A，style模块中有样式B依托于样式A。—–样式B没有正常显示。说明样式B先于样式A</p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
          <category> css </category>
          
          <category> scss </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> scss </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue中的命名规范</title>
      <link href="/2023/04/25/%E5%89%8D%E7%AB%AF/vue/vue%E4%B8%AD%E7%9A%84%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/"/>
      <url>/2023/04/25/%E5%89%8D%E7%AB%AF/vue/vue%E4%B8%AD%E7%9A%84%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/</url>
      
        <content type="html"><![CDATA[<p>非常优秀<br><a href="https://blog.csdn.net/u011269322/article/details/120312226">参考链接</a></p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
          <category> 命名规范 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> 命名规范 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手机应用与小程序的开发</title>
      <link href="/2023/04/25/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/%E6%89%8B%E6%9C%BA%E5%BA%94%E7%94%A8%E4%B8%8E%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%BC%80%E5%8F%91/"/>
      <url>/2023/04/25/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/%E6%89%8B%E6%9C%BA%E5%BA%94%E7%94%A8%E4%B8%8E%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<h1 id="开发手机应用与小程序"><a href="#开发手机应用与小程序" class="headerlink" title="开发手机应用与小程序"></a>开发手机应用与小程序</h1><p>小程序平台与原生应用平台。<br>一些手机应用使用的是native+小程序这种方案。<br>native其实是表示的是原生应用。比如，安卓与ios。正常来说是两种不同的应用。<br>但是套个应用框架，后续的开发也是非常麻烦的。同样的功能需要写不同的代码。<br>所以出现了这种native+小程序的方案。<br>里面部分的功能通过小程序来实现。小程序虽然也是分不同的平台，比如微信，阿里巴巴，百度等。<br>但是还是有一些跨平台的应用框架。与跨平台的小程序应用框架。<br>在中国比较好用的跨平台开发框架有以下几种：  </p><ul><li>uni-app：由国内公司DCloud开发，使用Vue.js框架，可以编写跨平台应用程序，支持iOS、Android、Web、微信小程序、支付宝小程序、百度小程序、QQ小程序等平台。因为在国内受欢迎且易于上手，已经成为了许多中小型公司和开发者的首选。</li><li>Flutter：由Google开发，虽然是国外的框架，但在国内也有很多开发者使用，使用Dart语言编写，可以编写高性能、漂亮的应用程序，支持iOS、Android、Web、桌面平台等。Flutter在国内的发展速度也很快，逐渐被越来越多的开发者所接受。</li><li>React Native：由Facebook开发，使用JavaScript编写跨平台应用程序，支持iOS和Android平台。ReactN-ative在国内也有一定的使用率，但因为其学习曲线较陡峭，可能需要一定的技术积累才能掌握。  </li><li>Taro：由京东凹凸实验室开发，使用React框架，可以编写跨平台应用程序，支持微信小程序、支付宝小程序、百度小程序、H5、RN等平台。因为由国内大型企业开发，因此在国内也有不少的用户。<br>以上几种跨平台开发框架都有其优点和局限性，开发者可以根据自己的需求和技术背景选择合适的框架。</li></ul><p>搜索的时候也看到了filp这种<br>看到了许多软广。<br>区别就是uni-app与uniMPSDK生成的app仅仅支持自家生成的小程序格式，哪怕微信的原生语法一样，但是也不可以直接使用，需要套一层皮</p>]]></content>
      
      
      <categories>
          
          <category> 手机应用 </category>
          
          <category> 小程序 </category>
          
          <category> 跨平台 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 手机应用 </tag>
            
            <tag> 小程序 </tag>
            
            <tag> 跨平台 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vps协议认识</title>
      <link href="/2023/04/25/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/vps%E5%8D%8F%E8%AE%AE%E8%AE%A4%E8%AF%86/"/>
      <url>/2023/04/25/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/vps%E5%8D%8F%E8%AE%AE%E8%AE%A4%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="搭建的vps通道继续详解"><a href="#搭建的vps通道继续详解" class="headerlink" title="搭建的vps通道继续详解"></a>搭建的vps通道继续详解</h1><p>我自己的vps测试用的<a href="https://my.racknerd.com/aff.php?aff=7790">vps推荐链接</a><br>这边也是跟着视频一知半解，所以这边就开始对于内容进行了一定的搜索，加强了认知。  </p><h2 id="vlmess"><a href="#vlmess" class="headerlink" title="vlmess"></a>vlmess</h2><p>Vlmess 是一种基于 VMess 协议的传输协议，可以支持多种不同的传输方式，包括 TCP、mKCP、WebSocket 和 QUIC 等。<br>而 TLS 和 WebSocket 则是两种常用的 Vlmess 传输方式。  </p><p>在 Vlmess 中，TLS 和 WebSocket 通常是配合使用的。<br>具体来说，TLS 用于对传输数据进行加密和认证，确保传输数据的安全性，<br>而 WebSocket 则用于建立一个双向通信的通道，使得客户端和服务器可以进行实时的双向数据传输。  </p><p>在使用 TLS 传输时，客户端和服务器之间需要先建立一个 TLS 连接。在连接建立之后，客户端会将 Vlmess 的数据包通过 TLS 连接发送到服务器，服务器会解密数据包并转发给目标服务器，同时将响应数据再次加密后发送回客户端。这样可以确保传输过程中的数据不被窃听和篡改。  </p><p>在使用 WebSocket 传输时，客户端和服务器之间需要先建立一个 WebSocket 连接。在连接建立之后，客户端会将 Vlmess 的数据包通过 WebSocket 连接发送到服务器，服务器会解析数据包并转发给目标服务器，同时将响应数据再次封装成 WebSocket 消息发送回客户端。这样可以实现双向通信和实时数据传输。  </p><p>综合起来，Vlmess 可以通过TLS和WebSocket 等协议来保证传输的安全性和稳定性，从而提升传输效率和用户体验。<br>先进行tls连接，然后进行websocket连接。<br>客户端向服务器发送 TLS 握手请求，建立 TLS 连接。<br>服务器验证客户端的身份并返回 TLS 握手响应，建立 TLS 连接。<br>在 TLS 连接上建立 WebSocket 连接。<br>客户端和服务器通过 WebSocket 连接交换 Vlmess 数据包，实现双向通信。</p>]]></content>
      
      
      <categories>
          
          <category> vps </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vps </tag>
            
            <tag> vlmess </tag>
            
            <tag> ws </tag>
            
            <tag> vmess </tag>
            
            <tag> TLS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-css与scss引入</title>
      <link href="/2023/04/25/%E5%89%8D%E7%AB%AF/vue/vue-css%E4%B8%8Escss%E5%BC%95%E5%85%A5/"/>
      <url>/2023/04/25/%E5%89%8D%E7%AB%AF/vue/vue-css%E4%B8%8Escss%E5%BC%95%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue引入样式"><a href="#Vue引入样式" class="headerlink" title="Vue引入样式"></a>Vue引入样式</h1><p>目前知道的主要是两大类型的样式引入</p><ul><li>CSS文件</li><li>SCSS文件</li></ul><blockquote><p>Tips:如果使用lang&#x3D;scss，那样就不可以在此处引入css文件。其他组件内通过全局引入的css还是生效。如果还是引入css文件，css文件生效，但是style中如果使用scss语法的属性均解析失败，无法在界面上显示出来。</p></blockquote><h2 id="css文件"><a href="#css文件" class="headerlink" title="css文件"></a>css文件</h2><p>这个css文件的特点就是引入的话是里面的全部引入。添加到其中的style中。  </p><h3 id="全局引入"><a href="#全局引入" class="headerlink" title="全局引入"></a>全局引入</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line"><span class="meta">@import</span> <span class="string">&#x27;@/components/css/home.css&#x27;</span>;</span><br><span class="line"><span class="comment">/* 在这里编写 该vue 样式 */</span></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="单个vue组件引入"><a href="#单个vue组件引入" class="headerlink" title="单个vue组件引入"></a>单个vue组件引入</h3><p>注意scoped不能忘记，不然就是全局样式</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;style src=<span class="string">&quot;@/components/css/home.css&quot;</span> scoped&gt;</span><br><span class="line"><span class="comment">/* 在这里编写 该vue 样式 */</span></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="SCSS文件"><a href="#SCSS文件" class="headerlink" title="SCSS文件"></a>SCSS文件</h2><h3 id="全局引入-1"><a href="#全局引入-1" class="headerlink" title="全局引入"></a>全局引入</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;style lang=<span class="string">&quot;scss&quot;</span>&gt;</span><br><span class="line"><span class="meta">@import</span> <span class="string">&quot;@/components/scss/home.scss&quot;</span>; <span class="comment">// 使用 @import 引入 SCSS 文件</span></span><br><span class="line"><span class="comment">/* 在这里编写 SCSS 样式 */</span></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="单个vue组件引入-1"><a href="#单个vue组件引入-1" class="headerlink" title="单个vue组件引入"></a>单个vue组件引入</h3><p>此处必须要scope，不然就是全局样式的引入</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;style lang=<span class="string">&quot;scss&quot;</span> scope&gt;</span><br><span class="line"><span class="meta">@import</span> <span class="string">&quot;@/components/scss/home.scss&quot;</span>; <span class="comment">// 使用 @import 引入 SCSS 文件</span></span><br><span class="line"><span class="comment">/* 在这里编写 SCSS 样式 */</span></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="单个组件中单个内容引入"><a href="#单个组件中单个内容引入" class="headerlink" title="单个组件中单个内容引入"></a>单个组件中单个内容引入</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;style lang=&quot;scss&quot;&gt;</span><br><span class="line"><span class="keyword">@use</span> <span class="string">&quot;@/components/scss/home.scss&quot;</span> with (<span class="attribute">scope</span>: <span class="string">&quot;.searchTime&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.searchTime</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">15px</span>;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#606266</span>;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">5px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
          <category> css </category>
          
          <category> scss </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> scss </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>域名证书</title>
      <link href="/2023/04/25/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/%E5%9F%9F%E5%90%8D%E8%AF%81%E4%B9%A6/"/>
      <url>/2023/04/25/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/%E5%9F%9F%E5%90%8D%E8%AF%81%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="域名证书"><a href="#域名证书" class="headerlink" title="域名证书"></a>域名证书</h1><p>在互联网上大家用的比较多的还是https这种格式，但是http其实也还有。<br>那这两个的区别就是在域名证书的设定。那我就提一提什么是域名证书。  </p><h2 id="域名证书的作用"><a href="#域名证书的作用" class="headerlink" title="域名证书的作用"></a>域名证书的作用</h2><p>域名证书就是由一些证书颁发机构（CA）颁发的一种数字证书。<br>域名证书是用来证明域名的可靠性，不用域名而是使用ip就可以不用证书。<br>主要用于证明这个网站是安全的，确保网站的可信度与安全性。  </p><h2 id="域名证书的分级"><a href="#域名证书的分级" class="headerlink" title="域名证书的分级"></a>域名证书的分级</h2><p>域名证书通常分为三个不同的级别：DV、OV 和 EV。  </p><ol><li>DV 证书（Domain Validated Certificate）：DV证书是最基本的域名证书，只需要验证域名的所有权，证书颁发机构会发送验证邮件或者验证文件给网站的管理员，确认网站的所有权，然后签发证书。DV 证书的验证过程通常比较简单，成本较低，适合个人和小型企业网站。  </li><li>OV 证书（Organization Validated Certificate）：OV 证书比 DV证书更加严格，需要对网站和企业进行验证。除了验证域名的所有权外，证书颁发机构还需要验证企业的注册信息、地址和电话等信息。OV 证书比 DV 证书提供更高的安全保障，适合中型企业和电子商务网站等。</li><li>EV 证书（Extended Validation Certificate）：EV 证书是最高级别的域名证书，提供了最高级别的安全保障。证书颁发机构在签发 EV 证书之前，需要进行更加严格的验证，包括企业的法律和业务认证、组织结构、财务状况等。在浏览器地址栏中，使用 EV 证书的网站会显示绿色的地址栏，这是最高的信任标志，非常适合金融机构、电子支付和其他涉及高度敏感信息的网站。<br>总之，不同级别的域名证书提供不同级别的安全保障，根据网站的规模和业务需求，可以选择相应级别的证书来保护网站的安全。</li></ol><h2 id="x-ui面板申请泛域名证书"><a href="#x-ui面板申请泛域名证书" class="headerlink" title="x-ui面板申请泛域名证书"></a>x-ui面板申请泛域名证书</h2><p>cloundflare添加一个二级域名添加解析<br>但是ip是设置的一个泛域名解析。<br>所以我通过二级域名访问到我的vps：端口号，理论上应该是可以的。<br>那我为什么不直接用顶级域名呢，因为我配置的是一个泛域名证书，直接用二级域名就可以实现自己的目的。  </p>]]></content>
      
      
      <categories>
          
          <category> https </category>
          
          <category> 域名证书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> https </tag>
            
            <tag> 域名证书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VNC</title>
      <link href="/2023/04/25/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/VNC/"/>
      <url>/2023/04/25/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/VNC/</url>
      
        <content type="html"><![CDATA[<h1 id="远程连接与vnc"><a href="#远程连接与vnc" class="headerlink" title="远程连接与vnc"></a>远程连接与vnc</h1><p>普通winsdows主机都是有远程连接这个功能的。<br>然后在偶然情况下我了解到了vnc这个东西。也是实现远程连接的功能。<br>互联网上一般不会重复制造轮子的。所以，这两种必然有一定的区别。<br>接下来就分析一下两者的区别。  </p><h2 id="VNC"><a href="#VNC" class="headerlink" title="VNC"></a>VNC</h2><p>VNC使用的是RFB协议来做屏幕分享和远程操作的软件，由著名的AT&amp;T欧洲研究实验室开发。使用时需要客户端软件和服务器软件配合使用。  </p><h2 id="远程桌面"><a href="#远程桌面" class="headerlink" title="远程桌面"></a>远程桌面</h2><p>远程桌面使用RDP(Remote Desktop Protocol)远程桌面协议，大部分Windows都默认支持此协议，可以远程接入操作桌面。  </p><h2 id="RFB和RDP区别"><a href="#RFB和RDP区别" class="headerlink" title="RFB和RDP区别"></a>RFB和RDP区别</h2><p>RFB是在服务器端将窗口在显存中画好之后将图像传给客户端，客户端只充当一个图像解码显示的角色；  RDP则将画图的工作交给了客户端，服务器需要了解客户端显示能力的具体情况，以便作出相应调整。  </p><p>RFB主要传图像，RDP主要传指令。就一般应用而言，RFB数据量太大，RDP对客户端要求较高，因此RFB适用于瘦客户端，RDP适用于低速网络。<br>所以云主机应该就是类似RFB协议完成的内容。</p>]]></content>
      
      
      <categories>
          
          <category> VNC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VNC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker</title>
      <link href="/2023/04/25/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/docker/"/>
      <url>/2023/04/25/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/docker/</url>
      
        <content type="html"><![CDATA[<h1 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h1><h2 id="什么是docker"><a href="#什么是docker" class="headerlink" title="什么是docker"></a>什么是docker</h2><p>一种虚拟环境的搭建系统，有点类似虚拟机，可以隔绝环境，一键布置。  </p><h2 id="docker的优点"><a href="#docker的优点" class="headerlink" title="docker的优点"></a>docker的优点</h2><p>但是比虚拟机可以更加方便的实现内容的同步。可以实现几个命令的就实现安装。<br>这样就不用考虑环境问题，方便copy别人的代码，你只用安装然后配置一些独有的参数即可完成相关内容。so easy!<br>思考以下我需要吗？<br>好像没有那么需要docker技术。这个是用于不同环境的开发。但是实际上我还是不需要考虑这种情况。  </p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5中的aria与role</title>
      <link href="/2023/04/25/%E5%89%8D%E7%AB%AF/HTML5%E4%B8%AD%E7%9A%84aria%E4%B8%8Erole/"/>
      <url>/2023/04/25/%E5%89%8D%E7%AB%AF/HTML5%E4%B8%AD%E7%9A%84aria%E4%B8%8Erole/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML5中的aria与role"><a href="#HTML5中的aria与role" class="headerlink" title="HTML5中的aria与role"></a>HTML5中的aria与role</h1><p>这些都是HTML5针对html tag增加的属性，一般是为不方便的人士提供的功能，比如屏幕阅读器。<br><strong>role</strong>的作用是描述一个非标准的tag的实际作用。比如用div做button，那么设置div 的 role&#x3D;”button”，辅助工具就可以认出这实际上是个button。<br><strong>aria</strong>的意思是Accessible Rich Internet Application，aria-*的作用就是描述这个tag在可视化的情境中的具体信息。比如：  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">role</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">aria-checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>辅助工具就会知道，这个div实际上是个checkbox的角色，为选中状态。  </p><h2 id="aria-label"><a href="#aria-label" class="headerlink" title="aria-label"></a>aria-label</h2><p>正常情况下，会在表单里给input组件指定对应的label，当用户tab到输入框时，读屏软件就会读出相应label里的文本。  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;username&quot;</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>当没有给输入框设计对应的label文本的位置时，aria-label属性为组件指定内置的文本标签。它不在视觉上呈现。  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;用户名&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>此时，当焦点落到该输入框时，读屏软件就会读出aria-label里的内容，即”用户名”。<br>aria-label只有加在可被tab到的元素上，读屏才会读出其中的内容。以下情况，也是可以读出的：  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">tabindex</span>=<span class="string">&quot;0″ aria-label=&quot;</span><span class="attr">标签提示内容</span>&quot;&gt;</span>可被tab的span标签<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="aria-labelledby"><a href="#aria-labelledby" class="headerlink" title="aria-labelledby"></a>aria-labelledby</h2><p>当想要的标签文本已在其他元素中存在时，可以将其值为该元素的id  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">role</span>=<span class="string">&quot;form&quot;</span> <span class="attr">aria-labelledby</span>=<span class="string">&quot;form-title&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;form-title&quot;</span>&gt;</span>使用手机号码注册<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span>……<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>表单区添加了role&#x3D;”form”，当跳转到该区域时，不仅会读出”表单区”，也会读出”使用手机号码注册”。  </p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ol><li><a href="https://blog.csdn.net/dearcode/article/details/52218689">HTML5中的aria与role</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> html - aria与role </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> aria与role </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>elemen-plus--Virtualized-Table</title>
      <link href="/2023/04/19/%E5%89%8D%E7%AB%AF/elemen-plus-Virtualized-Table/"/>
      <url>/2023/04/19/%E5%89%8D%E7%AB%AF/elemen-plus-Virtualized-Table/</url>
      
        <content type="html"><![CDATA[<h1 id="虚拟化的表格"><a href="#虚拟化的表格" class="headerlink" title="虚拟化的表格"></a>虚拟化的表格</h1><p>element plus中普通的表格虽然还是可以使用，但是面对比较大的数据的时候往往会有渲染的问题。特别是如果自己还是希望表格中的内容是可以编辑的情况下，那样这个表格就是table-cell中嵌套一个input框。前端页面的渲染压力更大了。根据我自己的实践经验，如果是嵌套的这种，在数据量到1000的时候就会导致页面渲染不出来直接页面卡死。<br>因此，这里选用Virtualized Table 虚拟化表格来解决这个问题。<br>官方网址<a href="https://element-plus.org/zh-CN/component/table-v2.html">element plus-Virtualized Table</a><br>其实官方给了示例，还是很容易看懂的，也是比较容易复现的。所以我主要是记录自己遇见的坑。<br>这个坑已经完结-最终没有完全选择这个方案，当数据量很大的时候，动态的可编辑的就渲染是很容易造成卡顿，我还是决定弹窗来进行变量的修改。这里只是提供一个自己的思路给大家以供参考。  </p><h2 id="1-需求分析"><a href="#1-需求分析" class="headerlink" title="1 需求分析"></a>1 需求分析</h2><p>这里我原本目标实现的是官方示例中的可编辑的表格。<br>但是与官方不同的是我是一排都需要进行编辑。这里就会有一些官方取巧的部分自己要想办法酌情进行解决。</p><h2 id="2-实现思路"><a href="#2-实现思路" class="headerlink" title="2 实现思路"></a>2 实现思路</h2><h3 id="2-1-确定编辑位置"><a href="#2-1-确定编辑位置" class="headerlink" title="2.1 确定编辑位置"></a>2.1 确定编辑位置</h3><p>首先是与官方相同，依靠自定义的单元格渲染来实现对应的操作。<br>但是在点击需要编辑的单元格的时候，官方是将整行设置成可编辑，我这里是设置整行和整列来确定编辑的位置。<br>这样的选择的原因是在于：  </p><ol><li>前提，如果界面中是组件类型的渲染是十分消耗资源的。即如果是input状态滚动滚轮，会发现卡顿十分严重，但是官方的却十分丝滑就在于，它设置了如果焦点消失，那样就立刻退出编辑状态，那样仅仅是数据展示状态，就很丝滑。</li><li>官方因为仅仅需要修改一列，因此可以设置成为整行进行编辑，但是我们不行。关键就在于那个焦点消失的条件。如果简单的照搬会发现怎么也无法进入可编辑的状态。因为点击是进入编辑状态了，但是一行中其他列也进入了编辑状态，你在编辑第一列的时候，焦点是不在第二列的。因此此时焦点就判断退出了编辑，那样就将整行的编辑状态退出了。所以怎么点击也没有办法。</li></ol><h3 id="2-2-自定义的渲染器"><a href="#2-2-自定义的渲染器" class="headerlink" title="2.2 自定义的渲染器"></a>2.2 自定义的渲染器</h3><p>除此以外，我还自定义了一些其他的类型的组件比如ElSelect、ElSwitch与ElOption。来丰富界面可编辑选项。<br>但是这个也有一些特别点：</p><ol><li>ElSelect是需要ElOption一起使用的，不然会发现没有可选的选项。</li><li>ElSelect、ElSwitch我是直接在界面中设置编辑激活状态的，这个比一般的文本模式更加消耗资源，也是我最后这个方案被放弃的原因，页面还是有卡顿，但是我为什么还是要选择这种方案呢？</li></ol><ul><li>关键在于一个失去焦点的时机很难把握。</li><li>ElSelect如果像input一样的设置，那样单击的时候，并没有触发什么，但是已经进入编辑模式，此时滚动就很卡。如果设置成失去焦点，就退出编辑。就会引起问题，它的select的顺序是-失去焦点-值改变-收起下拉框。退出编辑模式的情况下是不能界面中改变值的。</li><li>因此这个时机是收起下拉框</li><li>另外要注意变量大小写一定要对，我就是因为ElSwitch的对应变量的开头大小写不对，折腾了一上午。</li></ul><blockquote><p>这个自定义的渲染器引起卡顿的现象还是挺严重的，感觉还是用户体验不太好。具体是因为鼠标浮动还是因为自定义的渲染器直接显示，导致的原因自己还没有测试。</p></blockquote><h2 id="3-实现的代码"><a href="#3-实现的代码" class="headerlink" title="3 实现的代码"></a>3 实现的代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;height:100%;width: 100%;&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 主要界面内容 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;routeContioner&#x27;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-backtop</span> <span class="attr">:right</span>=<span class="string">&quot;100&quot;</span> <span class="attr">:bottom</span>=<span class="string">&quot;100&quot;</span> <span class="attr">target</span>=<span class="string">&quot;#routeContioner&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-backtop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;padding:20px 30px 10px 30px&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Add Plc info<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;display: flex; width: 80%;margin-left: 10%;margin-bottom: 40px;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-steps</span> <span class="attr">:space</span>=<span class="string">&quot;200&quot;</span> <span class="attr">:active</span>=<span class="string">&quot;stepFlag&quot;</span> <span class="attr">finish-status</span>=<span class="string">&quot;success&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">style</span>=<span class="string">&quot;width: 100%;justify-content:center&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-step</span> <span class="attr">title</span>=<span class="string">&quot;Basic Info&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-step</span> <span class="attr">title</span>=<span class="string">&quot;Variables&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-step</span> <span class="attr">title</span>=<span class="string">&quot;Submit&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-steps</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- Step 0 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-card</span> <span class="attr">shadow</span>=<span class="string">&quot;always&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;stepFlag == 0&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 80%;margin-left: 10%;margin-bottom: 40px;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">template</span> #<span class="attr">header</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card-header&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>Add PLC Basic Info<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">:inline</span>=<span class="string">&quot;true&quot;</span> <span class="attr">label-position</span>=<span class="string">&quot;left&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;plcFormRef&quot;</span> <span class="attr">:model</span>=<span class="string">&quot;plcInfoForm&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;plcInfoRules&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">label-width</span>=<span class="string">&quot;150px&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;PlcCode&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;plcCode&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;plcInfoForm.plcCode&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;IP&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;ip&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;plcInfoForm.ip&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;Port&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;port&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model.number</span>=<span class="string">&quot;plcInfoForm.port&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;RackNophoneNo&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;rackNo&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model.number</span>=<span class="string">&quot;plcInfoForm.rackNo&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;SlotNo&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;slotNo&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model.number</span>=<span class="string">&quot;plcInfoForm.slotNo&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;heartBeatDbNum&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;heartBeatDbNum&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model.number</span>=<span class="string">&quot;plcInfoForm.heartBeatDbNum&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;heartBeatShift&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;heartBeatShift&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model.number</span>=<span class="string">&quot;plcInfoForm.heartBeatShift&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;heartBeatLength&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;heartBeatLength&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model.number</span>=<span class="string">&quot;plcInfoForm.heartBeatLength&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;description &quot;</span> <span class="attr">prop</span>=<span class="string">&quot;description&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;plcInfoForm.description&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;display: flex; justify-content: center;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;confirmForm(plcFormRef)&quot;</span>&gt;</span>Next<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- Step 1 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-card</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-card</span> <span class="attr">shadow</span>=<span class="string">&quot;always&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;stepFlag == 1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 80%;margin-left: 10%;margin-bottom: 40px;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">template</span> #<span class="attr">header</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card-header&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>Add PLC vaiables<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;button-container&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;addVariable&quot;</span>&gt;</span>Add Variable<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;height: 600px;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-auto-resizer</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">template</span> #<span class="attr">default</span>=<span class="string">&quot;&#123; height, width &#125;&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">el-table-v2</span> <span class="attr">:data</span>=<span class="string">&quot;plcInfoForm.variables&quot;</span> <span class="attr">:columns</span>=<span class="string">&quot;columns&quot;</span> <span class="attr">:width</span>=<span class="string">&quot;width&quot;</span> <span class="attr">:height</span>=<span class="string">&quot;height&quot;</span>  </span></span><br><span class="line"><span class="tag">                               <span class="attr">fixed</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">el-table-v2</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-auto-resizer</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;display: flex; justify-content: center;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-upload</span> <span class="attr">v-model:file-list</span>=<span class="string">&quot;fileList&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 400px;&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">action</span>=<span class="string">&quot;https://192.168.4.66:7138/File/UpLoadVariableFile&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">multiple</span> <span class="attr">ref</span>=<span class="string">&quot;upload&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">:on-preview</span>=<span class="string">&quot;handlePreview&quot;</span> <span class="attr">:on-remove</span>=<span class="string">&quot;handleRemove&quot;</span> <span class="attr">:before-remove</span>=<span class="string">&quot;beforeRemove&quot;</span> <span class="attr">:limit</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">:on-exceed</span>=<span class="string">&quot;handleExceed&quot;</span> <span class="attr">:on-success</span>=<span class="string">&quot;onUploadSuccess&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>Click to upload<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">template</span> #<span class="attr">tip</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;el-upload__tip&quot;</span>&gt;</span></span><br><span class="line">                                please chose the variable.csv</span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-upload</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;Submit(plcFormRef, plcInfoForm)&quot;</span>&gt;</span></span><br><span class="line">                        Submit</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;stepFlag--&quot;</span>&gt;</span></span><br><span class="line">                        Back</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-card</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- Step 2 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-card</span> <span class="attr">shadow</span>=<span class="string">&quot;always&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;stepFlag &gt;= 2&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 80%;margin-left: 10%;margin-bottom: 40px;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;padding:10px;display: flex;justify-content: center;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;loader&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;display: flex; justify-content: center; align-items: center; &quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;display: flex; flex-direction: column; justify-content: center; align-items: center;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;margin-bottom: 1rem;&quot;</span>&gt;</span>添加PLC成功<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;pushToInfo&quot;</span>&gt;</span>前往Plc信息界面<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-card</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;tsx&quot;</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; computed, ref, reactive, type <span class="title class_">Ref</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;../../request/request.js&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; <span class="title class_">ElMessage</span>, <span class="title class_">ElMessageBox</span>, genFileId, type <span class="title class_">UploadInstance</span>, type <span class="title class_">UploadRawFile</span>, &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="string">&#x27;../../../node_modules/element-plus/es/components/backtop/style/index&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> type &#123; <span class="title class_">FormInstance</span>, <span class="title class_">FormRules</span>, <span class="title class_">UploadFile</span>, <span class="title class_">UploadFiles</span>, <span class="title class_">UploadProps</span>, <span class="title class_">UploadUserFile</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;@/router&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; <span class="title class_">ElInput</span>, <span class="title class_">ElButton</span>, <span class="title class_">ElSelect</span>, <span class="title class_">ElOption</span>,<span class="title class_">ElSwitch</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> type &#123; <span class="title class_">FunctionalComponent</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> type &#123; <span class="title class_">Column</span>, <span class="title class_">InputInstance</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> type &#123; <span class="title class_">CellRenderer</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus/es/components/table-v2/src/types&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; <span class="title class_">FixedDir</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus/es/components/table-v2/src/constants&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 控制上方进度条       </span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> stepFlag = ref&lt;number&gt;(<span class="number">0</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="comment">//step0 form填写基本信息</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> plcFormRef = ref&lt;<span class="title class_">FormInstance</span>&gt;()</span></span><br><span class="line"><span class="language-javascript">interface <span class="title class_">PlcInfo</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">id</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">plcCode</span>: string</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">ip</span>: string</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">port</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">rackNo</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">slotNo</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">heartBeatDbNum</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">heartBeatShift</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">heartBeatLength</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">createTime</span>: string</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">updateTime</span>: string</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">description</span>: string</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">variables</span>: myvariable[]</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="comment">//变量的格式</span></span></span><br><span class="line"><span class="language-javascript">interface myvariable &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">id</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">plcInfoId</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">workStationId</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">workStationCode</span>: string</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">interactType</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">dbBlockNum</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">variableName</span>: string</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">shift</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">dataType</span>: string</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">shifttBit</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">length</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">description</span>: string | <span class="literal">null</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">checked</span>: boolean</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">defaultValue</span>: string | <span class="literal">null</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> plcInfoForm = ref&lt;<span class="title class_">PlcInfo</span>&gt;(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">id</span>: -<span class="number">1</span>, <span class="attr">plcCode</span>: <span class="string">&quot;&quot;</span>, <span class="attr">ip</span>: <span class="string">&quot;&quot;</span>, <span class="attr">port</span>: <span class="number">80</span>, <span class="attr">rackNo</span>: <span class="number">0</span>, <span class="attr">slotNo</span>: <span class="number">0</span>, <span class="attr">createTime</span>: <span class="string">&quot;&quot;</span>, <span class="attr">updateTime</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">heartBeatDbNum</span>: <span class="number">0</span>, <span class="attr">heartBeatShift</span>: <span class="number">0</span>, <span class="attr">heartBeatLength</span>: <span class="number">0</span>, <span class="attr">description</span>: <span class="string">&quot;&quot;</span>, <span class="attr">variables</span>: []</span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> plcInfoRules = reactive&lt;<span class="title class_">FormRules</span>&gt;(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">plcCode</span>: [&#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;],</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">port</span>: [&#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;],</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">ip</span>: [&#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;],</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">heartBeatDbNum</span>: [&#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;],</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">heartBeatShift</span>: [&#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;],</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">heartBeatLength</span>: [&#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;],</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">rackNo</span>: [&#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;],</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">slotNo</span>: [&#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;],</span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">confirmForm</span>(<span class="params">plcFormRef: FormInstance | <span class="literal">undefined</span></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (!plcFormRef) <span class="keyword">return</span></span></span><br><span class="line"><span class="language-javascript">    plcFormRef.<span class="title function_">validate</span>(<span class="function">(<span class="params">valid</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (valid) &#123;</span></span><br><span class="line"><span class="language-javascript">            stepFlag.<span class="property">value</span>++</span></span><br><span class="line"><span class="language-javascript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title class_">ElMessage</span>.<span class="title function_">error</span>(<span class="string">&#x27;Please check the input&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="comment">//step1 table填入变量</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">type <span class="title class_">SelectionCellProps</span> = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">value</span>: string</span></span><br><span class="line"><span class="language-javascript">    intermediate?: boolean</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">onChange</span>: <span class="function">(<span class="params">value: string</span>) =&gt;</span> <span class="keyword">void</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">forwardRef</span>: <span class="function">(<span class="params">el: InputInstance</span>) =&gt;</span> <span class="keyword">void</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title class_">InputCell</span>: <span class="title class_">FunctionalComponent</span>&lt;<span class="title class_">SelectionCellProps</span>&gt; = <span class="function">(<span class="params">&#123;</span></span></span></span><br><span class="line"><span class="params"><span class="function"><span class="language-javascript">    value,</span></span></span></span><br><span class="line"><span class="params"><span class="function"><span class="language-javascript">    onChange,</span></span></span></span><br><span class="line"><span class="params"><span class="function"><span class="language-javascript">    forwardRef,</span></span></span></span><br><span class="line"><span class="params"><span class="function"><span class="language-javascript">&#125;</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> (</span></span><br><span class="line"><span class="language-javascript">        <span class="language-xml"><span class="tag">&lt;<span class="name">ElInput</span> <span class="attr">ref</span>=<span class="string">&#123;forwardRef</span> <span class="attr">as</span> <span class="attr">any</span>&#125; <span class="attr">onInput</span>=<span class="string">&#123;onChange&#125;</span> <span class="attr">modelValue</span>=<span class="string">&#123;value&#125;</span> /&gt;</span></span></span></span><br><span class="line"><span class="language-javascript">    )</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//创建input类型的编辑渲染方案</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="attr">editableCellRenderer</span>: <span class="title class_">CellRenderer</span>&lt;any&gt; = <span class="function">(<span class="params">&#123; rowData, column &#125;</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> <span class="title function_">onChange</span> = (<span class="params">value: string</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">        rowData[column.<span class="property">dataKey</span>!] = value;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> isEditable = rowData.<span class="property">editing</span> &amp;&amp; column.<span class="property">editable</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> <span class="title function_">onEnterEditMode</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">        column.<span class="property">editable</span> = <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">        rowData.<span class="property">editing</span> = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> <span class="title function_">onExitEditMode</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">        column.<span class="property">editable</span> = <span class="literal">false</span></span></span><br><span class="line"><span class="language-javascript">        rowData.<span class="property">editing</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> input = <span class="title function_">ref</span>()</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> <span class="title function_">setRef</span> = (<span class="params">el: any</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">        input.<span class="property">value</span> = el;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (el) &#123;</span></span><br><span class="line"><span class="language-javascript">            el.<span class="property">focus</span>?.();</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> isEditable ? (</span></span><br><span class="line"><span class="language-javascript">        <span class="language-xml"><span class="tag">&lt;<span class="name">InputCell</span></span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="language-javascript">        </span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="language-javascript">            <span class="attr">forwardRef</span>=<span class="string">&#123;setRef&#125;</span></span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="language-javascript">            <span class="attr">value</span>=<span class="string">&#123;rowData[column.dataKey!]&#125;</span></span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="language-javascript">            <span class="attr">onChange</span>=<span class="string">&#123;onChange&#125;</span></span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="language-javascript">            <span class="attr">onBlur</span>=<span class="string">&#123;onExitEditMode&#125;</span></span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="language-javascript">            <span class="attr">onKeydownEnter</span>=<span class="string">&#123;onExitEditMode&#125;</span></span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="language-javascript">        /&gt;</span></span></span></span><br><span class="line"><span class="language-javascript">    ) : (</span></span><br><span class="line"><span class="language-javascript">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;table-v2-inline-editing-trigger&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;onEnterEditMode&#125;</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-javascript">            &#123;rowData[column.dataKey!]&#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-javascript">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="language-javascript">    );</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//创建action类型的编辑渲染方案</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="attr">buttonCellRenderer</span>: <span class="title class_">CellRenderer</span>&lt;any&gt; = <span class="function">(<span class="params">&#123; rowData, column &#125;</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> <span class="title function_">onClickDelete</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">        plcInfoForm.<span class="property">value</span>.<span class="property">variables</span>.<span class="title function_">splice</span>(rowData.<span class="property">$index</span> + <span class="number">1</span>, <span class="number">1</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> (</span></span><br><span class="line"><span class="language-javascript">        <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">className</span>=<span class="string">&quot;table-v2-inline-editing-action&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;onClickDelete&#125;</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-javascript">            Delete</span></span></span><br><span class="line"><span class="language-xml"><span class="language-javascript">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span></span><br><span class="line"><span class="language-javascript">    )</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> options = [</span></span><br><span class="line"><span class="language-javascript">    &#123; <span class="attr">label</span>: <span class="string">&#x27;BOOL&#x27;</span>, <span class="attr">value</span>: <span class="string">&#x27;BOOL&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#123; <span class="attr">label</span>: <span class="string">&#x27;STRING&#x27;</span>, <span class="attr">value</span>: <span class="string">&#x27;STRING&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#123; <span class="attr">label</span>: <span class="string">&#x27;INT&#x27;</span>, <span class="attr">value</span>: <span class="string">&#x27;INT&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#123; <span class="attr">label</span>: <span class="string">&#x27;REAL&#x27;</span>, <span class="attr">value</span>: <span class="string">&#x27;REAL&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">];</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//创建select Type类型的编辑渲染方案</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="attr">selectCellRenderer</span>: <span class="title class_">CellRenderer</span>&lt;any&gt; = <span class="function">(<span class="params">&#123; rowData, column &#125;</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> <span class="title function_">onChange</span> = (<span class="params">value: string</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">        rowData[column.<span class="property">dataKey</span>!] = value;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> isEditable = rowData.<span class="property">editing</span> || column.<span class="property">editable</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> <span class="title function_">onEnterEditMode</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">        rowData.<span class="property">editing</span> = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> <span class="title function_">onExitEditMode</span> = (<span class="params">drop: boolean</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (!drop) &#123;</span></span><br><span class="line"><span class="language-javascript">            rowData.<span class="property">editing</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> input = <span class="title function_">ref</span>()</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> <span class="title function_">setRef</span> = (<span class="params">el: any</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">        input.<span class="property">value</span> = el;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (el) &#123;</span></span><br><span class="line"><span class="language-javascript">            el.<span class="property">focus</span>?.();</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> (</span></span><br><span class="line"><span class="language-javascript">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">onClick</span>=<span class="string">&#123;onEnterEditMode&#125;</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-javascript">            <span class="tag">&lt;<span class="name">ElSelect</span></span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="language-javascript">            </span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="language-javascript">                <span class="attr">placeholder</span>=<span class="string">&#123;rowData[column.dataKey!]&#125;</span></span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="language-javascript">                <span class="attr">forwardRef</span>=<span class="string">&#123;setRef&#125;</span></span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="language-javascript">                <span class="attr">value</span>=<span class="string">&#123;rowData[column.dataKey!]&#125;</span></span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="language-javascript">                <span class="attr">onChange</span>=<span class="string">&#123;onChange&#125;</span></span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="language-javascript">                <span class="attr">onVisible-change</span>=<span class="string">&#123;onExitEditMode&#125;</span></span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="language-javascript">            &gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-javascript">                <span class="tag">&lt;<span class="name">ElOption</span> <span class="attr">label</span>=<span class="string">&quot;BOOL&quot;</span> <span class="attr">value</span>=<span class="string">&quot;BOOL&quot;</span> /&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-javascript">                <span class="tag">&lt;<span class="name">ElOption</span> <span class="attr">label</span>=<span class="string">&quot;STRING&quot;</span> <span class="attr">value</span>=<span class="string">&quot;STRING&quot;</span> /&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-javascript">                <span class="tag">&lt;<span class="name">ElOption</span> <span class="attr">label</span>=<span class="string">&quot;INT&quot;</span> <span class="attr">value</span>=<span class="string">&quot;INT&quot;</span> /&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-javascript">                <span class="tag">&lt;<span class="name">ElOption</span> <span class="attr">label</span>=<span class="string">&quot;RARE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;RARE&quot;</span> /&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-javascript">            <span class="tag">&lt;/<span class="name">ElSelect</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-javascript">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="language-javascript">    )</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//创建select Station类型的编辑渲染方案</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="attr">selectStationCellRenderer</span>: <span class="title class_">CellRenderer</span>&lt;any&gt; = <span class="function">(<span class="params">&#123; rowData, column &#125;</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> <span class="title function_">onChange</span> = (<span class="params">value: string</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        rowData[column.<span class="property">dataKey</span>!] = value;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> isEditable = rowData.<span class="property">editing</span> || column.<span class="property">editable</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> <span class="title function_">onEnterEditMode</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">        rowData.<span class="property">editing</span> = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> <span class="title function_">onExitEditMode</span> = (<span class="params">drop: boolean</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (!drop) &#123;</span></span><br><span class="line"><span class="language-javascript">            rowData.<span class="property">editing</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> input = <span class="title function_">ref</span>()</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> <span class="title function_">setRef</span> = (<span class="params">el: any</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        input.<span class="property">value</span> = el;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (el) &#123;</span></span><br><span class="line"><span class="language-javascript">            el.<span class="property">focus</span>?.();</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> (</span></span><br><span class="line"><span class="language-javascript">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">onClick</span>=<span class="string">&#123;onEnterEditMode&#125;</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-javascript">            <span class="tag">&lt;<span class="name">ElSelect</span></span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="language-javascript">                <span class="attr">forwardRef</span>=<span class="string">&#123;setRef&#125;</span></span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="language-javascript">                <span class="attr">placeholder</span>=<span class="string">&#123;rowData[column.dataKey!]&#125;</span></span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="language-javascript">                <span class="attr">onChange</span>=<span class="string">&#123;onChange&#125;</span></span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="language-javascript">                <span class="attr">onVisible-change</span>=<span class="string">&#123;onExitEditMode&#125;</span></span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="language-javascript">            &gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-javascript">                &#123;stationOptions.value</span></span></span><br><span class="line"><span class="language-xml"><span class="language-javascript">                    ? stationOptions!.value.map(station =&gt; (</span></span></span><br><span class="line"><span class="language-xml"><span class="language-javascript">                        <span class="tag">&lt;<span class="name">ElOption</span></span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="language-javascript">                            <span class="attr">key</span>=<span class="string">&#123;station.wsCode&#125;</span></span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="language-javascript">                            <span class="attr">label</span>=<span class="string">&#123;station.wsCode&#125;</span></span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="language-javascript">                            <span class="attr">value</span>=<span class="string">&#123;station.wsCode&#125;</span></span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="language-javascript">                        &gt;</span>&#123;station.wsCode&#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-javascript">                        <span class="tag">&lt;/<span class="name">ElOption</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-javascript">                    ))</span></span></span><br><span class="line"><span class="language-xml"><span class="language-javascript">                    : <span class="tag">&lt;<span class="name">ElOption</span> <span class="attr">label</span>=<span class="string">&quot;--&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ElOption</span>&gt;</span> // 添加一个空的选项</span></span></span><br><span class="line"><span class="language-xml"><span class="language-javascript">                &#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-javascript">            <span class="tag">&lt;/<span class="name">ElSelect</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-javascript">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="language-javascript">    )</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//创建switch类型的编辑渲染方案</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="attr">switchCellRenderer</span>: <span class="title class_">CellRenderer</span>&lt;boolean|number|string&gt; = <span class="function">(<span class="params">&#123; rowData, column &#125;</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> <span class="title function_">onChange</span>=(<span class="params">val:boolean|number|string</span>)=&gt;&#123;</span></span><br><span class="line"><span class="language-javascript">        rowData[column.<span class="property">dataKey</span>!]=val</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span>  (</span></span><br><span class="line"><span class="language-javascript">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> &gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-javascript">                    <span class="tag">&lt;<span class="name">ElSwitch</span></span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="language-javascript">        <span class="attr">onUpdate:modelValue</span>=<span class="string">&#123;(value:</span> <span class="attr">boolean</span>|<span class="attr">number</span>|<span class="attr">string</span>) =&gt;</span> (rowData[column.dataKey!] = value)&#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-javascript">        v-model=&#123;rowData[column.dataKey!]&#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-javascript">        onChange=&#123;onChange&#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-javascript">        /&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-javascript">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="language-javascript">    )</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="attr">columns</span>: <span class="title class_">Column</span>&lt;any&gt;[] = [</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">title</span>: <span class="string">&#x27;Code&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">key</span>: <span class="string">&#x27;workStationCode&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">dataKey</span>: <span class="string">&#x27;workStationCode&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">fixed</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">width</span>: <span class="number">130</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">cellRenderer</span>: selectStationCellRenderer</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">title</span>: <span class="string">&#x27;interactType&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">key</span>: <span class="string">&#x27;interactType&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">dataKey</span>: <span class="string">&#x27;interactType&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">width</span>: <span class="number">130</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">cellRenderer</span>: editableCellRenderer</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">title</span>: <span class="string">&#x27;dbBlockNum&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">key</span>: <span class="string">&#x27;dbBlockNum&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">dataKey</span>: <span class="string">&#x27;dbBlockNum&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">width</span>: <span class="number">120</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">cellRenderer</span>: editableCellRenderer</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">title</span>: <span class="string">&#x27;variableName&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">key</span>: <span class="string">&#x27;variableName&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">dataKey</span>: <span class="string">&#x27;variableName&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">width</span>: <span class="number">130</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">cellRenderer</span>: editableCellRenderer</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">title</span>: <span class="string">&#x27;shift&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">key</span>: <span class="string">&#x27;shift&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">dataKey</span>: <span class="string">&#x27;shift&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">width</span>: <span class="number">130</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">cellRenderer</span>: editableCellRenderer</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">title</span>: <span class="string">&#x27;dataType&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">key</span>: <span class="string">&#x27;dataType&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">dataKey</span>: <span class="string">&#x27;dataType&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">width</span>: <span class="number">130</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">cellRenderer</span>: selectCellRenderer</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">title</span>: <span class="string">&#x27;shifttBit&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">key</span>: <span class="string">&#x27;shifttBit&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">dataKey</span>: <span class="string">&#x27;shifttBit&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">width</span>: <span class="number">130</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">cellRenderer</span>: editableCellRenderer</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">title</span>: <span class="string">&#x27;length&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">key</span>: <span class="string">&#x27;length&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">dataKey</span>: <span class="string">&#x27;length&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">width</span>: <span class="number">130</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">cellRenderer</span>: editableCellRenderer</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">title</span>: <span class="string">&#x27;description&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">key</span>: <span class="string">&#x27;description&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">dataKey</span>: <span class="string">&#x27;description&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">width</span>: <span class="number">130</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">cellRenderer</span>: editableCellRenderer</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">title</span>: <span class="string">&#x27;defaultValue&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">key</span>: <span class="string">&#x27;defaultValue&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">dataKey</span>: <span class="string">&#x27;defaultValue&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">width</span>: <span class="number">130</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">cellRenderer</span>: editableCellRenderer</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">title</span>: <span class="string">&#x27;checked&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">key</span>: <span class="string">&#x27;checked&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">dataKey</span>: <span class="string">&#x27;checked&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">width</span>: <span class="number">130</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">cellRenderer</span>:switchCellRenderer</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">title</span>: <span class="string">&#x27;Action&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">width</span>: <span class="number">130</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">fixed</span>: <span class="title class_">FixedDir</span>.<span class="property">RIGHT</span>, <span class="comment">// 将该列设置为右侧固定列</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">cellRenderer</span>: buttonCellRenderer</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">]</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">interface stationOption &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">id</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">wsCode</span>: string,</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> <span class="attr">stationOptions</span>: <span class="title class_">Ref</span>&lt;stationOption[] | <span class="literal">undefined</span>&gt; = <span class="title function_">ref</span>()</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">LoadStations</span>(<span class="params">plcId: number</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">request</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">url</span>: <span class="string">&quot;/WorkStation/GetWorkStationNoBinding/&quot;</span> + plcId,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (res.<span class="property">status</span> == <span class="number">200</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            resInfo = res.<span class="property">data</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (resInfo.<span class="property">success</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                stationOptions.<span class="property">value</span> = resInfo.<span class="property">content</span></span></span><br><span class="line"><span class="language-javascript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title class_">ElMessage</span>.<span class="title function_">error</span>(resInfo.<span class="property">message</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">ElMessage</span>.<span class="title function_">error</span>(<span class="string">&#x27;please check the network, etc.&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> fileList = ref&lt;<span class="title class_">UploadUserFile</span>[]&gt;([</span></span><br><span class="line"><span class="language-javascript">])</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="attr">handleRemove</span>: <span class="title class_">UploadProps</span>[<span class="string">&#x27;onRemove&#x27;</span>] = <span class="function">(<span class="params">file, uploadFiles</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="attr">handlePreview</span>: <span class="title class_">UploadProps</span>[<span class="string">&#x27;onPreview&#x27;</span>] = <span class="function">(<span class="params">uploadFile</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> upload = ref&lt;<span class="title class_">UploadInstance</span>&gt;()</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="attr">handleExceed</span>: <span class="title class_">UploadProps</span>[<span class="string">&#x27;onExceed&#x27;</span>] = <span class="function">(<span class="params">files</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    upload.<span class="property">value</span>!.<span class="title function_">clearFiles</span>()</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> file = files[<span class="number">0</span>] <span class="keyword">as</span> <span class="title class_">UploadRawFile</span></span></span><br><span class="line"><span class="language-javascript">    file.<span class="property">uid</span> = <span class="title function_">genFileId</span>()</span></span><br><span class="line"><span class="language-javascript">    upload.<span class="property">value</span>!.<span class="title function_">handleStart</span>(file)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="attr">beforeRemove</span>: <span class="title class_">UploadProps</span>[<span class="string">&#x27;beforeRemove&#x27;</span>] = <span class="function">(<span class="params">uploadFile, uploadFiles</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> <span class="title class_">ElMessageBox</span>.<span class="title function_">confirm</span>(</span></span><br><span class="line"><span class="language-javascript">        <span class="string">`Cancel the transfert of <span class="subst">$&#123;uploadFile.name&#125;</span> ?`</span></span></span><br><span class="line"><span class="language-javascript">    ).<span class="title function_">then</span>(</span></span><br><span class="line"><span class="language-javascript">        <span class="function">() =&gt;</span> <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="function">() =&gt;</span> <span class="literal">false</span></span></span><br><span class="line"><span class="language-javascript">    )</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">interface resData &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">message</span>: string,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">success</span>: <span class="title class_">Boolean</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">content</span>: any,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">errorCode</span>: number</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> <span class="attr">resInfo</span>: resData</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">onUploadSuccess</span> = (<span class="params">response: any, uploadFile: UploadFile, uploadFiles: UploadFiles</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(response);</span></span><br><span class="line"><span class="language-javascript">    resInfo = response</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (resInfo.<span class="property">success</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        plcInfoForm.<span class="property">value</span>.<span class="property">variables</span> = resInfo.<span class="property">content</span></span></span><br><span class="line"><span class="language-javascript">    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">ElMessage</span>.<span class="title function_">error</span>(resInfo.<span class="property">message</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">Submit</span>(<span class="params">plcFormRef: FormInstance | <span class="literal">undefined</span>, form: PlcInfo</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (!plcFormRef) <span class="keyword">return</span></span></span><br><span class="line"><span class="language-javascript">    plcFormRef.<span class="title function_">validate</span>(<span class="function">(<span class="params">valid</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (valid) &#123;</span></span><br><span class="line"><span class="language-javascript">            request.<span class="title function_">post</span>(<span class="string">&quot;/PlcInfos/AddPlcInfos&quot;</span>, form).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span> (res.<span class="property">status</span> == <span class="number">200</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    resInfo = res.<span class="property">data</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (resInfo.<span class="property">success</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                        stepFlag.<span class="property">value</span> = stepFlag.<span class="property">value</span> + <span class="number">2</span></span></span><br><span class="line"><span class="language-javascript">                    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="title class_">ElMessage</span>.<span class="title function_">error</span>(resInfo.<span class="property">message</span>)</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;, <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title class_">ElMessage</span>.<span class="title function_">error</span>(<span class="string">&#x27;please check the network, etc.&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title class_">ElMessage</span>.<span class="title function_">error</span>(<span class="string">&#x27;Please check the input&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">addVariable</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    plcInfoForm.<span class="property">value</span>.<span class="property">variables</span>.<span class="title function_">splice</span>(<span class="number">0</span>, <span class="number">0</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">id</span>: -<span class="number">1</span>, <span class="attr">plcInfoId</span>: -<span class="number">1</span>, <span class="attr">workStationId</span>: -<span class="number">1</span>, <span class="attr">workStationCode</span>: <span class="string">&#x27;&#x27;</span>, <span class="attr">interactType</span>: <span class="number">0</span>, <span class="attr">dbBlockNum</span>: <span class="number">0</span>, <span class="attr">variableName</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">shift</span>: <span class="number">0</span>, <span class="attr">dataType</span>: <span class="string">&#x27;&#x27;</span>, <span class="attr">shifttBit</span>: <span class="number">0</span>, <span class="attr">length</span>: <span class="number">0</span>, <span class="attr">description</span>: <span class="string">&#x27;&#x27;</span>, <span class="attr">checked</span>: <span class="literal">true</span>, <span class="attr">defaultValue</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">plcInfoDelete</span> = (<span class="params">index: number, row: myvariable</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (index == <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">ElMessage</span>.<span class="title function_">error</span>(<span class="string">&quot;PLC has at least one variable&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    plcInfoForm.<span class="property">value</span>.<span class="property">variables</span>.<span class="title function_">splice</span>(index, <span class="number">1</span>)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="comment">//step2 给予反馈，成功与否</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">pushToInfo</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    router.<span class="title function_">push</span>(<span class="string">&#x27;/plcInfo&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> typeOptions = <span class="title function_">ref</span>([&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">types</span>: <span class="string">&#x27;BOOL&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">&#125;, &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">types</span>: <span class="string">&#x27;STRING&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">&#125;, &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">types</span>: <span class="string">&#x27;INT&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">&#125;, &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">types</span>: <span class="string">&#x27;REAL&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">&#125;,</span></span><br><span class="line"><span class="language-javascript">])</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// let typeOptions=mapGetters([&#x27;getMytypeOptions&#x27;])</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">LoadPage</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">LoadStations</span>(-<span class="number">1</span>)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="title class_">LoadPage</span>()</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>  <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="keyword">@import</span> <span class="string">&quot;../../components/scss/table.scss&quot;</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">:<span class="built_in">deep</span>(.header-cell-style) &#123;</span></span><br><span class="line"><span class="language-css">    <span class="keyword">@include</span> table-header-cell-style;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">:<span class="built_in">deep</span>(.expanded-header-cell-style) &#123;</span></span><br><span class="line"><span class="language-css">    <span class="keyword">@include</span> table-expanded-header-cell-style;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">:<span class="built_in">deep</span>(.table-v2-inline-editing-trigger) &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">1px</span> transparent dotted;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">:<span class="built_in">deep</span>(.table-v2-inline-editing-action) &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">1px</span> transparent dotted;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: <span class="number">#78C3F3</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css">:<span class="built_in">deep</span>(.table-v2-inline-editing-swich) &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css">:<span class="built_in">deep</span>(.table-v2-inline-editing-trigger:hover) &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-color</span>: <span class="built_in">var</span>(--el-color-primary);</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">// 圆圈</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.loader</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">4px</span> solid <span class="built_in">rgba</span>(<span class="number">165</span>, <span class="number">220</span>, <span class="number">134</span>, <span class="number">0.2</span>);</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-left-color</span>: <span class="number">#A5DC86</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">animation</span>: animation_collect <span class="number">1s</span> linear <span class="number">1</span> both; //infinite永远执行</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">// 圆圈动画代码</span></span><br><span class="line"><span class="language-css"><span class="keyword">@keyframes</span> animation_collect &#123;</span></span><br><span class="line"><span class="language-css">    <span class="number">0%</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">270deg</span>);</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-left-color</span>: <span class="number">#A5DC86</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="number">25%</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-left-color</span>: <span class="number">#A5DC86</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="number">50%</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-left-color</span>: <span class="number">#A5DC86</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="number">75%</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-left-color</span>: <span class="number">#A5DC86</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="number">100%</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-left-color</span>: <span class="built_in">rgba</span>(<span class="number">165</span>, <span class="number">220</span>, <span class="number">134</span>, <span class="number">0.2</span>);</span></span><br><span class="line"><span class="language-css">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">//对号</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.loader</span><span class="selector-pseudo">::before</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">top</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">left</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">4px</span> solid <span class="number">#A5DC86</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-left-width</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-bottom-width</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">transform</span>: <span class="built_in">scaleX</span>(-<span class="number">1</span>) <span class="built_in">rotate</span>(<span class="number">135deg</span>);</span></span><br><span class="line"><span class="language-css">    <span class="attribute">transform-origin</span>: left top;</span></span><br><span class="line"><span class="language-css">    // 设置动画延迟<span class="number">1s</span>执行，先执行外层圆圈动画 结束后执行该动画</span></span><br><span class="line"><span class="language-css">    <span class="attribute">animation</span>: animation_true <span class="number">0.5s</span> <span class="number">1s</span> linear <span class="number">1</span> both;</span></span><br><span class="line"><span class="language-css">    // 外层执行动画执行时，里面不显示，但是不能使用<span class="attribute">display</span>:none,所以用opacity代替</span></span><br><span class="line"><span class="language-css">    opacity: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="keyword">@keyframes</span> animation_true &#123;</span></span><br><span class="line"><span class="language-css">    <span class="number">0%</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">opacity</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">0px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">0px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="number">33%</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">opacity</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">0px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="number">100%</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">opacity</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.button-container</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">justify-content</span>: flex-end;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-技术点分析"><a href="#4-技术点分析" class="headerlink" title="4 技术点分析"></a>4 技术点分析</h2><p>主要在于一个自定义渲染器</p>]]></content>
      
      
      <categories>
          
          <category> element plus </category>
          
          <category> Virtualized Table </category>
          
      </categories>
      
      
        <tags>
            
            <tag> element plus </tag>
            
            <tag> Virtualized Table </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Scss @mixin</title>
      <link href="/2023/04/19/%E5%89%8D%E7%AB%AF/css+scss/Scss%20@minxin/"/>
      <url>/2023/04/19/%E5%89%8D%E7%AB%AF/css+scss/Scss%20@minxin/</url>
      
        <content type="html"><![CDATA[<h1 id="Scss-mixin"><a href="#Scss-mixin" class="headerlink" title="Scss @mixin"></a>Scss @mixin</h1><p>复用是代码中最基础的需求。比如在更改主题配色之类的时候岂不是非常麻烦，需要一个个修改，还容易有所遗漏。</p><p>在样式中也肯定是要复用的说法。其中这个@mixin就应该挺好用的。</p><h2 id="简单示例"><a href="#简单示例" class="headerlink" title="简单示例"></a>简单示例</h2><p>注意@minxin是需要与@include一起使用的。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@mixin</span> button &#123;  </span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1em</span>;  </span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0.5em</span> <span class="number">1.0em</span>;  </span><br><span class="line">    <span class="selector-tag">text</span>-decoration: none;  </span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.button-green</span> &#123;  </span><br><span class="line">    <span class="keyword">@include</span> button;  </span><br><span class="line">    <span class="attribute">background-color</span>: green;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解析之后的CSS如下.</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.button-green</span> &#123;  </span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1em</span>;  </span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0.5em</span> <span class="number">1.0em</span>;  </span><br><span class="line">    <span class="attribute">text-decoration</span>: none;  </span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;  </span><br><span class="line">    <span class="attribute">background-color</span>: green;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以完全可以通过这种简化与复用部分代码。</p><h2 id="传入参数"><a href="#传入参数" class="headerlink" title="传入参数"></a>传入参数</h2><p>这里还是可以支持传入参数的使用。</p><p>Mixins可以接收和使用参数，这使得它比<code>@extend</code>更加强大和灵活。我更新了之前的<code>button</code>模块，增加了名为<code>background</code>的参数并将其传递给模块。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@mixin</span> button(<span class="variable">$background</span>) &#123;  </span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1em</span>;  </span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0.5em</span> <span class="number">1.0em</span>;  </span><br><span class="line">    <span class="selector-tag">text</span>-decoration: none;  </span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;  </span><br><span class="line">    <span class="attribute">background</span>: <span class="variable">$background</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意到参数被设置为一个变量并成为<code>backround</code>属性的值。如果我们想创建一个绿色的按钮，那么就可以使用以下代码：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.button-green</span> &#123;  </span><br><span class="line">    <span class="keyword">@include</span> button(green);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当Sass被编译时，值<code>green</code>就被传递给<code>@mixin</code>并<a href="http://vanseodesign.com/css/how-to-use-sass-variables/">成为变量</a><code>$backround</code>的值。编译后的代码如下：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.button-green</span> &#123;  </span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1em</span>;  </span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0.5em</span> <span class="number">1.0em</span>;  </span><br><span class="line">    <span class="selector-tag">text</span>-decoration: none;  </span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;  </span><br><span class="line">    <span class="attribute">background</span>: green;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>你还可以在<code>@mixin</code>和<code>@include</code>中传递多个参数，参数间用逗号隔开。比如：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@mixin</span> button(<span class="variable">$background</span>, <span class="variable">$color</span>) &#123;  </span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1em</span>;  </span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0.5em</span> <span class="number">1.0em</span>;  </span><br><span class="line">    <span class="selector-tag">text</span>-decoration: none;  </span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$color</span>;  </span><br><span class="line">    <span class="attribute">background</span>: <span class="variable">$background</span>;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.button-green</span> &#123;  </span><br><span class="line">    <span class="keyword">@include</span> button(green, <span class="number">#fff</span>);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="给参数设置默认值"><a href="#给参数设置默认值" class="headerlink" title="给参数设置默认值"></a>给参数设置默认值</h2><p>你可能会好奇如果在定义mixin时定义了参数，但是在<code>@include</code>调用时没有传递参数会发生什么。这种情况下你会收到一个编译错误的提示。同时我相信这种情况一定不是你想看到的。你可以通过在mixin中定义参数的时候给它设置一个默认值，从而来避免这种错误。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@mixin</span> button(<span class="variable">$background</span>: green) &#123;  </span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1em</span>;  </span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0.5em</span> <span class="number">1.0em</span>;  </span><br><span class="line">    <span class="selector-tag">text</span>-decoration: none;  </span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;  </span><br><span class="line">    <span class="attribute">background</span>: <span class="variable">$background</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在如果你在调用的时候忘记传递参数值</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.button-green</span> &#123;  </span><br><span class="line">    <span class="keyword">@include</span> button;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>你的代码将会使用你设置的参数默认值来解析，在这个例子中也就是<code>green</code>这个值。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.button-green</span> &#123;  </span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1em</span>;  </span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0.5em</span> <span class="number">1.0em</span>;  </span><br><span class="line">    <span class="selector-tag">text</span>-decoration: none;  </span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;  </span><br><span class="line">    <span class="attribute">background</span>: green;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然，你也可以通过提供一个参数值来覆盖这个默认值。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.button-blue</span> &#123;  </span><br><span class="line">    <span class="keyword">@include</span> button(blue);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这时将会使用你提供的值来编译代码</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.button-blue</span> &#123;  </span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1em</span>;  </span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0.5em</span> <span class="number">1.0em</span>;  </span><br><span class="line">    <span class="selector-tag">text</span>-decoration: none;  </span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;  </span><br><span class="line">    <span class="attribute">background</span>: blue;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="关键字参数"><a href="#关键字参数" class="headerlink" title="关键字参数"></a>关键字参数</h2><p>为了帮助你的代码更加容易理解，你可以在传递值给mixin时将参数名称和参数值一并传递过去。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.button-green</span> &#123;  </span><br><span class="line">    <span class="keyword">@include</span> button(<span class="variable">$background</span>: green, <span class="variable">$color</span>: <span class="number">#fff</span>);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关键字参数会额外增加一些代码，但是这会使得你的<code>@include</code>更加容易理解。比如，上面那段代码就比下面这段代码更加容易理解，因为上面的代码明确指出了<code>green</code>和<code>#fff</code>分别是什么。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.button-green</span> &#123;  </span><br><span class="line">    <span class="keyword">@include</span> button(green, <span class="number">#fff</span>);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>虽然选择器的名称给了我们一些线索，可以大概推断出第一个参数代表什么，但是对于第二个参数却没有任何提示作用，而且一年后你很可能不会再记得这个参数的含义。</p><p>一起传递关键字名称和值也被称为命名参数，你也可以以任意顺序传递命名参数。下面两种传递方式解析后会得到相同的结果。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.button-green</span> &#123;  </span><br><span class="line">    <span class="keyword">@include</span> button(<span class="variable">$background</span>: green, <span class="variable">$color</span>: <span class="number">#fff</span>);  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.button-green</span> &#123;  </span><br><span class="line">    <span class="keyword">@include</span> button(<span class="variable">$color</span>: <span class="number">#fff</span>, <span class="variable">$background</span>: green);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为命名参数是变量名，由于历史原因，下划线和破折号可以互换使用。</p><h2 id="数量可变的参数"><a href="#数量可变的参数" class="headerlink" title="数量可变的参数"></a>数量可变的参数</h2><p>Mixins可以接收未知数量的参数。比如你可以给同一个元素增加多种<code>box-shadows</code>。这里，我增加了暗灰和浅灰两种阴影。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;  </span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">1px</span> <span class="number">2px</span> <span class="number">#333</span>,  </span><br><span class="line">                <span class="number">2px</span> <span class="number">3px</span> <span class="number">4px</span> <span class="number">#ccc</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在另一个元素上你可能只想使用一种阴影或者在其他元素上你又想使用三种或者四种阴影。这个时候你就可以创建一个接收数量可变的参数的mixin模块，并且在使用<code>@include</code>指令的时候决定传递参数的数量。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@mixin</span> box-shadows(<span class="variable">$shadow</span>...) &#123;  </span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="variable">$shadow</span>;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span> &#123;  </span><br><span class="line">    <span class="keyword">@include</span> box-shadows(<span class="number">0px</span> <span class="number">1px</span> <span class="number">2px</span> <span class="number">#333</span>, <span class="number">2px</span> <span class="number">3px</span> <span class="number">4px</span> <span class="number">#ccc</span>);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过在变量名后增加三个点<code>（...）</code>来使mixin模块接收数量可变的参数。需要注意的是这些是三个周期的字符，而不是单一的省略号。当你使用<code>@include</code>传递参数的时候，使用逗号将参数分开。</p><p>之前的代码将被编译为：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;  </span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">1px</span> <span class="number">2px</span> <span class="number">#333</span>,  </span><br><span class="line">                <span class="number">2px</span> <span class="number">3px</span> <span class="number">4px</span> <span class="number">#ccc</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Sass将所有参数打包为一个列表，但是在此我没有列出这个列表，相关内容之后我会再做补充。</p><p>你同样可以给mixin传递可变的参数</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@mixin</span> box-shadows(<span class="variable">$shadow</span>...) &#123;  </span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="variable">$shadow</span>;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$shadows</span>: <span class="number">0px</span> <span class="number">1px</span> <span class="number">2px</span> <span class="number">#333</span>, <span class="number">2px</span> <span class="number">3px</span> <span class="number">4px</span> <span class="number">#ccc</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span> &#123;  </span><br><span class="line">    <span class="keyword">@include</span> box-shadows(<span class="variable">$shadows</span>...);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我将变量’$shadows’设置为有两种阴影的<code>list</code>，并在<code>@include</code>中将其作为参数传递。同样，你也可以将参数设置为一个<code>map</code>，并且作为参数传递。你也可以同时传递<code>list</code>和<code>map</code>，只要<code>list</code>作为第一个传递。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@include</span> box-shadows(<span class="variable">$list</span>..., <span class="variable">$map</span>...)</span><br></pre></td></tr></table></figure><h2 id="直接使用"><a href="#直接使用" class="headerlink" title="直接使用"></a>直接使用</h2><p>Mixins模块包含选择器和规则集，也就是mixins包含的内容本身就是有效的CSS样式时，他们就可以在其他规则集外被调用。比如本文之前创建的名为<code>link</code>的mixin模块：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@mixin</span> link &#123;  </span><br><span class="line">    <span class="selector-tag">a</span> &#123;  </span><br><span class="line">        <span class="attribute">color</span>: blue;</span><br><span class="line"></span><br><span class="line">        &amp;<span class="selector-pseudo">:visited</span> &#123;</span><br><span class="line">            <span class="attribute">color</span>: purple;</span><br><span class="line">        &#125;  </span><br><span class="line">        &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">            <span class="attribute">color</span>: white;</span><br><span class="line">        &#125;  </span><br><span class="line">        &amp;<span class="selector-pseudo">:active</span> &#123;</span><br><span class="line">            <span class="attribute">color</span>: red;</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后我们可以直接调用这个模块，即使不在一个选择器内。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@include</span> link;</span><br></pre></td></tr></table></figure><p>这段代码将会被解析为：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span> &#123;  </span><br><span class="line">    <span class="attribute">color</span>: blue;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:visited</span> &#123;</span><br><span class="line">        <span class="attribute">color</span>: purple;</span><br><span class="line">    &#125;  </span><br><span class="line">    &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">        <span class="attribute">color</span>: white;</span><br><span class="line">    &#125;  </span><br><span class="line">    &amp;<span class="selector-pseudo">:active</span> &#123;</span><br><span class="line">        <span class="attribute">color</span>: red;</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之所以能这样调用是因为这个mixin模块内既包含了选择器也包含了样式，如果没有选择器，那么编译后将不会有内容显示。比如我们在选择器外直接调用<code>button</code>这个mixin模块，那么将不会有东西被编译。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@mixin</span> button &#123;  </span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1em</span>;  </span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0.5em</span> <span class="number">1.0em</span>;  </span><br><span class="line">    <span class="selector-tag">text</span>-decoration: none;  </span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@include</span> button;</span><br></pre></td></tr></table></figure><p>不会被编译是因为你的样式没有被应用到任何元素上。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Scss-语法</title>
      <link href="/2023/04/19/%E5%89%8D%E7%AB%AF/css+scss/Scss-%E8%AF%AD%E6%B3%95/"/>
      <url>/2023/04/19/%E5%89%8D%E7%AB%AF/css+scss/Scss-%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="scss的语法"><a href="#scss的语法" class="headerlink" title="scss的语法"></a>scss的语法</h1><p>SCSS 是 Sass 的一种语法格式，它是 CSS 的一种扩展，可以在 CSS 中使用变量、嵌套、函数等功能，使得 CSS 更加简洁、易读、易维护。下面是 SCSS 的一些语法特点：  </p><ul><li>变量</li><li>嵌套</li><li>混合器</li><li>继承</li><li>条件语句</li></ul><h2 id="1-变量"><a href="#1-变量" class="headerlink" title="1 变量"></a>1 变量</h2><p>使用 $ 符号定义变量，例如：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$primary-<span class="attribute">color</span>: <span class="number">#007bff</span>;</span><br></pre></td></tr></table></figure><p>然后可以在代码中使用该变量，例如：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: $primary-color;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-嵌套"><a href="#2-嵌套" class="headerlink" title="2 嵌套"></a>2 嵌套</h2><p>可以使用嵌套的方式，使得代码更加清晰，例如：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">nav</span> &#123;</span><br><span class="line">  <span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">    <span class="selector-tag">li</span> &#123;</span><br><span class="line">      <span class="attribute">display</span>: inline-block;</span><br><span class="line">      <span class="selector-tag">a</span> &#123;</span><br><span class="line">        <span class="attribute">text-decoration</span>: none;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-混合器"><a href="#3-混合器" class="headerlink" title="3 混合器"></a>3 混合器</h2><p>可以使用混合器来定义一组样式，然后在代码中引用该样式，例如：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@mixin</span> <span class="built_in">border-radius</span>($radius) &#123;</span><br><span class="line">  -webkit-<span class="attribute">border-radius</span>: $radius;</span><br><span class="line">  -moz-<span class="attribute">border-radius</span>: $radius;</span><br><span class="line">  <span class="attribute">border-radius</span>: $radius;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.button &#123;</span><br><span class="line">  <span class="variable">@include</span> <span class="built_in">border-radius</span>(<span class="number">5px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4-继承"><a href="#4-继承" class="headerlink" title="4 继承"></a>4 继承</h2><p>可以使用 @extend 关键字，继承另一个选择器的样式，例如：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.error</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ff0000</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.error--important</span> &#123;</span><br><span class="line">  <span class="keyword">@extend</span> .error;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="5-条件语句"><a href="#5-条件语句" class="headerlink" title="5 条件语句"></a>5 条件语句</h2><p>可以使用条件语句，例如：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@if</span> lightness($<span class="attribute">color</span>) &gt; <span class="number">50%</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#000</span>;</span><br><span class="line">&#125; <span class="keyword">@else</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 预处理器 - scss </category>
          
      </categories>
      
      
        <tags>
            
            <tag> scss </tag>
            
            <tag> 预处理器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-父组件与子组件之间互相传值</title>
      <link href="/2023/04/19/%E5%89%8D%E7%AB%AF/vue/Vue-%E7%88%B6%E7%BB%84%E4%BB%B6%E4%B8%8E%E5%AD%90%E7%BB%84%E4%BB%B6%E4%B9%8B%E9%97%B4%E4%BA%92%E7%9B%B8%E4%BC%A0%E5%80%BC/"/>
      <url>/2023/04/19/%E5%89%8D%E7%AB%AF/vue/Vue-%E7%88%B6%E7%BB%84%E4%BB%B6%E4%B8%8E%E5%AD%90%E7%BB%84%E4%BB%B6%E4%B9%8B%E9%97%B4%E4%BA%92%E7%9B%B8%E4%BC%A0%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<h1 id="父子组件之间的传值"><a href="#父子组件之间的传值" class="headerlink" title="父子组件之间的传值"></a>父子组件之间的传值</h1><p>今天自己写东西的时候遇见了需要在vue组件之间相互传值。其实就是简单的布局。  我需要将header的收缩图标的点击事件引起的bool的变化传递给也是组件的侧边栏。<br>也就是父组件A，子组件B，C。B中的值首先传递给A，然后A传递给C。<br>这同时涉及到了父组件传值给子组件，子组件传值给父组件。  </p><h2 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h2><ul><li>vue3</li><li>ts</li></ul><h2 id="父组件传值给子组件"><a href="#父组件传值给子组件" class="headerlink" title="父组件传值给子组件"></a>父组件传值给子组件</h2><p>在vue3中不可绕过的就是setup语法糖了。我也当然是使用的爱好者。<br>下面内容分为父组件。  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ChildComponent</span> ：<span class="attr">chaildVariable</span>=<span class="string">&quot;parentVariable&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123; valueFromChild &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; defineEmits &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> parentVariable = <span class="title function_">ref</span>(<span class="string">&#x27;parentVariable_1&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br></pre></td></tr></table></figure><p>子组件代码如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> &gt;</span>get Value from Parent &#123;&#123;props.chaildVariable&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; defineProps &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> props = <span class="title function_">defineProps</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">chaildVariable</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">type</span>: <span class="title class_">String</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">required</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这种传值其实比较简单，直接通过props把值传递给子组件，只要父组件中这个值是响应式的，那样子组件也会不断的接受父组件中这个值不断的改变。</p><h2 id="子组件传值给父组件"><a href="#子组件传值给父组件" class="headerlink" title="子组件传值给父组件"></a>子组件传值给父组件</h2><p>下面内容分为父组件。  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ChildComponent</span> @<span class="attr">update:value</span>=<span class="string">&quot;handleValue&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123; valueFromChild &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; defineEmits &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> emits = <span class="title function_">defineEmits</span>([<span class="string">&#x27;update:value&#x27;</span>])</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">sendValue</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">emits</span>(<span class="string">&#x27;update:value&#x27;</span>, <span class="string">&#x27;Hello from Child&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br></pre></td></tr></table></figure><p>子组件代码如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sendValue&quot;</span>&gt;</span>Send Value to Parent<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; defineEmits &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> emits = <span class="title function_">defineEmits</span>([<span class="string">&#x27;update:value&#x27;</span>])</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">sendValue</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">emits</span>(<span class="string">&#x27;update:value&#x27;</span>, <span class="string">&#x27;Hello from Child&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>简单介绍下使用。其实父组件是监听名称为‘update：value’的变量。子组件在使用sendValue的方法的时候会把这个update：value这个变量给一个值hello from child。这样父组件就监听到了变化然后把值给记录下来。</p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
          <category> 传值 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> 传值 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>arrayA+B结合-低时间复杂度方案</title>
      <link href="/2023/04/06/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/arrayA-B%E7%BB%93%E5%90%88-%E4%BD%8E%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E6%96%B9%E6%A1%88/"/>
      <url>/2023/04/06/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/arrayA-B%E7%BB%93%E5%90%88-%E4%BD%8E%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h1 id="一个降低时间复杂度的方案"><a href="#一个降低时间复杂度的方案" class="headerlink" title="一个降低时间复杂度的方案"></a>一个降低时间复杂度的方案</h1><p>查找arrayA{id,age},ArrayB{id,name}.如何把对应的id中的B添加到A中。形成arrayA{id,age,name}。  </p><p>这个是用大量的空间复杂度换取时间复杂度的减少  </p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 临时数组对象C</span></span><br><span class="line"><span class="keyword">var</span> arrayC = &#123;&#125;</span><br><span class="line"><span class="comment">// 遍历数组B，以id的值作为数组的key，name的值作为数组的value,存放到临时数组arrayC</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arrayB.<span class="property">length</span>; i ++) &#123;</span><br><span class="line">  <span class="comment">// 为arrayC添加名称为arrayB[i].id的属性字段，值等于arrayB[i].name</span></span><br><span class="line">  arrayC[arrayB[i].<span class="property">id</span>] = arrayB[i].<span class="property">name</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 遍历数组A，以name作为key，arrayC中对应当前id的key的值作为value</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arrayA.<span class="property">length</span>; i ++) &#123;</span><br><span class="line">  <span class="comment">//为arrayA[i]添加名称为name的属性字段，值等于arrayC[arrayA[i].id]</span></span><br><span class="line">  arrayA[i][<span class="string">&#x27;name&#x27;</span>] = arrayC[arrayA[i].<span class="property">id</span>]<span class="comment">//降低的关键就是在这里，认为array是个数组。第多少个就是可以通过固定空间的读取去实现。而不是遍历arrayC的内容。</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 时间复杂度 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 时间复杂度 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-开发规范</title>
      <link href="/2023/04/06/%E5%89%8D%E7%AB%AF/vue/Vue-%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/"/>
      <url>/2023/04/06/%E5%89%8D%E7%AB%AF/vue/Vue-%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue开发规范"><a href="#Vue开发规范" class="headerlink" title="Vue开发规范"></a>Vue开发规范</h1><ul><li><p>&#x2F;dist——打包之后的文件夹，此文件夹被发布到真正的服务器上，项目完成之后，执行npm run build会形成此文件夹</p></li><li><p>&#x2F;public——此目录下的文件并不会被Webpack处理，它们会直接被复制到最终的打包目录，即&#x2F;dist下，此文件夹里存放一些不会变动的文件，比如项目运行在浏览器时显示的小图标</p></li><li><p>&#x2F;node_modules——保存npm加载的项目依赖模块，即第三方包所存放的目录，使用npm install可以下载</p></li><li><p>&#x2F;src——存放源代码</p><ul><li>&#x2F;src&#x2F;api——接口文件目录，即连接服务器接口时所写代码的存放目录</li><li>&#x2F;src&#x2F;assets——存放项目所包含的图片以及css样式，为了结构更加清晰，通常又创建img文件夹和css文件夹，分别来存放图片和样式</li><li>&#x2F;src&#x2F;components——公共组件目录，存放项目里所包含的公共组件</li><li>&#x2F;src&#x2F;router——路由文件，在&#x2F;src&#x2F;router文件夹里创建router.js文件，设置路由映射关系</li><li>&#x2F;src&#x2F;store——VueX所存放的目录，用来定义全局数据</li><li>&#x2F;src&#x2F;utils——公共函数文件目录，用来保存一些js文件</li><li>&#x2F;src&#x2F;views——视图组件，包含项目里所包含的一些详细的组件，但又不是公用的组件</li></ul></li><li><p>main.js——入口文件，初始化vue实例并使用需要的插件</p></li><li><p>App.vue——主组件，所有页面都是在App.vue下进行切换的</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
          <category> 开发规范 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> 开发规范 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-图片放大</title>
      <link href="/2023/04/06/%E5%89%8D%E7%AB%AF/vue/Vue-%E5%9B%BE%E7%89%87%E6%94%BE%E5%A4%A7/"/>
      <url>/2023/04/06/%E5%89%8D%E7%AB%AF/vue/Vue-%E5%9B%BE%E7%89%87%E6%94%BE%E5%A4%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue添加图片放大功能-手动轮播图"><a href="#Vue添加图片放大功能-手动轮播图" class="headerlink" title="Vue添加图片放大功能+手动轮播图"></a>Vue添加图片放大功能+手动轮播图</h1><p>有一个点击图片，图片放大的功能需要实现。  </p><h2 id="基本思路"><a href="#基本思路" class="headerlink" title="基本思路"></a>基本思路</h2><p>通过查询有一个viview的插件可以实现这个功能。  </p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install v-viewer --save</span><br></pre></td></tr></table></figure><h3 id="配置-采用全局引用的方案。"><a href="#配置-采用全局引用的方案。" class="headerlink" title="配置-采用全局引用的方案。"></a>配置-采用全局引用的方案。</h3><p>在main.ts中添加以下配置</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;viewerjs/dist/viewer.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VueViewer</span> <span class="keyword">from</span> <span class="string">&#x27;v-viewer&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title class_">VueViewer</span>,&#123;</span><br><span class="line">    <span class="attr">defaultOptions</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;inline&#x27;</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="string">&#x27;button&#x27;</span>: <span class="literal">true</span>, <span class="comment">//右上角按钮</span></span><br><span class="line">      <span class="string">&quot;navbar&quot;</span>: <span class="literal">true</span>, <span class="comment">//底部缩略图</span></span><br><span class="line">      <span class="string">&quot;title&quot;</span>: <span class="literal">false</span>, <span class="comment">//当前图片标题</span></span><br><span class="line">      <span class="string">&quot;toolbar&quot;</span>: <span class="literal">true</span>, <span class="comment">//底部工具栏</span></span><br><span class="line">      <span class="string">&quot;tooltip&quot;</span>: <span class="literal">true</span>, <span class="comment">//显示缩放百分比</span></span><br><span class="line">      <span class="string">&quot;movable&quot;</span>: <span class="literal">true</span>, <span class="comment">//是否可以移动</span></span><br><span class="line">      <span class="string">&quot;zoomable&quot;</span>: <span class="literal">true</span>, <span class="comment">//是否可以缩放</span></span><br><span class="line">      <span class="string">&quot;rotatable&quot;</span>: <span class="literal">true</span>, <span class="comment">//是否可旋转</span></span><br><span class="line">      <span class="string">&quot;scalable&quot;</span>: <span class="literal">false</span>, <span class="comment">//是否可翻转</span></span><br><span class="line">      <span class="string">&quot;transition&quot;</span>: <span class="literal">true</span>, <span class="comment">//使用 CSS3 过度</span></span><br><span class="line">      <span class="string">&quot;fullscreen&quot;</span>: <span class="literal">false</span>, <span class="comment">//播放时是否全屏</span></span><br><span class="line">      <span class="string">&quot;keyboard&quot;</span>: <span class="literal">true</span>, <span class="comment">//是否支持键盘</span></span><br><span class="line">    <span class="comment">//   &quot;url&quot;: &quot;data-source&quot;,</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>tip:如果不把url注释会有错误，不产生效果</p></blockquote><h3 id="界面中使用"><a href="#界面中使用" class="headerlink" title="界面中使用"></a>界面中使用</h3><p>由于采用全局配置的方案，所以可以直接使用.<br>此处使用多个照片体现效果  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">viewer</span> <span class="attr">:images</span>=<span class="string">&quot;images&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in images&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;imgIndex === index&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item&quot;</span> <span class="attr">:src</span>=<span class="string">&quot;item&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">viewer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> images = [<span class="string">&#x27;/testPicture/image.png&#x27;</span>, <span class="string">&#x27;/testPicture/image2.png&#x27;</span>, <span class="string">&#x27;/testPicture/image3.png&#x27;</span>, <span class="string">&#x27;/testPicture/image4.png&#x27;</span>, <span class="string">&#x27;/testPicture/image5.png&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>下面是搭配手动轮播图  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position: relative;height:400px;width:400px;display:inline-block;margin-left: 30px;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">viewer</span> <span class="attr">:images</span>=<span class="string">&quot;images&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in images&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;imgIndex === index&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item&quot;</span> <span class="attr">:src</span>=<span class="string">&quot;item&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">viewer</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;display: relative;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;changePage(prevIndex)&quot;</span> <span class="attr">style</span>=<span class="string">&quot;font-size:30px;color: white;&quot;</span>&gt;</span>&amp;lt<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;display: relative;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;changePage(prevIndex)&quot;</span> <span class="attr">style</span>=<span class="string">&quot;font-size:30px;color: white;&quot;</span>&gt;</span>&amp;gt<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> images = [<span class="string">&#x27;/testPicture/image.png&#x27;</span>, <span class="string">&#x27;/testPicture/image2.png&#x27;</span>, <span class="string">&#x27;/testPicture/image3.png&#x27;</span>, <span class="string">&#x27;/testPicture/image4.png&#x27;</span>, <span class="string">&#x27;/testPicture/image5.png&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">changePage</span>(<span class="params">index: number</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    imgIndex.<span class="property">value</span> = index;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> imgIndex = <span class="title function_">ref</span>(<span class="number">0</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> prevIndex = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (imgIndex.<span class="property">value</span> == <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> images.<span class="property">length</span> - <span class="number">1</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> imgIndex.<span class="property">value</span> - <span class="number">1</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">)</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> nextIndex = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (imgIndex.<span class="property">value</span> == images.<span class="property">length</span> - <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> imgIndex.<span class="property">value</span> + <span class="number">1</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.left</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* position: relative; */</span></span></span><br><span class="line"><span class="language-css">    <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">top</span>: <span class="number">40%</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">opacity</span>: <span class="number">0.2</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* z-index: 2000; */</span></span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: <span class="number">#474447</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.left</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.right</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">float</span>: right;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">top</span>: <span class="number">40%</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">opacity</span>: <span class="number">0.2</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* z-index: 2000; */</span></span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: <span class="number">#474447</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.right</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://www.jianshu.com/p/1fd3b4e6911c">参考资料</a></p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
          <category> viview </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> viview </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-添加端口访问</title>
      <link href="/2023/04/06/%E5%89%8D%E7%AB%AF/vue/Vue-%E6%B7%BB%E5%8A%A0%E7%AB%AF%E5%8F%A3%E8%AE%BF%E9%97%AE/"/>
      <url>/2023/04/06/%E5%89%8D%E7%AB%AF/vue/Vue-%E6%B7%BB%E5%8A%A0%E7%AB%AF%E5%8F%A3%E8%AE%BF%E9%97%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue添加端口访问"><a href="#Vue添加端口访问" class="headerlink" title="Vue添加端口访问"></a>Vue添加端口访问</h1><p>正常情况下，vue+vite是通过localhost进行访问。<br>但是在一起开发的时候我们希望它是能够通过外部ip进行访问相关的数据。<br>下面是如何实现。  </p><h2 id="基本环境"><a href="#基本环境" class="headerlink" title="基本环境"></a>基本环境</h2><p>vue3+vite+ts</p><h2 id="基本步骤"><a href="#基本步骤" class="headerlink" title="基本步骤"></a>基本步骤</h2><p>steps：</p><ul><li>设置ip端口</li><li>如果启动https需要添加伪装的ssh</li></ul><h3 id="step1：设置端口"><a href="#step1：设置端口" class="headerlink" title="step1：设置端口"></a>step1：设置端口</h3><p>在vite.config.ts中添加相关内容</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">    <span class="attr">server</span>:&#123;</span><br><span class="line">      <span class="attr">host</span>: <span class="string">&#x27;0.0.0.0&#x27;</span>,</span><br><span class="line">      <span class="attr">port</span>: <span class="number">5173</span>,</span><br><span class="line">      <span class="comment">// 是否开启 https</span></span><br><span class="line">    <span class="attr">https</span>: <span class="literal">true</span>,</span><br><span class="line">   &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="step2：安装插件并布置"><a href="#step2：安装插件并布置" class="headerlink" title="step2：安装插件并布置"></a>step2：安装插件并布置</h3><p>vite升级之后，如果你默认用了https，那么最后npm run dev之后，网页是打不开的。<br>有个报错：配置ssl使用了不受支持的协议。 ERR_SSL_VERSION_OR_CIPHER_MISMATCH。<br>就是说，使用了https，但是没有签名。搞这个签名，也麻烦。<br>所以，vite官方提供了一个插件，可以模拟一个签名，使得我们本地开发顺利进行。  </p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -D @vitejs/plugin-basic-ssl</span><br></pre></td></tr></table></figure><p> 最后在vite.config.ts中使用：<br> <figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// vite.config.js</span></span><br><span class="line"><span class="keyword">import</span> basicSsl <span class="keyword">from</span> <span class="string">&#x27;@vitejs/plugin-basic-ssl&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="title function_">basicSsl</span>()</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br> 最后重启npm run dev<br> <a href="https://blog.csdn.net/jmszl1991/article/details/124173690">参考资料</a></p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
          <category> IP访问 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> ip访问 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo上传提示timeout</title>
      <link href="/2023/04/05/hexo/hexo%E4%B8%8A%E4%BC%A0%E6%8F%90%E7%A4%BAtimeout/"/>
      <url>/2023/04/05/hexo/hexo%E4%B8%8A%E4%BC%A0%E6%8F%90%E7%A4%BAtimeout/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo上传提示time-out"><a href="#hexo上传提示time-out" class="headerlink" title="hexo上传提示time out"></a>hexo上传提示time out</h1><h2 id="问题提示"><a href="#问题提示" class="headerlink" title="问题提示"></a>问题提示</h2><p> 今天在连接github仓库时遇到了一个报错：  Failed to connect to github.com port 443 after 21098 ms: Timed out（译为：21098 毫秒后无法连接到 github.com 端口 443：超时）。</p><h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><p>环境就是git，之前可以正常链接，但是这次上传博客的时候发现上传失败，重新生成并没有解决对应的问题。<br>原因： 这样的问题往往是由于网络慢访问超时，这时候我们可以在终端选择使用设置代理和取消代理的命令解决。  </p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global https.proxy</span><br></pre></td></tr></table></figure><h3 id="取消设置代理"><a href="#取消设置代理" class="headerlink" title="取消设置代理"></a>取消设置代理</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global --unset https.proxy</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>其实这应该是git的抽风吧。具体触发的原因不详。期待以后的信息。</p>]]></content>
      
      
      <categories>
          
          <category> 知错就改 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 知错就改 </tag>
            
            <tag> time out </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>背景动态线条</title>
      <link href="/2023/04/03/%E5%89%8D%E7%AB%AF/%E8%83%8C%E6%99%AF%E5%8A%A8%E6%80%81%E7%BA%BF%E6%9D%A1/"/>
      <url>/2023/04/03/%E5%89%8D%E7%AB%AF/%E8%83%8C%E6%99%AF%E5%8A%A8%E6%80%81%E7%BA%BF%E6%9D%A1/</url>
      
        <content type="html"><![CDATA[<!-- 背景动态线条-->  <!--  <script src="https://cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"></script> --><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">D:\<span class="title">myblog</span>\<span class="title">themes</span>\<span class="title">hexo</span>-<span class="title">theme</span>-<span class="title">matery</span>\<span class="title">layout</span>\<span class="title">layout.ejs</span></span></span><br><span class="line"><span class="function">//中间添加</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo结构介绍</title>
      <link href="/2023/04/03/hexo/hexo%E7%BB%93%E6%9E%84%E4%BB%8B%E7%BB%8D/"/>
      <url>/2023/04/03/hexo/hexo%E7%BB%93%E6%9E%84%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo目录结构介绍"><a href="#hexo目录结构介绍" class="headerlink" title="hexo目录结构介绍"></a>hexo目录结构介绍</h1><p>我们博客的目录结构如下：</p><h2 id="1-1基本结构"><a href="#1-1基本结构" class="headerlink" title="1.1基本结构"></a>1.1基本结构</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">- node_modules</span><br><span class="line">- public</span><br><span class="line">- scaffolds</span><br><span class="line">- source</span><br><span class="line">    - _data</span><br><span class="line">    - _posts</span><br><span class="line">    - about</span><br><span class="line">    - archives</span><br><span class="line">    - categories</span><br><span class="line">    - friends</span><br><span class="line">    - tags</span><br><span class="line">- themes</span><br></pre></td></tr></table></figure><p>node_modules是node.js各种库的目录，<br>public是生成的网页文件目录，<br>scaffolds里面就三个文件，存储着新文章和新页面的初始设置，<br>source是我们最常用到的一个目录，里面存放着文章、各类页面、图像等文件，<br>themes存放着主题文件，一般也用不到。  </p><h2 id="1-2-hexo基本配置"><a href="#1-2-hexo基本配置" class="headerlink" title="1.2 hexo基本配置"></a>1.2 hexo基本配置</h2><p>在文件根目录下的_config.yml，就是整个hexo框架的配置文件了。可以在里面修改大部分的配置。详细可参考官方的<a href="https://hexo.io/zh-cn/docs/configuration">配置描述</a>。</p><h3 id="1-2-1-网站"><a href="#1-2-1-网站" class="headerlink" title="1.2.1 网站"></a>1.2.1 网站</h3><table><thead><tr><th align="center">参数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">title</td><td align="center">网站标题</td></tr><tr><td align="center">subtitle</td><td align="center">subtitle</td></tr><tr><td align="center">description</td><td align="center">网站描述</td></tr><tr><td align="center">keywords</td><td align="center">网站的关键词。支持多个关键词。</td></tr><tr><td align="center">author</td><td align="center">您的名字</td></tr><tr><td align="center">language</td><td align="center">网站使用的语言。对于简体中文用户来说，使用不同的主题可能需要设置成不同的值，请参考你的主题的文档自行设置，常见的有 zh-Hans和 zh-CN。</td></tr><tr><td align="center">timezone</td><td align="center">网站时区。Hexo 默认使用您电脑的时区。请参考 时区列表 进行设置，如 America&#x2F;New_York, Japan, 和 UTC 。一般的，对于中国大陆地区可以使用 Asia&#x2F;Shanghai。</td></tr></tbody></table><p>其中，description主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。author参数用于主题显示文章的作者。</p><h3 id="1-2-2-layout（布局）"><a href="#1-2-2-layout（布局）" class="headerlink" title="1.2.2 layout（布局）"></a>1.2.2 layout（布局）</h3><p>一共三种布局post,page,draft</p><h4 id="1-2-4-1-post"><a href="#1-2-4-1-post" class="headerlink" title="1.2.4.1 post"></a>1.2.4.1 post</h4><p>默认使用的创建文章的方案就是post方案。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new 文章名称</span><br><span class="line">//等价于</span><br><span class="line">hexo new [layout] &lt;<span class="built_in">title</span>&gt;</span><br></pre></td></tr></table></figure><h4 id="1-2-4-2-page"><a href="#1-2-4-2-page" class="headerlink" title="1.2.4.2 page"></a>1.2.4.2 page</h4><p>如果你想另起一页，那么可以使用</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new page newpage</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>系统会自动给你在source文件夹下创建一个newpage文件夹，以及newpage文件夹中的index.md，这样你访问的newpage对应的链接就是<a href="http://xxx.xxx/newpage">http://xxx.xxx/newpage</a></p><h4 id="1-2-4-3-draft"><a href="#1-2-4-3-draft" class="headerlink" title="1.2.4.3 draft"></a>1.2.4.3 draft</h4><p>draft是草稿的意思，也就是你如果想写文章，又不希望被看到，那么可以</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new draft newdraft</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这样会在source/_draft中新建一个newdraft.md文件，如果你的草稿文件写的过程中，想要预览一下，那么可以使用</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo server --draft</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在本地端口中开启服务预览。  </p><p>如果你的草稿文件写完了，想要发表到post中，  </p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo publish draft newdraft</span><br></pre></td></tr></table></figure><p>就会自动把newdraft.md发送到post中。</p><h3 id="themes主题"><a href="#themes主题" class="headerlink" title="themes主题"></a>themes主题</h3><p>我们在了解Hexo博客文件基础之后，知道主题文件就放在themes文件下，那么我们就可以去Hexo官网下载喜欢的主题，复制进去然后修改参数即可。<br>网上大多数主题都是github排名第一的Next主题，但是我个人不是很喜欢，我在网上看到一个主题感觉还不错：hexo-theme-matery，地址在传送门。这个主题看着比较漂亮，并且响应式比较友好，点起来很舒服，功能也比较很多。</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-跨页面传递参数</title>
      <link href="/2023/04/03/%E5%89%8D%E7%AB%AF/vue/Vue-%E8%B7%A8%E9%A1%B5%E9%9D%A2%E4%BC%A0%E9%80%92%E5%8F%82%E6%95%B0/"/>
      <url>/2023/04/03/%E5%89%8D%E7%AB%AF/vue/Vue-%E8%B7%A8%E9%A1%B5%E9%9D%A2%E4%BC%A0%E9%80%92%E5%8F%82%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p>Vue 跨页面传递参数</p><h1 id="跨页面传递参数"><a href="#跨页面传递参数" class="headerlink" title="跨页面传递参数"></a>跨页面传递参数</h1><p>这里主要讲两种传参方案</p><ul><li>params</li><li>query<figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 传参</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;home&#x27;</span>,</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">        <span class="attr">message</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">data</span>: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 或</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">    <span class="attr">path</span>:<span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line">    <span class="attr">query</span>: &#123;</span><br><span class="line">        <span class="attr">message</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">data</span>: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">// 接参</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">params</span>.<span class="property">message</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">query</span>.<span class="property">message</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>Tips:</p><ul><li>传参是this.$router，接收参数是this.$route</li><li>由于动态路由也是传递params的，所以在 this.$router.push() 方法中path不能和params一起使用，否则params将无效，接收参数页面会是undefined，需要用name来指定页面，也就是说，用query对应path（填写路径 &#x2F;home），用params对应name（写路由js中对应的name，而不是路径），这个存疑，可以使用</li><li>接收数据必须在页面加载完成后，也就是在mounted接收，而不是created。</li></ul></blockquote><p><a herf="https://blog.csdn.net/mahaokun/article/details/121158787" title="参考文章"/>参考文章</a></p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
          <category> 传参 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> 传参 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-table中一列处理多列数据</title>
      <link href="/2023/04/03/%E5%89%8D%E7%AB%AF/vue/Vue-table%E4%B8%AD%E4%B8%80%E5%88%97%E5%A4%84%E7%90%86%E5%A4%9A%E5%88%97%E6%95%B0%E6%8D%AE/"/>
      <url>/2023/04/03/%E5%89%8D%E7%AB%AF/vue/Vue-table%E4%B8%AD%E4%B8%80%E5%88%97%E5%A4%84%E7%90%86%E5%A4%9A%E5%88%97%E6%95%B0%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue-table中某一列处理多条信息"><a href="#Vue-table中某一列处理多条信息" class="headerlink" title="Vue table中某一列处理多条信息"></a>Vue table中某一列处理多条信息</h1><h2 id="有的时候table显示的内容中某一列是多列的拼接或这计算。比如table如下-x-y-x-y-x-y-—-—-—-—-2-3-5-6"><a href="#有的时候table显示的内容中某一列是多列的拼接或这计算。比如table如下-x-y-x-y-x-y-—-—-—-—-2-3-5-6" class="headerlink" title="有的时候table显示的内容中某一列是多列的拼接或这计算。比如table如下|x|y|x+y|x*y||—|—|—|—||2|3|5|6|"></a>有的时候table显示的内容中某一列是多列的拼接或这计算。<br>比如table如下<br>|x|y|x+y|x*y|<br>|—|—|—|—|<br>|2|3|5|6|</h2><h2 id="原理解释"><a href="#原理解释" class="headerlink" title="原理解释"></a>原理解释</h2><p>一列绑定多列数据，然后对于数据进行操作</p><h2 id="代码表达"><a href="#代码表达" class="headerlink" title="代码表达"></a>代码表达</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;HeartBeat&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;heartBeatDbNumNum,heartBeatShift,heartBeatLength&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> #<span class="attr">default</span>=<span class="string">&quot;scope&quot;</span>&gt;</span></span><br><span class="line">&#123;&#123;scope.row.heartBeatDbNum&#125;&#125;|&#123;&#123;scope.row.heartBeatShift&#125;&#125;|&#123;&#123; scope.row.heartBeatLength &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a herf="https://blog.csdn.net/weixin_51444308/article/details/127174476" >参考文章</a></p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
          <category> table </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> table </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-使用g6</title>
      <link href="/2023/04/03/%E5%89%8D%E7%AB%AF/vue/Vue-%E4%BD%BF%E7%94%A8g6/"/>
      <url>/2023/04/03/%E5%89%8D%E7%AB%AF/vue/Vue-%E4%BD%BF%E7%94%A8g6/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue中使用g6"><a href="#Vue中使用g6" class="headerlink" title="Vue中使用g6"></a>Vue中使用g6</h1><p>安装从网上寻找</p><blockquote><p>tips：图像的绘制需要在dom已经加载后才可以进行。即setup时会报错</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;height:100%;width: 100%;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-dialog</span> <span class="attr">v-model</span>=<span class="string">&quot;dialogVisible&quot;</span> @<span class="attr">close</span>=<span class="string">&quot;bgCancel()&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Add Process Route&quot;</span> <span class="attr">width</span>=<span class="string">&quot;30%&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">id</span>=<span class="string">&quot;myform&quot;</span> <span class="attr">:model</span>=<span class="string">&quot;form&quot;</span> <span class="attr">label-width</span>=<span class="string">&quot;120px&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;Activity zone&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-select</span> <span class="attr">v-model</span>=<span class="string">&quot;form.id&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;please select your station&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">v-for</span>=<span class="string">&quot;item in stationOptions&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.stations&quot;</span> <span class="attr">:value</span>=<span class="string">&quot;item.stations&quot;</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;Activity name&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;form.name&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;calagory&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-radio-group</span> <span class="attr">v-model</span>=<span class="string">&quot;form.calagory&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">label</span>=<span class="string">&quot;1&quot;</span>&gt;</span>only storage<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">label</span>=<span class="string">&quot;check and storage&quot;</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">el-radio-group</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;storageChart&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">&quot;form.storageChart&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;plcname&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;plcName&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">template</span> #<span class="attr">default</span>=<span class="string">&quot;scope&quot;</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">el-select</span> <span class="attr">v-model</span>=<span class="string">&quot;form.storageChart[scope.$index].plcName&quot;</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">v-for</span>=<span class="string">&quot;item in typeOptions&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.types&quot;</span></span></span><br><span class="line"><span class="tag">                                            <span class="attr">:value</span>=<span class="string">&quot;item.types&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;plcname&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;min&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">template</span> #<span class="attr">default</span>=<span class="string">&quot;scope&quot;</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;form.storageChart[scope.$index].min&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;plcname&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;length&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">template</span> #<span class="attr">default</span>=<span class="string">&quot;scope&quot;</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;form.storageChart[scope.$index].length&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;plcname&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;length&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;Action&quot;</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 280px;&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">template</span> #<span class="attr">default</span>=<span class="string">&quot;scope&quot;</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">el-button-group</span> <span class="attr">style</span>=<span class="string">&quot;width:180px;&quot;</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;Share&quot;</span></span></span><br><span class="line"><span class="tag">                                            @<span class="attr">click</span>=<span class="string">&quot;plcInfoAdd(scope.$index, scope.row)&quot;</span> /&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;Delete&quot;</span></span></span><br><span class="line"><span class="tag">                                            @<span class="attr">click</span>=<span class="string">&quot;plcInfoDelete(scope.$index, scope.row)&quot;</span> /&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;/<span class="name">el-button-group</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;plcInfoImportBtn&quot;</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;plcInfoImport()&quot;</span> <span class="attr">accept</span>=<span class="string">&quot;text/csv&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">template</span> #<span class="attr">footer</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;dialog-footer&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;dialogVisible = false; dialogCancel()&quot;</span>&gt;</span>Cancel<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;dialogVisible = false; dialogConfirm(form)&quot;</span>&gt;</span></span><br><span class="line">                            Confirm</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;routeContioner&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;padding:20px 30px 10px 30px&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;&#123; id &#125;&#125; Edit<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;g6Canvas&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;mountNode&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: aliceblue;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;routeTable&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;display:block;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">&quot;tableData&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;id&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;id&quot;</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;Name&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;name&quot;</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;calagory&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;calagory&quot;</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;storageChart&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;storageChart&quot;</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 280px;&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">template</span> #<span class="attr">header</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;dialogVisible = true; tableAdd()&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;Share&quot;</span>&gt;</span>Add</span><br><span class="line">                                    item<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">template</span> #<span class="attr">default</span>=<span class="string">&quot;scope&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">el-button-group</span> <span class="attr">style</span>=<span class="string">&quot;width:180px;&quot;</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;Edit&quot;</span> /&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;Share&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;tabletest(scope.$index, scope.row)&quot;</span> /&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;Delete&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;tableDelete(scope.$index, scope.row)&quot;</span> /&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">el-button-group</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;routesAction&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;routerSubmit()&quot;</span>&gt;</span>submit<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;routerCancel()&quot;</span>&gt;</span>cancel<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;infoDescription&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-descriptions</span> <span class="attr">title</span>=<span class="string">&quot;Produc Information&quot;</span> <span class="attr">:column</span>=<span class="string">&quot;1&quot;</span> <span class="attr">border</span> <span class="attr">v-model</span>=<span class="string">&quot;infoDes&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-descriptions-item</span> <span class="attr">label</span>=<span class="string">&quot;Process id&quot;</span> <span class="attr">label-align</span>=<span class="string">&quot;right&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">label-class-name</span>=<span class="string">&quot;productLabel&quot;</span> <span class="attr">class-name</span>=<span class="string">&quot;my-content&quot;</span> <span class="attr">width</span>=<span class="string">&quot;150px&quot;</span>&gt;</span>&#123;&#123; infoDes.id</span><br><span class="line">                            &#125;&#125;<span class="tag">&lt;/<span class="name">el-descriptions-item</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-descriptions-item</span> <span class="attr">label</span>=<span class="string">&quot;Product family&quot;</span> <span class="attr">label-align</span>=<span class="string">&quot;right&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span>&#123;&#123; infoDes.name</span><br><span class="line">                        &#125;&#125;<span class="tag">&lt;/<span class="name">el-descriptions-item</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-descriptions-item</span> <span class="attr">label</span>=<span class="string">&quot;Product recipe&quot;</span> <span class="attr">label-align</span>=<span class="string">&quot;right&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span>&#123;&#123; infoDes.calagory</span><br><span class="line">                        &#125;&#125;<span class="tag">&lt;/<span class="name">el-descriptions-item</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-descriptions-item</span> <span class="attr">label</span>=<span class="string">&quot;infos&quot;</span> <span class="attr">label-align</span>=<span class="string">&quot;right&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">&quot;infoDes.storageChart&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;plcname&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;plcName&quot;</span> /&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;plcname&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;min&quot;</span> /&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;plcname&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;length&quot;</span> /&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!-- &lt;el-tag size=&quot;small&quot;&gt;&#123;&#123; infoDes.storageChart &#125;&#125;&lt;/el-tag&gt; --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">el-descriptions-item</span>&gt;</span></span><br><span class="line">                        &gt;</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-descriptions</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;Edit&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;&quot;</span>&gt;</span>More Logs<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;Edit&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;&quot;</span>&gt;</span>Rework<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; computed, ref, reactive &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">ArrowLeft</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">ArrowRight</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Delete</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Edit</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Share</span>,</span></span><br><span class="line"><span class="language-javascript">&#125; <span class="keyword">from</span> <span class="string">&#x27;@element-plus/icons-vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; type <span class="title class_">FormInstance</span>, <span class="title class_">ElMessage</span>, <span class="title class_">ElMessageBox</span>, genFileId &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> type &#123; <span class="title class_">UploadInstance</span>, <span class="title class_">UploadProps</span>, <span class="title class_">UploadRawFile</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;@/router&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; useRoute &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;../../request/request&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; method &#125; <span class="keyword">from</span> <span class="string">&#x27;lodash&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="variable constant_">G6</span>, &#123; <span class="title class_">Graph</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@antv/g6&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; onMounted &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; number2color &#125; <span class="keyword">from</span> <span class="string">&#x27;@antv/util&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="comment">//&lt;--------------获取id--------&gt;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> id = <span class="title function_">ref</span>()</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">getId</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> route = <span class="title function_">useRoute</span>();</span></span><br><span class="line"><span class="language-javascript">    id = <span class="title function_">ref</span>(route.<span class="property">query</span>.<span class="property">name1</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;name:&quot;</span> + route.<span class="property">query</span>.<span class="property">name1</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;id:&quot;</span> + id.<span class="property">value</span>);</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="title function_">getId</span>()</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">interface <span class="title class_">Recipe</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">id</span>:number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">date</span>: string</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: string</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">remark</span>: string</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">stations</span>: station[]</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">interface station&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">id</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: string</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">plc</span>: string</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> <span class="attr">localRecipe</span>:<span class="title class_">Recipe</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">GetRecipe</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    localRecipe=<span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;recipe&quot;</span>)||<span class="string">&quot;&quot;</span>) </span></span><br><span class="line"><span class="language-javascript">    id.<span class="property">value</span>=localRecipe.<span class="property">name</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//&lt;-----------Router Actions------&gt;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">routerSubmit</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// request.post(</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//    &#x27;/recipe/edit/submit&#x27;,</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//     tableData</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// ).then(res=&gt;&#123;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//     router.push(&#x27;Process_Route&#x27;)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// &#125;,(error)=&gt;&#123;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//     console.log(&quot;submit fail&quot;);</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// &#125;)</span></span></span><br><span class="line"><span class="language-javascript">    router.<span class="title function_">push</span>(<span class="string">&#x27;Process_Route&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">routerCancel</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    router.<span class="title function_">push</span>(<span class="string">&#x27;Process_Route&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//&lt;-----------添加新的station------&gt;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> infoDes = <span class="title function_">ref</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">id</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">calagory</span>: <span class="string">&#x27;only&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">storageChart</span>: [&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">plcName</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">min</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">length</span>: <span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">    &#125;]</span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"><span class="comment">// do not use same name with ref</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> form = <span class="title function_">ref</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">id</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">calagory</span>: <span class="string">&#x27;only&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">storageChart</span>: [&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">plcName</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">min</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">length</span>: <span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">    &#125;]</span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">dialogCancel</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;two methods is ok&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="comment">//获取所有的staions，用于新增站点</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">getStations</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;stations&quot;</span>) === <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        request.<span class="title function_">post</span>(<span class="string">&quot;/routeEdit&quot;</span>, id).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            stationOptions = res.<span class="property">data</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&quot;stations&quot;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(res.<span class="property">data</span>))</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        stationOptions = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;stations&quot;</span>) || <span class="string">&#x27;&#123;&#125;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> stationOptions = <span class="title function_">ref</span>([&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">stations</span>: <span class="string">&#x27;station1&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">&#125;, &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">stations</span>: <span class="string">&#x27;station2&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">&#125;, &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">stations</span>: <span class="string">&#x27;station3&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">&#125;, &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">stations</span>: <span class="string">&#x27;station4&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">&#125;, &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">stations</span>: <span class="string">&#x27;station5&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">&#125;, &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">stations</span>: <span class="string">&#x27;station6&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">&#125;,</span></span><br><span class="line"><span class="language-javascript">])</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> typeOptions = <span class="title function_">ref</span>([&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">types</span>: <span class="string">&#x27;int&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">&#125;, &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">types</span>: <span class="string">&#x27;float&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">&#125;, &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">types</span>: <span class="string">&#x27;byte&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">&#125;, &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">types</span>: <span class="string">&#x27;string&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">&#125;, &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">types</span>: <span class="string">&#x27;station5&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">&#125;, &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">types</span>: <span class="string">&#x27;station6&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">&#125;,</span></span><br><span class="line"><span class="language-javascript">])</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> dialogVisible = <span class="title function_">ref</span>(<span class="literal">false</span>)</span></span><br><span class="line"><span class="language-javascript">interface <span class="title class_">User</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">date</span>: string</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: string</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">address</span>: string</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">tabletest</span> = (<span class="params">index: number, row: User</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    tableData.<span class="title function_">splice</span>(index + <span class="number">1</span>, <span class="number">0</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">name</span>: <span class="string">&#x27;test&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">id</span>: <span class="string">&#x27;a-1&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">calagory</span>: <span class="string">&#x27;only&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">storageChart</span>: [&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">plcName</span>: <span class="string">&#x27;plc1&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">min</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">length</span>: <span class="number">2</span></span></span><br><span class="line"><span class="language-javascript">        &#125;, &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">plcName</span>: <span class="string">&#x27;plc2&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">min</span>: <span class="number">2</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">length</span>: <span class="number">3</span></span></span><br><span class="line"><span class="language-javascript">        &#125;]</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">plcInfoAdd</span> = (<span class="params">index: number, row: User</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    form.<span class="property">value</span>.<span class="property">storageChart</span>.<span class="title function_">splice</span>(index + <span class="number">1</span>, <span class="number">0</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">plcName</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">min</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">length</span>: <span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">plcInfoDelete</span> = (<span class="params">index: number, row: User</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    form.<span class="property">value</span>.<span class="property">storageChart</span>.<span class="title function_">splice</span>(index, <span class="number">1</span>)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> upload = ref&lt;<span class="title class_">UploadInstance</span>&gt;()</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="attr">handleExceed</span>: <span class="title class_">UploadProps</span>[<span class="string">&#x27;onExceed&#x27;</span>] = <span class="function">(<span class="params">files</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    upload.<span class="property">value</span>!.<span class="title function_">clearFiles</span>()</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> file = files[<span class="number">0</span>] <span class="keyword">as</span> <span class="title class_">UploadRawFile</span></span></span><br><span class="line"><span class="language-javascript">    file.<span class="property">uid</span> = <span class="title function_">genFileId</span>()</span></span><br><span class="line"><span class="language-javascript">    upload.<span class="property">value</span>!.<span class="title function_">handleStart</span>(file)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">submitUpload</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    upload.<span class="property">value</span>!.<span class="title function_">submit</span>()</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">plcInfoImport</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> file1 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;plcInfoImportBtn&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    file1!.<span class="property">onchange</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> file = (&lt;<span class="title class_">HTMLInputElement</span>&gt;file1).<span class="property">files</span>![<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//读取为二进制</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> reader = <span class="keyword">new</span> <span class="title class_">FileReader</span>();</span></span><br><span class="line"><span class="language-javascript">        reader.<span class="title function_">readAsText</span>(file, <span class="string">&#x27;utf-8&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        reader.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> str = reader.<span class="property">result</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (str == <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;读取未空&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> rows = (&lt;string&gt;str)!.<span class="title function_">split</span>(<span class="string">&#x27;\n&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> clients = [];</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; rows.<span class="property">length</span> - <span class="number">1</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> row = rows[i].<span class="title function_">split</span>(<span class="string">&#x27;,&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> client = &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">plcName</span>: row[<span class="number">0</span>],</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">min</span>: <span class="title class_">Number</span>.<span class="built_in">parseInt</span>(row[<span class="number">1</span>]),</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">length</span>: <span class="title class_">Number</span>.<span class="built_in">parseInt</span>(row[<span class="number">2</span>]),</span></span><br><span class="line"><span class="language-javascript">                &#125;;</span></span><br><span class="line"><span class="language-javascript">                form.<span class="property">value</span>.<span class="property">storageChart</span>.<span class="title function_">push</span>(client)</span></span><br><span class="line"><span class="language-javascript">                clients.<span class="title function_">push</span>(client);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//由对象转为JSON字符串</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(clients));</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(rows);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">tableDelete</span> = (<span class="params">index: number, row: User</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">ElMessageBox</span>.<span class="title function_">confirm</span>(</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&#x27;This routing will be deleted&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&#x27;Warning&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">confirmButtonText</span>: <span class="string">&#x27;OK&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">cancelButtonText</span>: <span class="string">&#x27;Cancel&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    )</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title class_">ElMessage</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">message</span>: <span class="string">&#x27;Delete completed&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;sccess delete&quot;</span> + row);</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title class_">ElMessage</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;info&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">message</span>: <span class="string">&#x27;Delete canceled&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">tableAdd</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> popupbg = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;routeContioner&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    popupbg!.<span class="property">style</span>.<span class="property">filter</span> = <span class="string">&#x27;blur(10px)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">bgCancel</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> popupbg = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;routeContioner&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    popupbg!.<span class="property">style</span>.<span class="property">filter</span> = <span class="string">&#x27;blur(0px)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;重置表单：bgCancel&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    (&lt;<span class="title class_">HTMLFormElement</span>&gt;<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;myform&#x27;</span>))!.<span class="title function_">reset</span>()</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;form:&quot;</span> + form.<span class="property">value</span>.<span class="property">id</span>);</span></span><br><span class="line"><span class="language-javascript">    form.<span class="property">value</span> = &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">id</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">name</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">calagory</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">storageChart</span>: [&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">plcName</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">min</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">length</span>: <span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">        &#125;]</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">interface address &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">plcName</span>: string</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">min</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">length</span>: number</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="comment">//table的内容</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> tableData = <span class="title function_">reactive</span>(</span></span><br><span class="line"><span class="language-javascript">    [</span></span><br><span class="line"><span class="language-javascript">        &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">name</span>: <span class="string">&#x27;Tom&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">id</span>: <span class="string">&#x27;a-1&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">calagory</span>: <span class="string">&#x27;only&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">storageChart</span>: [&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">plcName</span>: <span class="string">&#x27;plc1&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">min</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">length</span>: <span class="number">2</span></span></span><br><span class="line"><span class="language-javascript">            &#125;, &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">plcName</span>: <span class="string">&#x27;plc2&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">min</span>: <span class="number">2</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">length</span>: <span class="number">3</span></span></span><br><span class="line"><span class="language-javascript">            &#125;]</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">name</span>: <span class="string">&#x27;Tom&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">id</span>: <span class="string">&#x27;a-3&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">calagory</span>: <span class="string">&#x27;only&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">storageChart</span>: [&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">plcName</span>: <span class="string">&#x27;plc1&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">min</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">length</span>: <span class="number">2</span></span></span><br><span class="line"><span class="language-javascript">            &#125;, &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">plcName</span>: <span class="string">&#x27;plc2&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">min</span>: <span class="number">2</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">length</span>: <span class="number">3</span></span></span><br><span class="line"><span class="language-javascript">            &#125;]</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">name</span>: <span class="string">&#x27;Tom&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">id</span>: <span class="string">&#x27;a-2&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">calagory</span>: <span class="string">&#x27;only&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">storageChart</span>: [&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">plcName</span>: <span class="string">&#x27;plc1&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">min</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">length</span>: <span class="number">2</span></span></span><br><span class="line"><span class="language-javascript">            &#125;, &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">plcName</span>: <span class="string">&#x27;plc2&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">min</span>: <span class="number">2</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">length</span>: <span class="number">3</span></span></span><br><span class="line"><span class="language-javascript">            &#125;]</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">name</span>: <span class="string">&#x27;Tom&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">id</span>: <span class="string">&#x27;a-1-2&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">calagory</span>: <span class="string">&#x27;only&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">storageChart</span>: [&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">plcName</span>: <span class="string">&#x27;plc1&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">min</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">length</span>: <span class="number">2</span></span></span><br><span class="line"><span class="language-javascript">            &#125;, &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">plcName</span>: <span class="string">&#x27;plc2&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">min</span>: <span class="number">2</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">length</span>: <span class="number">3</span></span></span><br><span class="line"><span class="language-javascript">            &#125;]</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">    ]</span></span><br><span class="line"><span class="language-javascript">)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> myformRef = ref&lt;<span class="title class_">FormInstance</span>&gt;()</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">dialogConfirm</span> = (<span class="params">form: any</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (g6_status.<span class="property">value</span> == <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> station = &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">id</span>: form.<span class="property">id</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">name</span>: form.<span class="property">name</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">calagory</span>: form.<span class="property">calagory</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">storageChart</span>: form.<span class="property">storageChart</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> max = data.<span class="property">nodes</span>.<span class="property">length</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> modelNode = &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">id</span>: (max).<span class="title function_">toString</span>(),</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">label</span>: (max).<span class="title function_">toString</span>(),</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">x</span>: data.<span class="property">nodes</span>[max - <span class="number">1</span>].<span class="property">x</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">y</span>: data.<span class="property">nodes</span>[max - <span class="number">1</span>].<span class="property">y</span> + <span class="number">100</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">type</span>: <span class="string">&#x27;rect&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> modelEdge = &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">source</span>: (max - <span class="number">1</span>).<span class="title function_">toString</span>(),</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">target</span>: (max).<span class="title function_">toString</span>(),</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">label</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 给g6的graph实例，添加node类型的新节点</span></span></span><br><span class="line"><span class="language-javascript">        graph.<span class="title function_">addItem</span>(<span class="string">&#x27;node&#x27;</span>, modelNode)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 将节点对象，push到data对象中</span></span></span><br><span class="line"><span class="language-javascript">        data.<span class="property">nodes</span>.<span class="title function_">push</span>(modelNode)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 给g6的graph实例，添加edge类型的边</span></span></span><br><span class="line"><span class="language-javascript">        graph.<span class="title function_">addItem</span>(<span class="string">&#x27;edge&#x27;</span>, modelEdge)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 将边对象，push到data对象中</span></span></span><br><span class="line"><span class="language-javascript">        data.<span class="property">edges</span>.<span class="title function_">push</span>(modelEdge)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//data.nodes[index]时从0开始的</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span> (<span class="keyword">let</span> i = data.<span class="property">nodes</span>.<span class="property">length</span> - <span class="number">1</span>; i &gt; g6_id.<span class="property">value</span>; i--) &#123;</span></span><br><span class="line"><span class="language-javascript">            data.<span class="property">nodes</span>[i].<span class="property">label</span> = data.<span class="property">nodes</span>[i - <span class="number">1</span>].<span class="property">label</span>;</span></span><br><span class="line"><span class="language-javascript">            graph.<span class="title function_">updateItem</span>((i).<span class="title function_">toString</span>(), &#123; <span class="attr">label</span>: data.<span class="property">nodes</span>[i - <span class="number">1</span>].<span class="property">label</span> &#125;)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        tableData.<span class="title function_">splice</span>(g6_id.<span class="property">value</span> - <span class="number">1</span>, <span class="number">0</span>, station)</span></span><br><span class="line"><span class="language-javascript">        graph.<span class="title function_">update</span>((g6_id.<span class="property">value</span>).<span class="title function_">toString</span>(), &#123; <span class="attr">label</span>: form.<span class="property">id</span> &#125;)</span></span><br><span class="line"><span class="language-javascript">        data.<span class="property">nodes</span>[g6_id.<span class="property">value</span>].<span class="property">label</span> = form.<span class="property">id</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//解决add情况下不selected改变不能刷新详细信息的问题</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">selectChange</span>(g6_id.<span class="property">value</span>)</span></span><br><span class="line"><span class="language-javascript">        infoDes.<span class="property">value</span> = tableData[g6_id.<span class="property">value</span> - <span class="number">1</span>]</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">else</span> <span class="keyword">if</span> (g6_status.<span class="property">value</span> == <span class="number">2</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        graph.<span class="title function_">update</span>((g6_id.<span class="property">value</span>).<span class="title function_">toString</span>(), &#123; <span class="attr">label</span>: form.<span class="property">id</span> &#125;)</span></span><br><span class="line"><span class="language-javascript">        form.<span class="property">value</span> = &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">id</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">name</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">calagory</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">storageChart</span>: [&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">plcName</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">min</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">length</span>: <span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">            &#125;]</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    g6_id.<span class="property">value</span> = -<span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">    g6_status.<span class="property">value</span> = <span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">selectChange</span> = (<span class="params">id: any</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;selectChange:&quot;</span> + id);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;g6_select_id:&quot;</span> + g6_select_id.<span class="property">value</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (g6_select_id.<span class="property">value</span> != -<span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        graph.<span class="title function_">findById</span>(g6_select_id.<span class="property">value</span>.<span class="title function_">toString</span>()).<span class="title function_">clearStates</span>()</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    graph.<span class="title function_">findById</span>(id).<span class="title function_">setState</span>(<span class="string">&#x27;selected&#x27;</span>, <span class="literal">true</span>)</span></span><br><span class="line"><span class="language-javascript">    g6_select_id.<span class="property">value</span> = id</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//&lt;--------------g6 canvas---------&gt;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> <span class="attr">graph</span>: <span class="title class_">Graph</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 渲染图</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//   graph.render();</span></span></span><br><span class="line"><span class="language-javascript"><span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//       // 创建 G6 图实例</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   const graph = new G6.Graph(&#123;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//     container: &#x27;mountNode&#x27;, // 指定图画布的容器 id，与第 9 行的容器对应</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//     // 画布宽高</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//     width: 800,</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//     height: 500,</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//     fitView: true,</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//     modes: &#123;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//       default: [&#x27;drag-canvas&#x27;, &#x27;zoom-canvas&#x27;, &#x27;drag-node&#x27;], // 允许拖拽画布、放缩画布、拖拽节点</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//     &#125;,</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//     layout: &#123;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//       type: &#x27;force&#x27;, // 设置布局算法为 force</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//       linkDistance: 200, // 设置边长为 100</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//       preventOverlap: true, // 设置防止重叠</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//     &#125;,</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   &#125;);</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// const descriptionDiv = document.createElement(&#x27;div&#x27;);</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// descriptionDiv.id = &#x27;discription&#x27;;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// descriptionDiv.innerHTML = &#x27;Right click a node to activate a contextMenu.&#x27;;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// document.getElementById(&#x27;mountNode&#x27;)!.appendChild(descriptionDiv);</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> container = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;mountNode&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> width = container!.<span class="property">scrollWidth</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> height = container!.<span class="property">scrollHeight</span> || <span class="number">500</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> contextMenu = <span class="keyword">new</span> <span class="variable constant_">G6</span>.<span class="title class_">Menu</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">getContent</span>(<span class="params">evt</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> header;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (evt!.<span class="property">target</span> &amp;&amp; evt!.<span class="property">target</span>.<span class="property">isCanvas</span> &amp;&amp; evt!.<span class="property">target</span>.<span class="title function_">isCanvas</span>()) &#123;</span></span><br><span class="line"><span class="language-javascript">                header = <span class="string">&#x27;Canvas ContextMenu&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (evt!.<span class="property">item</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">const</span> itemType = evt!.<span class="property">item</span>.<span class="title function_">getType</span>();</span></span><br><span class="line"><span class="language-javascript">                header = <span class="string">`<span class="subst">$&#123;itemType.toUpperCase()&#125;</span> ContextMenu`</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> <span class="string">`&lt;ul&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">      &lt;li&gt;增加&lt;/li&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">      &lt;li&gt;删除&lt;/li&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">      &lt;li&gt;修改&lt;/li&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">    &lt;/ul&gt;`</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">handleMenuClick</span>: <span class="function">(<span class="params">target, item</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// console.log(target.nodeValue);</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// console.log(&quot;target:&quot; + target);</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// console.log(&quot;item:&quot; + item);</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// console.log(&quot;target,item:&quot; + target, item);</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// console.log(&quot;ceshi&quot; + item._cfg?.id);</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// console.log(&quot;ceshi2&quot; + target.innerHTML);</span></span></span><br><span class="line"><span class="language-javascript">            interface nodeBase &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">id</span>: string</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">x</span>: number</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">y</span>: number</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">label</span>: string</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: string</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (target.<span class="property">innerHTML</span> === <span class="string">&#x27;增加&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">g6_add</span>(<span class="title class_">Number</span>.<span class="built_in">parseInt</span>(item.<span class="property">_cfg</span>?.<span class="property">id</span> || <span class="string">&#x27;0&#x27;</span>) + <span class="number">1</span>, item.<span class="property">_cfg</span>?.<span class="property">model</span>?.<span class="property">x</span> || <span class="number">0</span>, (item.<span class="property">_cfg</span>?.<span class="property">model</span>?.<span class="property">y</span> || <span class="number">0</span>) + <span class="number">100</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (target.<span class="property">innerHTML</span> === <span class="string">&#x27;删除&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">g6_delete</span>(<span class="title class_">Number</span>.<span class="built_in">parseInt</span>(item.<span class="property">_cfg</span>?.<span class="property">id</span> || <span class="string">&#x27;0&#x27;</span>))</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (target.<span class="property">innerHTML</span> === <span class="string">&#x27;修改&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">g6_edit</span>(<span class="title class_">Number</span>.<span class="built_in">parseInt</span>(item.<span class="property">_cfg</span>?.<span class="property">id</span> || <span class="string">&#x27;0&#x27;</span>))</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// offsetX and offsetY include the padding of the parent container</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 需要加上父级容器的 padding-left 16 与自身偏移量 10</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">offsetX</span>: <span class="number">16</span> + <span class="number">10</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 需要加上父级容器的 padding-top 24 、画布兄弟元素高度、与自身偏移量 10</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">offsetY</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// the types of items that allow the menu show up</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 在哪些类型的元素上响应</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">itemTypes</span>: [<span class="string">&#x27;node&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">    graph = <span class="keyword">new</span> <span class="variable constant_">G6</span>.<span class="title class_">Graph</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 使用 contextMenu plugins 时，需要将 container 设置为 position: relative;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">container</span>: <span class="string">&#x27;mountNode&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">width</span>: <span class="number">400</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">height</span>: <span class="number">600</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">linkCenter</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">plugins</span>: [contextMenu],</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">defaultNode</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">size</span>: [<span class="number">80</span>, <span class="number">40</span>],</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">type</span>: <span class="string">&#x27;rect&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">style</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">fill</span>: <span class="string">&#x27;#DEE9FF&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">stroke</span>: <span class="string">&#x27;#5B8FF9&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">defaultEdge</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">style</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">stroke</span>: <span class="string">&#x27;#b5b5b5&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">lineAppendWidth</span>: <span class="number">3</span>, <span class="comment">// Enlarge the range the edge to be hitted</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">labelCfg</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">autoRotate</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">style</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// A white stroke with width 5 helps show the label more clearly avoiding the interference of the overlapped edge</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">stroke</span>: <span class="string">&#x27;white&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineWidth</span>: <span class="number">5</span>,</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">modes</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">default</span>: [<span class="string">&#x27;drag-canvas&#x27;</span>, <span class="string">&#x27;zoom-canvas&#x27;</span>, <span class="string">&#x27;drag-node&#x27;</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;click-select&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">multiple</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">            &#125;,], <span class="comment">// 允许拖拽画布、放缩画布、拖拽节点、单选节点</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//监听状态的改变。用于给显示详细信息</span></span></span><br><span class="line"><span class="language-javascript">    graph.<span class="title function_">on</span>(<span class="string">&#x27;afteritemstatechange&#x27;</span>, <span class="function"><span class="params">evt</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> &#123; item &#125; = evt</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (item?.<span class="property">_cfg</span>?.<span class="property">states</span>?.<span class="title function_">includes</span>(<span class="string">&#x27;selected&#x27;</span>)) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">showInfo</span>(item?.<span class="property">_cfg</span>?.<span class="property">id</span>)</span></span><br><span class="line"><span class="language-javascript">            g6_select_id.<span class="property">value</span> = <span class="title class_">Number</span>.<span class="built_in">parseInt</span>(item?.<span class="property">_cfg</span>?.<span class="property">id</span> || <span class="string">&#x27;-1&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            g6_select_id.<span class="property">value</span> = -<span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 读取数据</span></span></span><br><span class="line"><span class="language-javascript">    graph.<span class="title function_">data</span>(data);</span></span><br><span class="line"><span class="language-javascript">    graph.<span class="title function_">render</span>()</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//index,xTarget,yTarget:想要生成的id，x,y（tips:index从1开始）//id的作用在于修改</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//nextNode,sourceNode:想要生成的node的上下节点，用于连线。没有下节点则表示为自己。</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//刚刚思考了下，不需要上下节点。因为必定添加在最后一位，原来的最后一位id==data.nodes.length</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//但是还是要判断从哪里开始进行修改label，从index开始，赋值给新的label，后面的就顺序下沿，如果index就是最后一位，其实</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> <span class="title function_">g6_add</span> = (<span class="params">index: number, xTarget: number, yTarget: number</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">        g6_id.<span class="property">value</span> = index</span></span><br><span class="line"><span class="language-javascript">        g6_status.<span class="property">value</span> = <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//打开弹窗申请内容</span></span></span><br><span class="line"><span class="language-javascript">        dialogVisible.<span class="property">value</span> = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> <span class="title function_">g6_edit</span> = (<span class="params">index: number</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (index == <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="title class_">ElMessage</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">showClose</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">message</span>: <span class="string">&#x27;开始不能被修改&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        g6_id.<span class="property">value</span> = index</span></span><br><span class="line"><span class="language-javascript">        g6_status.<span class="property">value</span> = <span class="number">2</span></span></span><br><span class="line"><span class="language-javascript">        form.<span class="property">value</span> = tableData[index - <span class="number">1</span>]</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//打开弹窗申请内容</span></span></span><br><span class="line"><span class="language-javascript">        dialogVisible.<span class="property">value</span> = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> <span class="title function_">g6_delete</span> = (<span class="params">index: number</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (index == <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title class_">ElMessage</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">showClose</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">message</span>: <span class="string">&#x27;开始不能被删除&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span> (<span class="keyword">let</span> i = index; i &lt; data.<span class="property">nodes</span>.<span class="property">length</span> - <span class="number">1</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">            data.<span class="property">nodes</span>[i].<span class="property">label</span> = data.<span class="property">nodes</span>[i + <span class="number">1</span>].<span class="property">label</span>;</span></span><br><span class="line"><span class="language-javascript">            graph.<span class="title function_">updateItem</span>((i).<span class="title function_">toString</span>(), &#123; <span class="attr">label</span>: data.<span class="property">nodes</span>[i].<span class="property">label</span> &#125;)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        tableData.<span class="title function_">splice</span>(index - <span class="number">1</span>, <span class="number">1</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (g6_select_id.<span class="property">value</span> &gt;= index) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">selectChange</span>(g6_select_id.<span class="property">value</span> - <span class="number">1</span>)</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (g6_select_id.<span class="property">value</span> == <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                infoDes.<span class="property">value</span> = &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">id</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">name</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">calagory</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">storageChart</span>: [&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">plcName</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">min</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">length</span>: <span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;]</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                infoDes.<span class="property">value</span> = tableData[g6_select_id.<span class="property">value</span> - <span class="number">1</span>]</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        graph.<span class="title function_">removeItem</span>((data.<span class="property">nodes</span>.<span class="property">length</span> - <span class="number">1</span>).<span class="title function_">toString</span>())</span></span><br><span class="line"><span class="language-javascript">        data.<span class="property">nodes</span>.<span class="title function_">splice</span>(data.<span class="property">nodes</span>.<span class="property">length</span> - <span class="number">1</span>, <span class="number">1</span>)</span></span><br><span class="line"><span class="language-javascript">        data.<span class="property">edges</span>.<span class="title function_">splice</span>(data.<span class="property">edges</span>.<span class="property">length</span> - <span class="number">1</span>, <span class="number">1</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">showInfo</span> = (<span class="params">selectId: any</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;showinfo:&quot;</span> + selectId);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (selectId == <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        infoDes.<span class="property">value</span> = &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">id</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">name</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">calagory</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">storageChart</span>: [&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">plcName</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">min</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">length</span>: <span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">            &#125;]</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        infoDes.<span class="property">value</span> = tableData[selectId - <span class="number">1</span>]</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="comment">//select_id,用于应对add与delect selected上方，但是select信息不改变的情况</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> g6_select_id = <span class="title function_">ref</span>(<span class="number">0</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="comment">//需要改变的id</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> g6_id = <span class="title function_">ref</span>(<span class="number">0</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="comment">//需要改变的状态-用于控制dialog是添加还是修改</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//添加的时候显示1，修改则表示为2</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> g6_status = <span class="title function_">ref</span>(<span class="number">0</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> data = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">nodes</span>: [</span></span><br><span class="line"><span class="language-javascript">        &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">id</span>: <span class="string">&quot;0&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">label</span>: <span class="string">&#x27;开始&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">x</span>: <span class="number">200</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">y</span>: <span class="number">100</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">type</span>: <span class="string">&#x27;rect&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">    ],</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">edges</span>: [&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">source</span>: <span class="string">&#x27;0&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">target</span>: <span class="string">&#x27;0&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">label</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    ],</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//页面加载的时候加载画图所需的数据</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">LoadPage</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//依据信息绘制图像</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= tableData.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">        data.<span class="property">nodes</span>.<span class="title function_">push</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">id</span>: i.<span class="title function_">toString</span>(),</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">x</span>: <span class="number">200</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">label</span>: tableData[i - <span class="number">1</span>].<span class="property">id</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">y</span>: i * <span class="number">100</span> + <span class="number">100</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">type</span>: <span class="string">&#x27;rect&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">        data.<span class="property">edges</span>.<span class="title function_">push</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">source</span>: (i - <span class="number">1</span>).<span class="title function_">toString</span>(),</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">target</span>: (i).<span class="title function_">toString</span>(),</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">label</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;dataload:&quot;</span> + i);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="title class_">LoadPage</span>()</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-id">#routeContioner</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">40px</span>);</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">40px</span>);</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: aliceblue;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.infoDescription</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">position</span>: static;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">80%</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.g6Canvas</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin-left</span>: <span class="number">10%</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/* box-shadow:darkgrey 5px 5px 5px 5px; */</span></span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">1px</span> <span class="number">1px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-style</span>: groove;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.routeTable</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">vertical-align</span>: top;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">min-width</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">top</span>: <span class="number">0%</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin-left</span>: <span class="number">10%</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.g6-component-contextmenu</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">list-style-type</span>: none;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">0px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">left</span>: -<span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span>);</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#e2e2e2</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: <span class="number">#545454</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.g6-component-contextmenu</span> <span class="selector-tag">ul</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin</span>: <span class="number">0px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">0px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding-inline-start</span>: <span class="number">0px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">list-style-type</span>: none;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.g6-component-contextmenu</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">list-style-type</span>: none;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.g6-component-contextmenu</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background</span>: <span class="number">#e1dddd</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
          <category> g6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> g6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-安装scss</title>
      <link href="/2023/04/03/%E5%89%8D%E7%AB%AF/vue/Vue-%E5%AE%89%E8%A3%85scss/"/>
      <url>/2023/04/03/%E5%89%8D%E7%AB%AF/vue/Vue-%E5%AE%89%E8%A3%85scss/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue安装scss"><a href="#Vue安装scss" class="headerlink" title="Vue安装scss"></a>Vue安装scss</h1><p>vue3+vite安装scss</p><h2 id="安装scss"><a href="#安装scss" class="headerlink" title="安装scss"></a>安装scss</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install sass</span><br></pre></td></tr></table></figure><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev sass-loader</span><br></pre></td></tr></table></figure><h2 id="创建样式库"><a href="#创建样式库" class="headerlink" title="创建样式库"></a>创建样式库</h2><p>在这里路径下创建如下文件<br> &#x2F;assets&#x2F;style&#x2F;mixin.scss</p><h2 id="配置vite-config-js"><a href="#配置vite-config-js" class="headerlink" title="配置vite.config.js"></a>配置vite.config.js</h2><p>在vite.config.js里配置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; fileURLToPath, <span class="variable constant_">URL</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;node:url&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&#x27;vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&#x27;@vitejs/plugin-vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [<span class="title function_">vue</span>()],</span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="attr">alias</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;@&#x27;</span>: <span class="title function_">fileURLToPath</span>(<span class="keyword">new</span> <span class="title function_">URL</span>(<span class="string">&#x27;./src&#x27;</span>, <span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">url</span>))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">css</span>: &#123;</span><br><span class="line">    <span class="comment">// css预处理器</span></span><br><span class="line">    <span class="attr">preprocessorOptions</span>: &#123;</span><br><span class="line">      <span class="attr">scss</span>: &#123;</span><br><span class="line">        <span class="comment">// 引入 mixin.scss 这样就可以在全局中使用 mixin.scss中预定义的变量了</span></span><br><span class="line">        <span class="comment">// 给导入的路径最后加上 ; </span></span><br><span class="line">        <span class="attr">additionalData</span>: <span class="string">&#x27;@import &quot;@/assets/style/mixin.scss&quot;;&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
          <category> scss </category>
          
      </categories>
      
      
        <tags>
            
            <tag> scss </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-读取csv</title>
      <link href="/2023/04/03/%E5%89%8D%E7%AB%AF/vue/Vue-%E8%AF%BB%E5%8F%96csv/"/>
      <url>/2023/04/03/%E5%89%8D%E7%AB%AF/vue/Vue-%E8%AF%BB%E5%8F%96csv/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue读取csv"><a href="#Vue读取csv" class="headerlink" title="Vue读取csv"></a>Vue读取csv</h1><p>读取csv，前端处理</p><h2 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h2><p>前端</p><h2 id="具体代码"><a href="#具体代码" class="headerlink" title="具体代码"></a>具体代码</h2><p>templete部分</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;plcInfoImportBtn&quot;</span> <span class="attr">class</span>=<span class="string">&quot;file&quot;</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;plcInfoImport(plcForm.id)&quot;</span> <span class="attr">accept</span>=<span class="string">&quot;text/csv&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>script部分</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">plcInfoImport</span> = (<span class="params"> </span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">var</span> file1 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;plcInfoImportBtn&#x27;</span>);</span><br><span class="line">    file1!.<span class="property">onchange</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> file = (&lt;<span class="title class_">HTMLInputElement</span>&gt;file1).<span class="property">files</span>![<span class="number">0</span>];</span><br><span class="line">        <span class="comment">//读取为二进制</span></span><br><span class="line">        <span class="keyword">var</span> reader = <span class="keyword">new</span> <span class="title class_">FileReader</span>();</span><br><span class="line">        reader.<span class="title function_">readAsText</span>(file, <span class="string">&#x27;utf-8&#x27;</span>);</span><br><span class="line">        reader.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> str = reader.<span class="property">result</span>;</span><br><span class="line">            <span class="keyword">if</span> (str == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;读取未空&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> rows = (&lt;<span class="built_in">string</span>&gt;str)!.<span class="title function_">split</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">            <span class="keyword">var</span> clients = [];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; rows.<span class="property">length</span> - <span class="number">1</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">var</span> row = rows[i].<span class="title function_">split</span>(<span class="string">&#x27;,&#x27;</span>);</span><br><span class="line">                <span class="keyword">var</span> client = &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="attr">id</span>:-<span class="number">1</span>,</span><br><span class="line">                    <span class="attr">workStationId</span>:-<span class="number">1</span>,</span><br><span class="line">                    <span class="attr">workStationCode</span>:row[<span class="number">0</span>],</span><br><span class="line">                    <span class="attr">variableName</span>:row[<span class="number">1</span>],</span><br><span class="line">                    <span class="attr">interactType</span>:<span class="title class_">Number</span>.<span class="built_in">parseInt</span>(row[<span class="number">2</span>]),</span><br><span class="line">                    <span class="attr">dbBlockNum</span>:<span class="title class_">Number</span>.<span class="built_in">parseInt</span>(row[<span class="number">3</span>]),</span><br><span class="line">                    <span class="attr">shift</span>:<span class="title class_">Number</span>.<span class="built_in">parseInt</span>(row[<span class="number">4</span>]),</span><br><span class="line">                    <span class="attr">dataType</span>:row[<span class="number">5</span>],</span><br><span class="line">                    <span class="attr">shifttBit</span>:<span class="title class_">Number</span>.<span class="built_in">parseInt</span>(row[<span class="number">6</span>]),</span><br><span class="line">                    <span class="attr">length</span>:<span class="title class_">Number</span>.<span class="built_in">parseInt</span>(row[<span class="number">7</span>]),</span><br><span class="line">                    <span class="attr">descbibe</span>:row[<span class="number">8</span>],</span><br><span class="line">                &#125;;</span><br><span class="line">                plcForm.<span class="property">value</span>.<span class="property">variables</span>.<span class="title function_">push</span>(client)</span><br><span class="line">                clients.<span class="title function_">push</span>(client);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//由对象转为JSON字符串</span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(clients));</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(rows);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
          <category> 读取csv </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> 读取csv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-el-table分页与搜索</title>
      <link href="/2023/04/03/%E5%89%8D%E7%AB%AF/vue/Vue-el-table%E5%88%86%E9%A1%B5%E4%B8%8E%E6%90%9C%E7%B4%A2/"/>
      <url>/2023/04/03/%E5%89%8D%E7%AB%AF/vue/Vue-el-table%E5%88%86%E9%A1%B5%E4%B8%8E%E6%90%9C%E7%B4%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue中el-tables-分页-搜索"><a href="#Vue中el-tables-分页-搜索" class="headerlink" title="Vue中el-tables+分页+搜索"></a>Vue中el-tables+分页+搜索</h1><p>分页的实现通过：el-pagination标签  </p><h2 id="原理解释"><a href="#原理解释" class="headerlink" title="原理解释"></a>原理解释</h2><p>初步步骤分享</p><ol><li>获取所有数据alltable。</li><li>利用computed属性相关联input+currentPage+pageSize</li></ol><h3 id="Step1"><a href="#Step1" class="headerlink" title="Step1"></a>Step1</h3><h3 id="Step2"><a href="#Step2" class="headerlink" title="Step2"></a>Step2</h3><p>可以把filterTable设置成为被computed属性。这样方便绑定输入框与filterTable<br>Q:进行搜索的时候没有对于currentPage进行设置，那实际是如何表现的。<br>A:虽然对于currenPage进行设置，但是由于设置了totalNum，<br>所以如果当前所在页面的页码不存在，页面会自动转至最近存在页码。<br>如果页码存在，则不变化。  </p><h2 id="代码展现"><a href="#代码展现" class="headerlink" title="代码展现"></a>代码展现</h2><p>html中el-pagination</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">el-pagination</span>  <span class="attr">v-model:current-page</span>=<span class="string">&quot;currentPage&quot;</span> <span class="attr">:small</span>=<span class="string">&quot;small&quot;</span> <span class="attr">:background</span>=<span class="string">&quot;background&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:page-size</span>=<span class="string">&quot;pageSize&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;total, prev, pager, next, jumper&quot;</span> <span class="attr">:total</span>=<span class="string">&quot;totalNum&quot;</span></span></span><br><span class="line"><span class="tag">    @<span class="attr">current-change</span>=<span class="string">&quot;handleCurrentChange&quot;</span> /&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>script中</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> searchInput = <span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> showdata = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line"><span class="comment">//获取经过input过滤后的表格</span></span><br><span class="line">    <span class="keyword">const</span> filterTable = tableData.<span class="title function_">filter</span>(</span><br><span class="line">        <span class="function">(<span class="params">data</span>) =&gt;</span></span><br><span class="line">            !searchInput.<span class="property">value</span> ||</span><br><span class="line">            data.<span class="property">plcCode</span>.<span class="title function_">toLowerCase</span>().<span class="title function_">includes</span>(searchInput.<span class="property">value</span>.<span class="title function_">toLowerCase</span>())</span><br><span class="line">    )</span><br><span class="line">    <span class="comment">//获取被展示的页面</span></span><br><span class="line">    tableShowData.<span class="property">value</span> = filterTable.<span class="title function_">slice</span>((currentPage.<span class="property">value</span> - <span class="number">1</span>) * pageSize, currentPage.<span class="property">value</span> * pageSize)</span><br><span class="line">    <span class="comment">//调整分页的页码与总数目</span></span><br><span class="line">    totalNum.<span class="property">value</span> = filterTable.<span class="property">length</span></span><br><span class="line">    <span class="keyword">return</span> tableShowData.<span class="property">value</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
          <category> el-table </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> el-table </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-知错就该（三）</title>
      <link href="/2023/04/03/%E5%89%8D%E7%AB%AF/vue/Vue-%E7%9F%A5%E9%94%99%E5%B0%B1%E8%AF%A5%EF%BC%88%E4%B8%89%EF%BC%89/"/>
      <url>/2023/04/03/%E5%89%8D%E7%AB%AF/vue/Vue-%E7%9F%A5%E9%94%99%E5%B0%B1%E8%AF%A5%EF%BC%88%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>cmd中提示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[vite] error while updating dependencies:</span><br><span class="line">Error: ENOENT: no such file or directory, rename &#x27;C:\Users\Nestar\Desktop\VUE\Vue3_Test3\node_modules\.vite\deps_temp&#x27; -&gt; &#x27;C:\Users\Nestar\Desktop\VUE\Vue3_Test3\node_modules\.vite\deps&#x27;</span><br></pre></td></tr></table></figure><h2 id="问题场景"><a href="#问题场景" class="headerlink" title="问题场景"></a>问题场景</h2><p>vsCode+vue3+vite<br>当时在新安装了一个插件，然后运行项目，浏览器中加载不出来，发现在cmd中有这个错误提示。</p><h2 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h2><p>清空npm缓存</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm cache clean --force</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>我也不知道说啥了</p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
          <category> 知错就改 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 知错就改 </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-下载文件</title>
      <link href="/2023/04/03/%E5%89%8D%E7%AB%AF/vue/Vue-%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6/"/>
      <url>/2023/04/03/%E5%89%8D%E7%AB%AF/vue/Vue-%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue下载文件"><a href="#Vue下载文件" class="headerlink" title="Vue下载文件"></a>Vue下载文件</h1><p>axios可以通过get与post接口实现文件下载。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">exportPLcs</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title function_">request</span>(&#123;<span class="attr">url</span>:<span class="string">&quot;/File/DownloadVariablesFile&quot;</span>,</span><br><span class="line">        <span class="attr">method</span>:<span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">        <span class="attr">responseType</span>:<span class="string">&#x27;blob&#x27;</span></span><br><span class="line">    &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">status</span> == <span class="number">200</span>) &#123;</span><br><span class="line">                      <span class="comment">// 获取流信息</span></span><br><span class="line">          <span class="keyword">const</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([res.<span class="property">data</span>]);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// document.createElement()是在对象中创建一个对象</span></span><br><span class="line">            <span class="keyword">const</span> elink = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;export start2&quot;</span>+res.<span class="property">headers</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">let</span> _fileName = res.<span class="property">headers</span>[<span class="string">&#x27;content-disposition&#x27;</span>].<span class="title function_">split</span>(<span class="string">&#x27;;&#x27;</span>)[<span class="number">1</span>].<span class="title function_">split</span>(<span class="string">&#x27;=&#x27;</span>)[<span class="number">1</span>];<span class="comment">//文件名，中文无法解析的时候会显示 _(下划线),生产环境获取不到</span></span><br><span class="line">            <span class="comment">// 样式 为 none</span></span><br><span class="line">            elink.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">            <span class="comment">//可以获取当前文件的一个内存URL</span></span><br><span class="line">            elink.<span class="property">href</span> = <span class="variable constant_">URL</span>.<span class="title function_">createObjectURL</span>(blob);</span><br><span class="line"></span><br><span class="line">            elink.<span class="title function_">setAttribute</span>(<span class="string">&#x27;download&#x27;</span>, _fileName.<span class="title function_">substring</span>(_fileName.<span class="title function_">lastIndexOf</span>(<span class="string">&#x27;_&#x27;</span>)+<span class="number">1</span>));</span><br><span class="line">            <span class="comment">//body中添加一个子结点</span></span><br><span class="line">            <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(elink);</span><br><span class="line">            elink.<span class="title function_">click</span>();</span><br><span class="line">            <span class="comment">// 释放URL 对象</span></span><br><span class="line">            <span class="variable constant_">URL</span>.<span class="title function_">revokeObjectURL</span>(elink.<span class="property">href</span>);</span><br><span class="line">            <span class="comment">// 删除指定的元素</span></span><br><span class="line">            <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">removeChild</span>(elink);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//   &#125; else &#123; // IE10+下载</span></span><br><span class="line">        <span class="comment">//     navigator.msSaveBlob(blob, fileName);</span></span><br><span class="line">        <span class="comment">//   &#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//   this.open2(&quot;导出成功!&quot;)</span></span><br><span class="line">          </span><br><span class="line">        &#125;</span><br><span class="line">      &#125;, <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;error:&quot;</span>+error);</span><br><span class="line">        </span><br><span class="line">        <span class="title class_">ElMessage</span>.<span class="title function_">error</span>(<span class="string">&#x27;please check the network, etc.&#x27;</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>有些需要注意的点。</p><ol><li>resposeType:’blob’这个属性是需要的，不然配置中认不出来这个是blob文件,即无法打印”收到文件“<figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">request.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> res = response.<span class="property">data</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;查看拦截器&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 如果是返回的文件</span></span><br><span class="line">    <span class="keyword">if</span> (response.<span class="property">config</span>.<span class="property">responseType</span> == <span class="string">&quot;blob&quot;</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;收到文件&quot;</span>);</span><br><span class="line">      response.<span class="property">headers</span>.<span class="property">conte</span></span><br><span class="line">      <span class="keyword">return</span> response;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 兼容服务端返回的字符串数据</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> res === <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">      res = res ? <span class="title class_">JSON</span>.<span class="title function_">parse</span>(res) : res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> res === <span class="string">&quot;undefined&quot;</span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line">    <span class="comment">//当权限验证不通过的时候给出提示</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (res.<span class="property">code</span> === <span class="string">&quot;401&quot;</span>) &#123;</span><br><span class="line">        <span class="title class_">ElMessage</span>(&#123;</span><br><span class="line">            <span class="attr">message</span>: res.<span class="property">msg</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&quot;error&quot;</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        router.<span class="title function_">push</span>(<span class="string">&quot;/login&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//前端返回的res直接赋值的话，需要.data，如果直接给res就不需要</span></span><br><span class="line">    <span class="keyword">return</span> response;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;err&quot;</span> + error); <span class="comment">// for debug</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li>_fileName是通过headers[‘conten-disposition’]属性获取的。但是这个属性默认是无法读取到，但是在页面的network中可以看到。需要在服务器端设置<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Access-Control-Expose-Headers: Content-Disposition</span><br></pre></td></tr></table></figure>其中：Access-Control-Expose-Headers表示暴露出来的信息选项，后面是指具体项</li></ol>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
          <category> 下载文件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> 下载文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-上传文件</title>
      <link href="/2023/04/03/%E5%89%8D%E7%AB%AF/vue/Vue-%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/"/>
      <url>/2023/04/03/%E5%89%8D%E7%AB%AF/vue/Vue-%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue上传文件"><a href="#Vue上传文件" class="headerlink" title="Vue上传文件"></a>Vue上传文件</h1><p>通过elment-ui实现相关功能</p><h2 id="原理解释"><a href="#原理解释" class="headerlink" title="原理解释"></a>原理解释</h2><p>通过element-plus的upload组件实现相关功能。<br><a herf="https://element-plus.gitee.io/zh-CN/component/upload.html" title="element-ui对应网址">element-ui-upload</a></p><h2 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h2><p>html部分</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;<span class="name">el-upload</span></span></span><br><span class="line"><span class="tag">  <span class="attr">v-model:file-list</span>=<span class="string">&quot;fileList&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">&quot;upload-demo&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">action</span>=<span class="string">&quot;https://192.168.4.66:7138/File/UpLoadVariableFile&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">method</span>=<span class="string">&quot;post&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">multiple</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:on-preview</span>=<span class="string">&quot;handlePreview&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:on-remove</span>=<span class="string">&quot;handleRemove&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:before-remove</span>=<span class="string">&quot;beforeRemove&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:limit</span>=<span class="string">&quot;3&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:on-exceed</span>=<span class="string">&quot;handleExceed&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:on-success</span>=<span class="string">&quot;onUploadSuccess&quot;</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>Click to upload<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> #<span class="attr">tip</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;el-upload__tip&quot;</span>&gt;</span></span><br><span class="line">      jpg/png files with a size less than 500KB.</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-upload</span>&gt;</span></span><br></pre></td></tr></table></figure><p>script部分</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="keyword">type</span> &#123; <span class="title class_">UploadProps</span>, <span class="title class_">UploadUserFile</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> fileList = ref&lt;<span class="title class_">UploadUserFile</span>[]&gt;([</span><br><span class="line"><span class="comment">//   &#123;</span></span><br><span class="line"><span class="comment">//     name: &#x27;element-plus-logo.svg&#x27;,</span></span><br><span class="line"><span class="comment">//     url: &#x27;https://element-plus.org/images/element-plus-logo.svg&#x27;,</span></span><br><span class="line"><span class="comment">//   &#125;,</span></span><br><span class="line"><span class="comment">//   &#123;</span></span><br><span class="line"><span class="comment">//     name: &#x27;element-plus-logo2.svg&#x27;,</span></span><br><span class="line"><span class="comment">//     url: &#x27;https://element-plus.org/images/element-plus-logo.svg&#x27;,</span></span><br><span class="line"><span class="comment">//   &#125;,</span></span><br><span class="line">])</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">handleRemove</span>: <span class="title class_">UploadProps</span>[<span class="string">&#x27;onRemove&#x27;</span>] = <span class="function">(<span class="params">file, uploadFiles</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(file, uploadFiles)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">handlePreview</span>: <span class="title class_">UploadProps</span>[<span class="string">&#x27;onPreview&#x27;</span>] = <span class="function">(<span class="params">uploadFile</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(uploadFile)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">handleExceed</span>: <span class="title class_">UploadProps</span>[<span class="string">&#x27;onExceed&#x27;</span>] = <span class="function">(<span class="params">files, uploadFiles</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="title class_">ElMessage</span>.<span class="title function_">warning</span>(</span><br><span class="line">    <span class="string">`The limit is 3, you selected <span class="subst">$&#123;files.length&#125;</span> files this time, add up to <span class="subst">$&#123;</span></span></span><br><span class="line"><span class="subst"><span class="string">      files.length + uploadFiles.length</span></span></span><br><span class="line"><span class="subst"><span class="string">    &#125;</span> totally`</span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="attr">beforeRemove</span>: <span class="title class_">UploadProps</span>[<span class="string">&#x27;beforeRemove&#x27;</span>] = <span class="function">(<span class="params">uploadFile, uploadFiles</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">ElMessageBox</span>.<span class="title function_">confirm</span>(</span><br><span class="line">    <span class="string">`Cancel the transfert of <span class="subst">$&#123;uploadFile.name&#125;</span> ?`</span></span><br><span class="line">  ).<span class="title function_">then</span>(</span><br><span class="line">    <span class="function">() =&gt;</span> <span class="literal">true</span>,</span><br><span class="line">    <span class="function">() =&gt;</span> <span class="literal">false</span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用于成功之后的返回值</span></span><br><span class="line"><span class="keyword">const</span> <span class="attr">onUploadSuccess</span>: <span class="title class_">UploadProps</span>[<span class="string">&#x27;onSuccess&#x27;</span>] = <span class="function">(<span class="params">response,uploadFile, uploadFiles</span>) =&gt;</span> &#123;</span><br><span class="line">    resInfo = response</span><br><span class="line">    <span class="keyword">if</span> (resInfo.<span class="property">success</span>) &#123;</span><br><span class="line">        plcForm.<span class="property">value</span>.<span class="property">variables</span> = resInfo.<span class="property">content</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title class_">ElMessage</span>.<span class="title function_">error</span>(resInfo.<span class="property">message</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
          <category> upload </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> upload </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-el-table样式</title>
      <link href="/2023/04/03/%E5%89%8D%E7%AB%AF/vue/Vue-el-table%E6%A0%B7%E5%BC%8F/"/>
      <url>/2023/04/03/%E5%89%8D%E7%AB%AF/vue/Vue-el-table%E6%A0%B7%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue修改el-table样式"><a href="#Vue修改el-table样式" class="headerlink" title="Vue修改el-table样式"></a>Vue修改el-table样式</h1><p>今天想要更改el-table的样式，发现并不简单<br>首先先说基本table的格式<br>table作为一个大的集合的名称<br>表头行th<br>表行tr<br>表列td<br>两行两列的表格代码html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">teble</span>&gt;</span></span><br></pre></td></tr></table></figure><table> <tr> <td></td> <td></td> </tr> <tr> <td></td> <td></td> </tr> </teble><p>根据网上搜索得知td的颜色会盖住tr的颜色。所以存在</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">:<span class="built_in">deep</span>(.el-table tbody tr:hover td )&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果没有el-table__expend的情况下</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">:<span class="built_in">deep</span>(.el-table tbody tr:hover&gt;td )&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ffc64b</span><span class="meta">!important</span>;;</span><br><span class="line">&#125;</span><br><span class="line">:<span class="built_in">deep</span>(.el-table tbody th )&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f7bd8f</span><span class="meta">!important</span>;;</span><br><span class="line">&#125;</span><br><span class="line">:<span class="built_in">deep</span>(.el-table tbody tr )&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#cbb994</span><span class="meta">!important</span>;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解释一下&gt;的作用<br>就是用于寻找tr标签下儿子层的td标签。即使td在孙子层，即多一层嵌套就不去进行此效果。<br>因此这个实际上是对于该tr下的所有td进行染色。</p><p>仔细研究了下为什么会出现form中的表头不上色，但是表身上色，但是外面的表头不上色，表神上色。expand中背景部分上色，expand的表头上色，表身也上色<br>form中的th是在thead，tr中<br>但是表身是在tbody中</p><p>外部的其实也是<br>table—-colgroup+thead&#x2F;thbody——–tr———-th&#x2F;td<br>目前猜测是因为数据可变与不可变有关。thead&#x2F;thbody。动态长度的th都是用thead，静态长度th是tbody</p><h2 id="正常的table中"><a href="#正常的table中" class="headerlink" title="正常的table中"></a>正常的table中</h2><h3 id="body"><a href="#body" class="headerlink" title="body"></a>body</h3><p>el-table class&#x3D; el-table__body<br>tr class&#x3D; el-table__row<br>td class&#x3D; el-table__cell  </p><h3 id="header"><a href="#header" class="headerlink" title="header"></a>header</h3><p>el-table class&#x3D; el-table__header<br>tr不是没写完，就是后面没有<br>tr class&#x3D;<br>th class&#x3D; el-table__cell  </p><h2 id="expand"><a href="#expand" class="headerlink" title="expand"></a>expand</h2><p>expand的展开其实是新增的一行tr，td占据所有colspan&#x3D;td.length。然后中间是自定义内容<br>expand 图标所在cell<br>class&#x3D; el-table__expand-column el-table__cell<br>向下寻找，div class&#x3D;cell中包含这个div属于html的知识<br>未展开时<br>div class&#x3D;el-table__expand-icon<br>展开时<br>class&#x3D;el-table__expand-icon el-table__expand-icon–expanded<br>被展开的tr 没有样式<br>td class&#x3D;el-table__cell el-table__expanded-cell  </p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
          <category> el-table </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> el-table </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-dragable（二）</title>
      <link href="/2023/04/03/%E5%89%8D%E7%AB%AF/vue/Vue-dragable%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2023/04/03/%E5%89%8D%E7%AB%AF/vue/Vue-dragable%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue-DraggableBox（二）"><a href="#Vue-DraggableBox（二）" class="headerlink" title="Vue-DraggableBox（二）"></a>Vue-DraggableBox（二）</h1><p>出现了新的需求</p><h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><p>station隶属于process<br>process隶属于route<br>route：process&lt;&#x3D;&gt;1:n<br>process：station&lt;&#x3D;&gt;1:n<br>route中的process具有顺序需求<br>process中的station没有顺序需求<br>process于station均只在同一个地方出现  </p><h2 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h2><p>其实就是要将station放在合适的process中，然后选择需要的process并将其排序。<br>通过draggable实现方案，就是一共三列。  </p><ul><li>列A:station list</li><li>列B:process list</li><li>列C:route<br>其中process中具有一个station list属性。<br>列A就是最基础的dragabelZ<br>列B，C是一个DragableX嵌套DragableY<br>其中dragabelZ与DragableY的group相同，则station可以在A，B，C互相转移<br>其中dragabelX-B与DragableX-C的group相同，则process可以在B，C互相转移</li></ul><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><p>dragableA</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;board-column&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;board-column-header&quot;</span>&gt;</span></span><br><span class="line">      &#123;&#123; headerText &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">draggable</span> <span class="attr">:list</span>=<span class="string">&quot;list&quot;</span> <span class="attr">v-bind</span>=<span class="string">&quot;$attrs&quot;</span> <span class="attr">class</span>=<span class="string">&quot;board-column-content&quot;</span> <span class="attr">group</span>=<span class="string">1</span> <span class="attr">:set-data</span>=<span class="string">&quot;setData&quot;</span> @<span class="attr">start</span>=<span class="string">&quot;onStart&quot;</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">end</span>=<span class="string">&quot;onEnd&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;element,index in list&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;element.workStationId&quot;</span> <span class="attr">class</span>=<span class="string">&quot;board-item&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &#123;&#123; index.toString() &#125;&#125;  &#123;&#123; element.workStationCode &#125;&#125;  --&gt;</span></span><br><span class="line">         &#123;&#123; element.workStationCode &#125;&#125; </span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">draggable</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> type &#123; <span class="title class_">PropType</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; <span class="title class_">VueDraggableNext</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-draggable-next&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">interface station &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">id</span>: number</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">productRoutingId</span>: number</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">workStationId</span>: number</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">workStationCode</span>: string</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">processCategory</span>: number</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">processType</span>: number</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">sort</span>: number</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">name</span>: <span class="string">&#x27;DragKanbanDemo&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">components</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">draggable</span>: <span class="title class_">VueDraggableNext</span></span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">props</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">headerText</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">type</span>: <span class="title class_">String</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">default</span>: <span class="string">&#x27;Header&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">list</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">type</span>: <span class="title class_">Array</span> <span class="keyword">as</span> unknown <span class="keyword">as</span> <span class="title class_">PropType</span>&lt;station[]&gt;,</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">default</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> []</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">setData</span>(<span class="params">dataTransfer: any</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// to avoid Firefox bug</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// Detail see : https://github.com/RubaXa/Sortable/issues/1012</span></span></span><br><span class="line"><span class="language-javascript">      dataTransfer.<span class="title function_">setData</span>(<span class="string">&#x27;Text&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">onStart</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;开始拖拽&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//拖拽结束的事件</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">onEnd</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;结束拖拽&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.board-column</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">min-width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">min-height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">max-height</span>: <span class="number">600px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: auto;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">overflow</span>: auto;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background</span>: <span class="number">#f0f0f0</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.board-column-header</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">line-height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background</span>: <span class="number">#333</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">3px</span> <span class="number">3px</span> <span class="number">0</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.board-column-content</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: auto;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">10px</span> solid transparent;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">min-height</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">justify-content</span>: flex-start;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.board-item</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">64px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">5px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">text-align</span>: left;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">line-height</span>: <span class="number">54px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">1px</span> <span class="number">3px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.2</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>dragableB与C，两人使用相同模板</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;board-column&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;board-column-header&quot;</span>&gt;</span></span><br><span class="line">            &#123;&#123; headerText &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">draggable</span> <span class="attr">:list</span>=<span class="string">&quot;processList&quot;</span> <span class="attr">v-bind</span>=<span class="string">&quot;$attrs&quot;</span> <span class="attr">class</span>=<span class="string">&quot;process-board-column-content&quot;</span> <span class="attr">group</span>=<span class="string">&quot;2&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:set-data</span>=<span class="string">&quot;setData&quot;</span> @<span class="attr">start</span>=<span class="string">&quot;onStart&quot;</span> @<span class="attr">end</span>=<span class="string">&quot;onEnd&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;processElement, index in processList&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;processElement.code&quot;</span> <span class="attr">class</span>=<span class="string">&quot;process-board-item&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;station-board-column-header&quot;</span>&gt;</span></span><br><span class="line">                    &#123;&#123; processElement.code &#125;&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- &#123;&#123; index.toString() &#125;&#125; : &#123;&#123; processElement.code &#125;&#125; --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">draggable</span> <span class="attr">:list</span>=<span class="string">&quot;processElement.stations&quot;</span> <span class="attr">v-bind</span>=<span class="string">&quot;$attrs&quot;</span> <span class="attr">class</span>=<span class="string">&quot;station-board-column-content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">group</span>=<span class="string">&quot;1&quot;</span> <span class="attr">:set-data</span>=<span class="string">&quot;setData&quot;</span> @<span class="attr">start</span>=<span class="string">&quot;onStart&quot;</span> @<span class="attr">end</span>=<span class="string">&quot;onEnd&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;element, index in processElement.stations&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;element.workStationId&quot;</span> <span class="attr">class</span>=<span class="string">&quot;board-item&quot;</span>&gt;</span></span><br><span class="line">                        &#123;&#123; index.toString() &#125;&#125; : &#123;&#123; element.workStationCode &#125;&#125;</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">draggable</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">draggable</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> type &#123; <span class="title class_">PropType</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; <span class="title class_">VueDraggableNext</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-draggable-next&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">interface process &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">id</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">code</span>: string</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">createTime</span>: string</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">sort</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">stations</span>: station[]</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">interface station &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">id</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">productRoutingId</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">workStationId</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">workStationCode</span>: string</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">processCategory</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">processType</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">sort</span>: number</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;DragKanban&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">components</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">draggable</span>: <span class="title class_">VueDraggableNext</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">props</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">headerText</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">type</span>: <span class="title class_">String</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">default</span>: <span class="string">&#x27;Header&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// options: &#123;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//   type: Object,</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//   default() &#123;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//     return &#123;&#125;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//   &#125;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// &#125;,</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">processList</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">type</span>: <span class="title class_">Array</span> <span class="keyword">as</span> unknown <span class="keyword">as</span> <span class="title class_">PropType</span>&lt;process[]&gt;,</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">default</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> []</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">setData</span>(<span class="params">dataTransfer: any</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// to avoid Firefox bug</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// Detail see : https://github.com/RubaXa/Sortable/issues/1012</span></span></span><br><span class="line"><span class="language-javascript">            dataTransfer.<span class="title function_">setData</span>(<span class="string">&#x27;Text&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">onStart</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;开始拖拽&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//拖拽结束的事件</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">onEnd</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;结束拖拽&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">//区域</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.board-column</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">min-width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">min-height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">max-height</span>: <span class="number">600px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: auto;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">overflow</span>: auto;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background</span>: <span class="number">#f0f0f0</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    //区域的title</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.board-column-header</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">line-height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background</span>: <span class="number">#333</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-radius</span>: <span class="number">3px</span> <span class="number">3px</span> <span class="number">0</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.station-board-column-header</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">line-height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background</span>: <span class="number">#333</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-radius</span>: <span class="number">3px</span> <span class="number">3px</span> <span class="number">0</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    //station方块在区域内的位置</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.station-board-column-content</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: auto;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">overflow</span>: hidden;   </span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">10px</span> solid transparent;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">min-height</span>: <span class="number">0px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">justify-content</span>: flex-start;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        //方块的设置</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.board-item</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">5px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">54px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">1px</span> <span class="number">3px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.2</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    //process方块的区域设置</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.process-board-column-content</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: auto;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">overflow</span>: auto;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">10px</span> solid transparent;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">min-height</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">justify-content</span>: flex-start;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        //方块的设置</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.process-board-item</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">5px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">54px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">1px</span> <span class="number">3px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.2</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br></pre></td></tr></table></figure><p>模板使用</p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
          <category> dragable </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dragable </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-dragable（一）</title>
      <link href="/2023/04/03/%E5%89%8D%E7%AB%AF/vue/Vue-dragable%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2023/04/03/%E5%89%8D%E7%AB%AF/vue/Vue-dragable%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue-dragBox"><a href="#Vue-dragBox" class="headerlink" title="Vue-dragBox"></a>Vue-dragBox</h1><h2 id="安装-vue2版本"><a href="#安装-vue2版本" class="headerlink" title="安装-vue2版本"></a>安装-vue2版本</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install vuedraggable  </span><br><span class="line">或者使用镜像安装</span><br><span class="line">cnpm install vuedraggable  </span><br></pre></td></tr></table></figure><p>安装完成之后会有提示</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> high severity vulnerability</span><br></pre></td></tr></table></figure><p>意思是有高危漏洞,可以运行下面命令来解决,<a herf="https://blog.csdn.net/weixin_45683187/article/details/109378715">高危漏洞</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm audit fix</span><br></pre></td></tr></table></figure><h2 id="安装-vue3版本"><a href="#安装-vue3版本" class="headerlink" title="安装-vue3版本"></a>安装-vue3版本</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-draggable-next</span><br></pre></td></tr></table></figure><p>引入</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># <span class="number">2.</span> vue页面导入vue-draggable-next组件</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">VueDraggableNext</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-draggable-next&#x27;</span></span><br><span class="line"></span><br><span class="line"># <span class="number">3.</span> 声明组件</span><br><span class="line"><span class="attr">components</span>: &#123;</span><br><span class="line">    <span class="attr">draggable</span>: <span class="title class_">VueDraggableNext</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用方式-模板方案<br>创建模板  </p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;board-column&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;board-column-header&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;&#123; headerText &#125;&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">draggable</span> <span class="attr">:list</span>=<span class="string">&quot;list&quot;</span> <span class="attr">v-bind</span>=<span class="string">&quot;$attrs&quot;</span> <span class="attr">class</span>=<span class="string">&quot;board-column-content&quot;</span> <span class="attr">:set-data</span>=<span class="string">&quot;setData&quot;</span> @<span class="attr">start</span>=<span class="string">&quot;onStart&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      @<span class="attr">end</span>=<span class="string">&quot;onEnd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;element in list&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;element.id&quot;</span> <span class="attr">class</span>=<span class="string">&quot;board-item&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;&#123; element.wsCode &#125;&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">draggable</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line">  </span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> type &#123; <span class="title class_">PropType</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123; <span class="title class_">VueDraggableNext</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-draggable-next&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">interface staion &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">id</span>: number</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">wsCode</span>: string</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">wsDescription</span>: string</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">createTime</span>: string</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">plcCode</span>: string | <span class="literal">null</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">updateTime</span>: string</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">wsProductTime</span>: number</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">plcVariables</span>: myvariable[]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">interface myvariable &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">id</span>: number</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">plcInfoId</span>: number</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">workStationId</span>: number</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">workStationCode</span>: string</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">interactType</span>: number</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">dbBlockNum</span>: number</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">variableName</span>: string</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">shift</span>: number</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">dataType</span>: string</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">shifttBit</span>: number</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">length</span>: number</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">description</span>: string</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&#x27;DragKanbanDemo&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">components</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">draggable</span>: <span class="title class_">VueDraggableNext</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">props</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">headerText</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">type</span>: <span class="title class_">String</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">default</span>: <span class="string">&#x27;Header&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// options: &#123;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">//   type: Object,</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">//   default() &#123;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">//     return &#123;&#125;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">//   &#125;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// &#125;,</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">list</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">type</span>: <span class="title class_">Array</span> <span class="keyword">as</span> unknown <span class="keyword">as</span> <span class="title class_">PropType</span>&lt;staion[]&gt;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="title function_">default</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span> []</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">setData</span>(<span class="params">dataTransfer: any</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// to avoid Firefox bug</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// Detail see : https://github.com/RubaXa/Sortable/issues/1012</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      dataTransfer.<span class="title function_">setData</span>(<span class="string">&#x27;Text&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">onStart</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;开始拖拽&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">//拖拽结束的事件</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">onEnd</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;结束拖拽&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.board-column</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">min-width</span>: <span class="number">300px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">min-height</span>: <span class="number">100px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">height</span>: auto;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">overflow</span>: hidden;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">background</span>: <span class="number">#f0f0f0</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.board-column-header</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">height</span>: <span class="number">50px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">line-height</span>: <span class="number">50px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">overflow</span>: hidden;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">20px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">text-align</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">background</span>: <span class="number">#333</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">border-radius</span>: <span class="number">3px</span> <span class="number">3px</span> <span class="number">0</span> <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.board-column-content</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">height</span>: auto;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">overflow</span>: hidden;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">border</span>: <span class="number">10px</span> solid transparent;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">min-height</span>: <span class="number">60px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">justify-content</span>: flex-start;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">flex-direction</span>: column;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">align-items</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.board-item</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">cursor</span>: pointer;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">width</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">height</span>: <span class="number">64px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">margin</span>: <span class="number">5px</span> <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">text-align</span>: left;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">line-height</span>: <span class="number">54px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">box-sizing</span>: border-box;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">1px</span> <span class="number">3px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.2</span>);</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>使用模板</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;searchInput&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display:inline-block;width:170px&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;components-container board&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Kanban</span> <span class="attr">:key</span>=<span class="string">&quot;1&quot;</span> <span class="attr">:list</span>=<span class="string">&quot;showdata&quot;</span> <span class="attr">group</span>=<span class="string">&quot;group&quot;</span> <span class="attr">class</span>=<span class="string">&quot;todo &quot;</span> <span class="attr">header-text</span>=<span class="string">&quot;All Stations&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Kanban</span> <span class="attr">:key</span>=<span class="string">&quot;2&quot;</span> <span class="attr">:list</span>=<span class="string">&quot;list2&quot;</span> <span class="attr">group</span>=<span class="string">&quot;group&quot;</span> <span class="attr">class</span>=<span class="string">&quot;working&quot;</span> <span class="attr">header-text</span>=<span class="string">&quot;Route Station&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="title class_">Kanban</span> <span class="keyword">from</span> <span class="string">&#x27;@/components/dragBox/index.vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; computed &#125; <span class="keyword">from</span> <span class="string">&#x27;@vue/reactivity&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; onMounted, ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> <span class="attr">group</span>: <span class="string">&#x27;mission&#x27;</span></span></span><br><span class="line"><span class="language-javascript">interface staion&#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">id</span>:number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">wsCode</span>:string</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">wsDescription</span>:string</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">createTime</span>:string</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">plcCode</span>:string|<span class="literal">null</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">updateTime</span>:string</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">wsProductTime</span>:number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">plcVariables</span>:myvariable[]</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">interface myvariable &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">id</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">plcInfoId</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">workStationId</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">workStationCode</span>: string</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">interactType</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">dbBlockNum</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">variableName</span>: string</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">shift</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">dataType</span>: string</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">shifttBit</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">length</span>: number</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">description</span>: string</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// let list1:staion[]</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// let list2:staion[]</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> list1=ref&lt;staion[]&gt;([</span></span><br><span class="line"><span class="language-javascript">  &#123;   <span class="attr">id</span>:<span class="number">1</span>, <span class="attr">wsCode</span>:<span class="string">&#x27;station1&#x27;</span>,<span class="attr">wsDescription</span>:<span class="string">&#x27;1&#x27;</span>,<span class="attr">createTime</span>:<span class="string">&#x27;&#x27;</span>,<span class="attr">plcCode</span>:<span class="string">&#x27;plc1&#x27;</span>,<span class="attr">updateTime</span>:<span class="string">&#x27;&#x27;</span>,<span class="attr">wsProductTime</span>:<span class="number">1</span>,<span class="attr">plcVariables</span>:[]&#125; ,</span></span><br><span class="line"><span class="language-javascript">  &#123;   <span class="attr">id</span>:<span class="number">2</span>, <span class="attr">wsCode</span>:<span class="string">&#x27;station2&#x27;</span>,<span class="attr">wsDescription</span>:<span class="string">&#x27;2&#x27;</span>,<span class="attr">createTime</span>:<span class="string">&#x27;&#x27;</span>,<span class="attr">plcCode</span>:<span class="string">&#x27;plc2&#x27;</span>,<span class="attr">updateTime</span>:<span class="string">&#x27;&#x27;</span>,<span class="attr">wsProductTime</span>:<span class="number">2</span>,<span class="attr">plcVariables</span>:[]&#125; ,</span></span><br><span class="line"><span class="language-javascript">  &#123;   <span class="attr">id</span>:<span class="number">3</span>, <span class="attr">wsCode</span>:<span class="string">&#x27;station3&#x27;</span>,<span class="attr">wsDescription</span>:<span class="string">&#x27;3&#x27;</span>,<span class="attr">createTime</span>:<span class="string">&#x27;&#x27;</span>,<span class="attr">plcCode</span>:<span class="string">&#x27;plc3&#x27;</span>,<span class="attr">updateTime</span>:<span class="string">&#x27;&#x27;</span>,<span class="attr">wsProductTime</span>:<span class="number">3</span>,<span class="attr">plcVariables</span>:[]&#125; ,</span></span><br><span class="line"><span class="language-javascript">  &#123;   <span class="attr">id</span>:<span class="number">4</span>, <span class="attr">wsCode</span>:<span class="string">&#x27;station4&#x27;</span>,<span class="attr">wsDescription</span>:<span class="string">&#x27;4&#x27;</span>,<span class="attr">createTime</span>:<span class="string">&#x27;&#x27;</span>,<span class="attr">plcCode</span>:<span class="string">&#x27;plc4&#x27;</span>,<span class="attr">updateTime</span>:<span class="string">&#x27;&#x27;</span>,<span class="attr">wsProductTime</span>:<span class="number">4</span>,<span class="attr">plcVariables</span>:[]&#125; ,</span></span><br><span class="line"><span class="language-javascript">  &#123;   <span class="attr">id</span>:<span class="number">5</span>, <span class="attr">wsCode</span>:<span class="string">&#x27;station5&#x27;</span>,<span class="attr">wsDescription</span>:<span class="string">&#x27;5&#x27;</span>,<span class="attr">createTime</span>:<span class="string">&#x27;&#x27;</span>,<span class="attr">plcCode</span>:<span class="string">&#x27;plc5&#x27;</span>,<span class="attr">updateTime</span>:<span class="string">&#x27;&#x27;</span>,<span class="attr">wsProductTime</span>:<span class="number">5</span>,<span class="attr">plcVariables</span>:[]&#125; ,</span></span><br><span class="line"><span class="language-javascript">  &#123;   <span class="attr">id</span>:<span class="number">6</span>, <span class="attr">wsCode</span>:<span class="string">&#x27;station6&#x27;</span>,<span class="attr">wsDescription</span>:<span class="string">&#x27;6&#x27;</span>,<span class="attr">createTime</span>:<span class="string">&#x27;&#x27;</span>,<span class="attr">plcCode</span>:<span class="string">&#x27;plc6&#x27;</span>,<span class="attr">updateTime</span>:<span class="string">&#x27;&#x27;</span>,<span class="attr">wsProductTime</span>:<span class="number">6</span>,<span class="attr">plcVariables</span>:[]&#125; ,</span></span><br><span class="line"><span class="language-javascript">  &#123;   <span class="attr">id</span>:<span class="number">7</span>, <span class="attr">wsCode</span>:<span class="string">&#x27;station7&#x27;</span>,<span class="attr">wsDescription</span>:<span class="string">&#x27;7&#x27;</span>,<span class="attr">createTime</span>:<span class="string">&#x27;&#x27;</span>,<span class="attr">plcCode</span>:<span class="string">&#x27;plc7&#x27;</span>,<span class="attr">updateTime</span>:<span class="string">&#x27;&#x27;</span>,<span class="attr">wsProductTime</span>:<span class="number">7</span>,<span class="attr">plcVariables</span>:[]&#125; ,</span></span><br><span class="line"><span class="language-javascript">])</span></span><br><span class="line"><span class="language-javascript"><span class="comment">// let list2=ref&lt;staion[]&gt;([&#123;   id:8, wsCode:&#x27;station8&#x27;,wsDescription:&#x27;8&#x27;,createTime:&#x27;&#x27;,plcCode:&#x27;plc8&#x27;,updateTime:&#x27;&#x27;,wsProductTime:8,plcVariables:[]&#125; ,])</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> list2=ref&lt;staion[]&gt;([])</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//&lt;------------------实现搜索栏与分页的结合----------</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> searchInput = <span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> showdata = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> list1.<span class="property">value</span>.<span class="title function_">filter</span>(</span></span><br><span class="line"><span class="language-javascript">        <span class="function">(<span class="params">data</span>) =&gt;</span></span></span><br><span class="line"><span class="language-javascript">            !searchInput.<span class="property">value</span> ||</span></span><br><span class="line"><span class="language-javascript">            data.<span class="property">wsCode</span>.<span class="title function_">toLowerCase</span>().<span class="title function_">includes</span>(searchInput.<span class="property">value</span>.<span class="title function_">toLowerCase</span>())||data.<span class="property">wsDescription</span>.<span class="title function_">toLowerCase</span>().<span class="title function_">includes</span>(searchInput.<span class="property">value</span>.<span class="title function_">toLowerCase</span>())</span></span><br><span class="line"><span class="language-javascript">    )</span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.board</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">700px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-left</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">justify-content</span>: space-around;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">flex-direction</span>: row;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">align-items</span>: flex-start;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.todo</span> :<span class="built_in">deep</span>(.board-column-header) &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background</span>: <span class="number">#4A9FF9</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.working</span> :<span class="built_in">deep</span>(.board-column-header) &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background</span>: <span class="number">#f9944a</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
          <category> dragable </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dragable </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-知错就改（四）</title>
      <link href="/2023/04/03/%E5%89%8D%E7%AB%AF/vue/Vue-%E7%9F%A5%E9%94%99%E5%B0%B1%E6%94%B9%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
      <url>/2023/04/03/%E5%89%8D%E7%AB%AF/vue/Vue-%E7%9F%A5%E9%94%99%E5%B0%B1%E6%94%B9%EF%BC%88%E5%9B%9B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue知错就改（Uncaught-in-promise-Error）"><a href="#Vue知错就改（Uncaught-in-promise-Error）" class="headerlink" title="Vue知错就改（Uncaught (in promise) Error）"></a>Vue知错就改（Uncaught (in promise) Error）</h1><h2 id="错误提示"><a href="#错误提示" class="headerlink" title="错误提示"></a>错误提示</h2><p>Uncaught (in promise) Error: No match for {“name”:”ProcessInfo”,”params”:{}}</p><h2 id="发生场景"><a href="#发生场景" class="headerlink" title="发生场景"></a>发生场景</h2><p>vue先创建一个**.vue文件，但是然后复制一个已有的文件。设置过路由后，想先加载页面看看。<br>但是页面没有渲染出来。在浏览器的console中发现这个错误提示。刷新，与重启vue无效果。<br>屏蔽这个路由，页面正常加载。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>我并没有解决这个问题，过一段时间后直接加载成功了</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>没啥总结的。希望以后可以不遇见这个问题。</p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
          <category> 知错就改 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 知错就改 </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redmi刷入magisk</title>
      <link href="/2023/04/03/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/redmi%E5%88%B7%E5%85%A5magisk/"/>
      <url>/2023/04/03/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/redmi%E5%88%B7%E5%85%A5magisk/</url>
      
        <content type="html"><![CDATA[<h1 id="小米刷入magisk"><a href="#小米刷入magisk" class="headerlink" title="小米刷入magisk"></a>小米刷入magisk</h1><p>此处先贴出两个使用过程中的参考资料<br><a herf="https://sspai.com/post/67932">通用版本magisk刷入介绍</a><br><a herf="https://zhuanlan.zhihu.com/p/507103088">小米k50刷入介绍</a></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>Redmi K50<br>8+128<br>miui14.0.5  </p><h2 id="解除bl锁"><a href="#解除bl锁" class="headerlink" title="解除bl锁"></a>解除bl锁</h2><p>解除Bootloader，才可以对于底层进行操作。但是会影响设备的安全状态<br>手机的设置中的开发者选项，设备解锁状态。<br>根据提示<a href="http://www.miui.com/unlock/index.html">解除bl锁</a><br>需要注意的是，解除bl锁需要将账号绑定在设备上，同时，需要在电脑上的解锁工具登陆账号，手机登陆要验证码，不要太急着关机了。<br>手机已经进入fastboot模式，但是电脑上提示没有连接手机。换线依旧没有解决问题。考虑是驱动问题，在此设备-管理-设备管理器-找到自己的手机-更新驱动-选择小米解锁软件的drive文件夹，即可。注意，在k50上会清空记录，谨慎操作。<br>需要记得，就如上面所提到的账号绑定在设备上。这个是专指在这个界面上进行绑定，需要7天，168h。不然在绑定的时候就是很尴尬，会有提示时间不够。</p><h2 id="rec"><a href="#rec" class="headerlink" title="rec"></a>rec</h2><p>RecoveryRecovery（恢复模式）是独立于系统的一个模式，具有高权限。而官方Recovery功能少的可怜，要想满足我们刷机的需求就要刷入功能丰富的第三方Recovery。<br>但是目前k50好像是因为联发科的机器，相关的rec很少，至少我没有找到相关的信息。<br><br><br><a herf="https://zhuanlan.zhihu.com/p/428730333">相关资料来源</a></p><h2 id="开始刷入magisk"><a href="#开始刷入magisk" class="headerlink" title="开始刷入magisk"></a>开始刷入magisk</h2><p>经过查询，我选择使用fastboot刷机的方案。<br>seteps： </p><ol><li>手机下载安装：MT管理器</li><li>手机下载安装：Magisk</li><li>下载系统完整包：magiskcn.com&#x2F;get-miui（其他品牌请自行到官网下载）—-在系统界面，下载最新完整包，下载超过1%后，停止下载，在下载管理中继续下载</li><li>打开MT管理器，找到我们下载好的系统包，点开zip包，长按boot.img提取出来到Dowmload目录</li></ol><blockquote><p>（小米手机系统包默认下载的位置：Download&#x2F;dowmloaded_rom），如果你下载的是 OTA 包或解压系统包后只能得到一个体积较大的 payload.bin 文件，请跳转至附录查看如何使用开源工具解压（需 python 环境）</p></blockquote><ol start="6"><li><p>打开Magisk【安装 – 选择并修补一个文件 – 弹窗文件管理窗口（找到刚刚提取的boot.img）- 开始】</p></li><li><p>修补结束，会生成一个名字为（magisk_patched-版本号_随机字符.img）的文件（每次生成的随机字符都不一样，使用的时候请输入生成的名字）</p></li><li><p>手机连接到电脑，把boot.img和（magisk_patched-2X000_xxxxx.img）两个文件复制到电脑</p></li><li><p>下载FastBoot：<a href="https://wwt.lanzouf.com/ijexq04l6kbi">https://wwt.lanzouf.com/ijexq04l6kbi</a> 密码:小明没醒（解压出来，把magisk_patched-2X000_xxxxx.img复制到fastboot目录里）</p></li><li><p>打开bat文件（打开CMD命令行.bat）把手机重启到Fastboot模式（重启+音量-键）然后输入下面的命令</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastboot flash boot +面具文件</span><br></pre></td></tr></table></figure></li><li><p>出现下面这三行代码，就是成功刷入了。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Sending ‘boot’ (<span class="number">131072</span> KB) OKAY [ <span class="number">3</span>.<span class="number">123</span>s]</span><br><span class="line">Writing ‘boot’ OKAY [ <span class="number">0</span>.<span class="number">397</span>s]</span><br><span class="line">Finished. Total <span class="built_in">time</span>: <span class="number">4</span>.<span class="number">645</span>s</span><br></pre></td></tr></table></figure></li><li><p>重启手机（开机有震动基本没问题了）耐心等手机开机。（显示Magisk的版本，就是刷好了的）</p></li></ol><blockquote><p>Tips:如果刷模块不兼容或者其他骚操作导致卡米的话，可以把我们前面提取的boot.img通过fastboot刷回去，恢复原系统，一般都能正常开机！boot.img保留一份在电脑，避免出问题了可以自救下！还原boot指令如下</p></blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastboot flash boot boot.img</span><br></pre></td></tr></table></figure><ol start="13"><li>附加信息<br>之前根据网上教程，只刷入boot.img，每次开机都卡在第一屏幕，发现现在新出的手机通过vbmeta.img实现开机签名校验，不关闭校验就会无法开机，相关知识可以搜索一下这个文件，关闭AVB校验的指令为<br>fastboot –disable-verity –disable-verification flash vbmeta vbmeta.img</li></ol><p>链接<a href="https://magiskcn.com/mediatek-vbmeta">https://magiskcn.com/mediatek-vbmeta</a></p><h2 id="附录-payload-bin"><a href="#附录-payload-bin" class="headerlink" title="附录-payload.bin"></a>附录-payload.bin</h2><p>以下内容都是在电脑上操作</p><h3 id="方案1"><a href="#方案1" class="headerlink" title="方案1"></a>方案1</h3><p>传统A-Only机型：在卡刷包第一层目录中就可以找到boot.img这个文件<br>VAB分区机型：解压出压缩包中的payload.bin文件，使用【payload_dumper-win64】进行解包，将payload.bin文件放入<a herf="https://wwp.lanzouf.com/i5icDswxbih">payload_dumper-win64</a>文件夹中的【payload_input】文件夹，然后执行payload_dumper-win64中的payload_dumper.exe进行解包，解包完成后在【payload_output】中找到boot.img即提取成功</p><h3 id="方案2"><a href="#方案2" class="headerlink" title="方案2"></a>方案2</h3><p>一般来说像 Google 给出的刷机包，解压其中的 image 包可以直接获得我们想要的各种镜像文件。但部分厂商给出的升级包以及部分第三方 ROM 的刷机包中解压出来只有 payload.bin，无法进一步解压获得我们想要的各种镜像文件。<br>解压 payload.bin 需要用到特殊的工具，我们可以在 Github 上找到开源的 payload dumper，这是一个基于 python 3 的命令行工具。<br>以zip 格式下载源代码，本地解压得到 payload_dumper-master 文件夹，下属两个 py 后缀的 python 文件。将 ROM 的 .zip 包解压缩后，把其中的 payload.bin 文件移送到 payload_dumper-master 中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pip3 install protobuf #安装 protobuf</span><br><span class="line">## 定位到 payload_dumper-master 文件夹</span><br><span class="line">python3 -m pip install protobuf</span><br><span class="line">python3 -m pip install -r requirements.txt</span><br><span class="line">python3 payload_dumper.py payload.bin</span><br></pre></td></tr></table></figure><h2 id="附录-用到的一些文件的下载地址"><a href="#附录-用到的一些文件的下载地址" class="headerlink" title="附录-用到的一些文件的下载地址"></a>附录-用到的一些文件的下载地址</h2><p>payload_dumper-win64：<a href="https://wwp.lanzouf.com/i5icDswxbih">https://wwp.lanzouf.com/i5icDswxbih</a></p><h2 id="附录-线刷与卡刷的区别"><a href="#附录-线刷与卡刷的区别" class="headerlink" title="附录-线刷与卡刷的区别"></a>附录-线刷与卡刷的区别</h2><p>线刷:也叫强刷，无论是对系统升级还是降级，都是通用的。只要有适配的ROM包（一般强刷包都是官方版本，只是地区不同，第三方的强刷包估计是手机停产吧，前几天给老爸的LT30P刷了个第三方，因为大陆行货系统已经停止在4.1.2，强刷了个4.3），加上强刷工具，以及手机50%以上电量。然后一个字一个字的按照教程操作，也是很简单。国内安卓软件市场确实很乱，很多时候如果我们不养成定期备份的习惯，难保哪天安一个软件你通过权限之后手机陷入无限重启或者只亮灯不亮屏幕（前提是已root），这时除了强刷不会有第二条路。线刷会将手机内存里的所有（注意:是所有，不含SD卡）内容全部删光光。等于刷完后你得到一个新的手机……</p><p>卡刷:主要是升级系统。无论是官方还是第三方，个人感觉官方好像只能用官方的升级工具才可以……卡刷的好处在于用户可以随心选择中意的版本以及ROM包含的各种个性化东西，而且新系统不会删掉内存里的音乐电影以及图片。在刷入的过程中你执行双清时会将通讯录软件数据短信这些清除。而且卡刷包都会自带root卡刷包，免去了线刷之后仍然要去费劲去自行root。  </p><p>其实更清晰的解释，线刷是用fastboot，一般都是直接刷镜像，由uboot以直接写入闪存的办法把镜像直接写到闪存对应的位置（或者说分区）。卡刷一般是在recovery里进行的，有直接刷镜像的比如kernel部分，但像system都是挂载system分区后再个别的更新里面的文件（差分或者直接覆盖），而不是像线刷那样把整个system镜像重刷一次。如果是通过打二进制补丁差分更新的话（绝大部分官方ota包的做法），就要求被更新的文件和出厂时一样，否则就会失败，这是ota失败的原因。所以线刷包实际一般就是包含了fastboot程序和各个系统镜像以及一个可执行的脚本的包，用户直接运行那个脚本，脚本调用fastboot来刷。而卡刷包有比较复杂些的目录结构，除了用来更新的文件外，也包括一个可执行文件和脚本，但这两个脚本是给recovery来用的，而不是用户。</p>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dragable添加查询-未完成</title>
      <link href="/2023/04/03/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/dragable%E6%B7%BB%E5%8A%A0%E6%9F%A5%E8%AF%A2-%E6%9C%AA%E5%AE%8C%E6%88%90/"/>
      <url>/2023/04/03/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/dragable%E6%B7%BB%E5%8A%A0%E6%9F%A5%E8%AF%A2-%E6%9C%AA%E5%AE%8C%E6%88%90/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue中dragable中源列表添加查询功能"><a href="#Vue中dragable中源列表添加查询功能" class="headerlink" title="Vue中dragable中源列表添加查询功能"></a>Vue中dragable中源列表添加查询功能</h1><p>想要在前端实现查询功能。   </p><h2 id="功能描述。"><a href="#功能描述。" class="headerlink" title="功能描述。"></a>功能描述。</h2><p>一共两个列表A，B。<br>列表A：所有的站点<br>列表B：该路线需要的站点，以及顺序。<br>通过dragable插件实现了两个列表的数据的转移。<br>目前想要在A中添加一个功能，查询功能。方便在站点很多的时候能够方便的寻找到自己想要的站点。</p><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>现在是在站点A中使用filter功能作为展示的列表，通过computed实现。<br>但是拖拽过去，发现列表A原本应该减少一个的item的，但是实际并没有。还是拖拽前的数量。<br>但是如果查看属性，会发现其实数据是有变化的，但是界面没有。<br>即动画展示的是列表A没有数据减少，但是对应位置的数据是变化了。比如原来A中1被拖走，这个位置的数据就变成2.虽然显示是1.B中显示正常（因为B中没有使用filter）。如果是拖拽有动画但是没有数据的格子，则会有动画的拖拽，但是没有实际数据过去。即B没有数据的变化。<br>同时，如果数据A通过查询即切换filter的查询内容再清空，刷新了列表A，那样列表A中的1可以再次被拖走至列表B。即列表中存在两个列表A中的数据1。</p><h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><ol><li>A中数据与动画不匹配</li><li>A中切换查询，被拖拽走的数据再次出现</li></ol><h3 id="问题1"><a href="#问题1" class="headerlink" title="问题1"></a>问题1</h3><h4 id="问题详细"><a href="#问题详细" class="headerlink" title="问题详细"></a>问题详细</h4><p>我通过界面中显示数据进行验证了下。A中数据会和上面保持一致。但是被移走的1，在表格中重新渲染的时候会立刻消失，但是上方界面中没有消失。<br>怀疑是ref与普通let数据的区别。<br>搜索了下。其实computed里面是直接属性，那样会有缓存。缓存不变，就直接调用。即多次使用，只执行一次。<br>但是如果computed里面是一个方法。通过return 那样不是缓存，就是一个方法。开销比直接方法更大。多次使用，多次执行。<br>computed的响应式是基于原本的组件的改变，值的改变并不会触发，因此。界面中并没有实时匹配。</p><h4 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h4><p>查询返回值需要是响应式的，感觉可以通过watch方案解决———–解决动画不匹配</p><h3 id="问题2"><a href="#问题2" class="headerlink" title="问题2"></a>问题2</h3><h4 id="问题详细-1"><a href="#问题详细-1" class="headerlink" title="问题详细"></a>问题详细</h4><p>应该是切换了查询条件，由于拖拽的删除并不是删除过滤前的总的信息，导致相同查询条件的可以得到相同的结果。</p><h4 id="问题解决-1"><a href="#问题解决-1" class="headerlink" title="问题解决"></a>问题解决</h4><p>两种方案。</p><ul><li>删除需要对应删除到原来列表———列表B增加的时候，获取当条数据，在A的总数据中，查询并且删除。列表A增加的时候需要增加到对应的数据。</li><li>删除删除不变，修改过滤条件，新增过滤掉B中的内容的条件，但是实现过滤有点复杂。因为过滤的是引用类型。还是需要读取到每个值。同时还有B中内容添加到A中，需要先拖拽到A，得到A，再改变过滤规则，再得到A。两次得到A顺序改变会导致出现两个A1的问题</li></ul><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>除了上面的方案，应该还可以和后端约定好<br>搜索功能，点击搜索的时候向后端请求内容，前端接收项是响应式的，由于不涉及filter就不会出现删除问题。<br>但是也有问题，那就是如果重复搜索，原来A中的1会多次显示。从列表B转移到A也可能会出现A中有多个相同A1。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>最终决定，直接不要这个功能了。一劳永逸。</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> dragable </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> dragable </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vmware修改默认链接方案</title>
      <link href="/2023/04/03/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/Vmware%E4%BF%AE%E6%94%B9%E9%BB%98%E8%AE%A4%E9%93%BE%E6%8E%A5%E6%96%B9%E6%A1%88/"/>
      <url>/2023/04/03/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/Vmware%E4%BF%AE%E6%94%B9%E9%BB%98%E8%AE%A4%E9%93%BE%E6%8E%A5%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h1 id="Vmware修改设备默认连接方案"><a href="#Vmware修改设备默认连接方案" class="headerlink" title="Vmware修改设备默认连接方案"></a>Vmware修改设备默认连接方案</h1><p>正常新的设备连接在电脑上，会有提示需要连接在哪一个设备中。<br>但是如果勾选默认之后，那就不会提示。那样如何修改这个默认设置呢？<br>其实就是在虚拟机-可移动设备-选择对应设备-忘记特定连接方案。</p>]]></content>
      
      
      <categories>
          
          <category> Vmaware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vmaware </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sublime浏览器无法跳转</title>
      <link href="/2023/04/03/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/sublime%E6%B5%8F%E8%A7%88%E5%99%A8%E6%97%A0%E6%B3%95%E8%B7%B3%E8%BD%AC/"/>
      <url>/2023/04/03/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/sublime%E6%B5%8F%E8%A7%88%E5%99%A8%E6%97%A0%E6%B3%95%E8%B7%B3%E8%BD%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="sublime-text-用浏览器打开无法跳转"><a href="#sublime-text-用浏览器打开无法跳转" class="headerlink" title="sublime text 用浏览器打开无法跳转"></a>sublime text 用浏览器打开无法跳转</h1><p>之前一直是open in browser失败。我就有些奇怪。<br>网上冲浪后发现有这么几种可能  </p><ul><li>文件路径中含有中文。——-可惜我的不是  </li><li>html文件的默认打开方式要是浏览器。——这个就是我的问题。<br>我自己当时为了方便的打开html文件，默认的打开模式变成了sublime text。很生气。坑了自己好久<br>记录下这次坑，避免下次踩坑。</li></ul>]]></content>
      
      
      <categories>
          
          <category> sublime text </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sublime text </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-实战学习（二）</title>
      <link href="/2023/03/15/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AE%9E%E6%88%98%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2023/03/15/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AE%9E%E6%88%98%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="记录做项目中遇见的小的功能的实现方案。"><a href="#记录做项目中遇见的小的功能的实现方案。" class="headerlink" title="记录做项目中遇见的小的功能的实现方案。"></a>记录做项目中遇见的小的功能的实现方案。</h1><h2 id="记录一些属性"><a href="#记录一些属性" class="headerlink" title="记录一些属性"></a>记录一些属性</h2><p>input属性中autocomplete&#x3D;”off”，设置是否有联想输入，就是点击输入框就有历史那种<br>trigger验证时机<br>props或者说是{name等}</p><h2 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h2><ol><li>setup</li><li>beforeCreate</li><li>created</li><li>onBeforeMount</li><li>onMounted</li><li>nextTick<br>父子组件生命周期</li></ol><ul><li>子组件onMounted在父组件之前</li><li>子组件onUpdated在父组件之前</li></ul><h1 id="vue中的事件属性"><a href="#vue中的事件属性" class="headerlink" title="vue中的事件属性"></a>vue中的事件属性</h1><p>vue中有些事件的存在属性可以配置</p><h2 id="比如a标签存在prevent属性"><a href="#比如a标签存在prevent属性" class="headerlink" title="比如a标签存在prevent属性"></a>比如a标签存在prevent属性</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">&lt;@eventNmae.prevent=&quot;methodsName&quot;&gt;当触发eventName这个事件的时候不会触发这个事件，但是编写的方法继续触发。</span><br><span class="line">## 还有一些键盘触发</span><br><span class="line">```html</span><br></pre></td></tr></table></figure><p>&lt;@keyup.enter&#x3D;”methodsName”&gt;当按下enter的时候触发的事件。<br>还有一些键盘触发但是比较例外的<br>比如一些系统按键<br>win，ctr，tap<br>这些按键是先执行然后才触发。<br>比如win会先执行弹出开始菜单，但是这个时候的焦点就不在原来绑定的element上了。所以后面的东西就不会触发。<br>所以这类必须绑定在@keydown而不是先做事情</p><blockquote><blockquote><blockquote><blockquote><p>时间线：keydown-&gt;按键系统事件-&gt;keyup</p></blockquote></blockquote></blockquote></blockquote><h2 id="还有stop事件也具有阻止执行的功能。"><a href="#还有stop事件也具有阻止执行的功能。" class="headerlink" title="还有stop事件也具有阻止执行的功能。"></a>还有stop事件也具有阻止执行的功能。</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">## 还有某个事件具有进行事件执行顺序的改变</span><br><span class="line">是用于链式执行，比如某个div中都有执行某个方法。里面又套用了一个div</span><br><span class="line">```htmlt1&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div2&quot;</span><span class="attr">event2</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div1&quot;</span> <span class="attr">even</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="attr">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在这种情况下默认先执行event2，然后event1<br>但是我想要先event1，然后event2<br>这个时候就可以使用这个属性。<br>原理是</p><blockquote><blockquote><blockquote><blockquote><p>时间线:冒泡，事件执行（从内往外）<br>使用这个属性之后，他就会在冒泡的事件就开始执行了。</p></blockquote></blockquote></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> 实战学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> 实战学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-知错就改(二)</title>
      <link href="/2023/03/15/%E5%89%8D%E7%AB%AF/vue/vue-%E7%9F%A5%E9%94%99%E5%B0%B1%E6%94%B9/"/>
      <url>/2023/03/15/%E5%89%8D%E7%AB%AF/vue/vue-%E7%9F%A5%E9%94%99%E5%B0%B1%E6%94%B9/</url>
      
        <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>ts中(赋值表达式的左侧不能是可选属性访问)</p><h2 id="出错场景"><a href="#出错场景" class="headerlink" title="出错场景"></a>出错场景</h2><p>vscode<br>引入echarts，但是import部分提示上述错误</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> popBox = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;popbox&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> card = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;card&quot;</span>);</span><br><span class="line">popBox.<span class="property">style</span>.<span class="property">display</span>=<span class="string">&#x27;block&#x27;</span>;</span><br><span class="line">card.<span class="property">style</span>.<span class="property">filter</span>=<span class="string">&#x27;blur(4px)&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>加一个!，感叹号什么意思呢，它其实是not null 的断言操作符，不执行运行时检查，告诉编译器只需要知道这个东西<br> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> popBox = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;popbox&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> card = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;card&quot;</span>);</span><br><span class="line">popBox!.<span class="property">style</span>!.<span class="property">display</span>=<span class="string">&#x27;block&#x27;</span>;</span><br><span class="line">card!.<span class="property">style</span>!.<span class="property">filter</span>=<span class="string">&#x27;blur(4px)&#x27;</span>;</span><br></pre></td></tr></table></figure></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>可能为null等,ts对于类型与空检查比较严格。</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> 知错就改 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 知错就改 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-get与post-实战学习</title>
      <link href="/2023/03/15/%E5%89%8D%E7%AB%AF/vue/vue-get%E4%B8%8Epost-%E5%AE%9E%E6%88%98%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/03/15/%E5%89%8D%E7%AB%AF/vue/vue-get%E4%B8%8Epost-%E5%AE%9E%E6%88%98%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<ol><li><p>get请求一般是去取获取数据（其实也可以提交，但常见的是获取数据）；<br>post请求一般是去提交数据。</p></li><li><p>get因为参数会放在url中，所以隐私性，安全性较差，请求的数据长度是有限制的，<br>不同的浏览器和服务器不同，一般限制在 2~8K 之间，更加常见的是 1k 以内；<br>post请求是没有的长度限制，请求数据是放在body中；</p></li><li><p>get请求刷新服务器或者回退没有影响，post请求回退时会重新提交数据请求。</p></li><li><p>get请求可以被缓存，post请求不会被缓存。</p></li><li><p>get请求会被保存在浏览器历史记录当中，post不会。get请求可以被收藏为书签，因为参数就是url中，但post不能。它的参数不在url中。</p></li><li><p>get请求只能进行url编码（appliacation-x-www-form-urlencoded）,post请求支持多种（multipart&#x2F;form-data等）。</p></li></ol><p>深入理解</p><ol><li><p>GET 和 POST都是http请求方式， 底层都是 TCP&#x2F;IP协议；通常GET 产生一个 TCP 数据包；POST 产生两个 TCP 数据包（但firefox是发送一个数据包），</p></li><li><p>对于 GET 方式的请求，浏览器会把 http header 和 data 一并发送出去，服务器响应 200<br>（返回数据）表示成功；</p></li><li><p>而对于 POST，浏览器先发送 header，服务器响应 100， 浏览器再继续发送 data，服<br>务器响应 200 （返回数据）。</p><a herf="https://blog.csdn.net/qq_42931285/article/details/119852294" title="参考文献"/></li></ol>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> 实战学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> 实战学习 </tag>
            
            <tag> post </tag>
            
            <tag> get </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-ref与reactive-实战学习</title>
      <link href="/2023/03/15/%E5%89%8D%E7%AB%AF/vue/vue-ref%E4%B8%8Ereactive-%E5%AE%9E%E6%88%98%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/03/15/%E5%89%8D%E7%AB%AF/vue/vue-ref%E4%B8%8Ereactive-%E5%AE%9E%E6%88%98%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="关于ref与reactive"><a href="#关于ref与reactive" class="headerlink" title="关于ref与reactive"></a>关于ref与reactive</h1><p>这两种都需要有一定的认识。<br>ref是reactive更高级的表示。<br>在实际运用中，ref的数据的值的改变会立即反映在界面上。<br>reactive不能够立刻显示。<br>但是好像我在使用ref遇见报错，{}属性不能为空。<br>但是在使用reactive的时候这个报错不会出现。<br>但是这个报错也可以强行忽略掉（网上查找，问题应该就是初始化的问题，不能保证数据的存在类型与内容。）<br>忽略的方式如下，本质应该是忽略检查。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tsconfig.json中的compilerOptions添加一项</span></span><br><span class="line"><span class="string">&quot;noImplicitAny&quot;</span>: <span class="literal">false</span>,</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> 实战学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> 实战学习 </tag>
            
            <tag> ref与reactive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-接口测试-实战学习</title>
      <link href="/2023/03/15/%E5%89%8D%E7%AB%AF/vue/vue-%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95-%E5%AE%9E%E6%88%98%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/03/15/%E5%89%8D%E7%AB%AF/vue/vue-%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95-%E5%AE%9E%E6%88%98%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="关于post与get接口如何测试"><a href="#关于post与get接口如何测试" class="headerlink" title="关于post与get接口如何测试"></a>关于post与get接口如何测试</h1><p>后端的接口测试可以通过postman，但是postman并不能对于前端的接口进行测试。  </p><p>但是实际上更好的应该是使用Apifox来实现这个mock的功能。所以以下内容全部不需要啦</p><p>比通过这样进行手打的效率有很大的提升。建议直接切换。</p><p>但是我从网上找到有这个工具。json-server。</p><p>需要注意的是，这个工具会劫持自己发送给别的端口的内容。因此，如果不再使用，请及时卸载相关组件。<br>安装json-server.  </p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install json-server -g</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> 实战学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> 实战学习 </tag>
            
            <tag> 接口 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-入门学习（二）</title>
      <link href="/2023/03/15/%E5%89%8D%E7%AB%AF/vue/vue-%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2023/03/15/%E5%89%8D%E7%AB%AF/vue/vue-%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue3-入门学习（二）"><a href="#Vue3-入门学习（二）" class="headerlink" title="Vue3 入门学习（二）"></a>Vue3 入门学习（二）</h1><h2 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h2><p>Vue应用根据createApp函数创建应用实例。<br>自我理解：一个应用实例类似css文件。可以在一个页面中仅仅使用一个，也可以在一个html中使用多个分别控制不同的位置。</p><h2 id="根组件"><a href="#根组件" class="headerlink" title="根组件"></a>根组件</h2><p>传入createApp的对象是根组件。<br>其他组件将成为根组件的子组件</p><h2 id="挂载应用"><a href="#挂载应用" class="headerlink" title="挂载应用"></a>挂载应用</h2><p>应用实例的渲染需要调用.mount()方法。这个方法是接收一个“容器”参数。<br>“容器”参数可以是一个实际的DOM元素或者一个CSS、选择器字符串。</p><h2 id="index-html-App-vue"><a href="#index-html-App-vue" class="headerlink" title="index.html+App.vue"></a>index.html+App.vue</h2><p>这是程序的入口，很有意思的一点就在于。通常只是用来加载固定结构。<br>例如路由设置就需要在index.html中加载。<br>模板固定好加载App.vue。因此App.vue可以理解成所有页面的页面母版。<br>因为使用SFC技术（Single File Component），所以都是在同一个页面中的变化。<br>“&#x2F;“这个路径就是将home与App.vue叠加。所有.vue文件都是叠加的。<br>因此App.vue需要保留<router-view />,这样”&#x2F;“的才会显示在上面。<br><em>我一定要吐槽的，在index.html中有import ‘.&#x2F;assets&#x2F;main.css’这样的话，可以注释或者删除掉，这个是为了正常显示实例，让它居中并且显示在固定位置。</em></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> 入门课程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> 入门课程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fragment</title>
      <link href="/2023/03/15/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-Fragment/"/>
      <url>/2023/03/15/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-Fragment/</url>
      
        <content type="html"><![CDATA[<h1 id="vue-学习路线-Fragment"><a href="#vue-学习路线-Fragment" class="headerlink" title="vue-学习路线-Fragment"></a>vue-学习路线-Fragment</h1><p>在vue2必须要有一个根标签</p><p>也就是必须要有一个东西包裹着</p><p>但是在vue3中就是可以不用，但是其实内置有一个fragment的标签包裹</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Suspense组件</title>
      <link href="/2023/03/15/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-Suspense%E7%BB%84%E4%BB%B6/"/>
      <url>/2023/03/15/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-Suspense%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="vue-学习路线-Suspense组件"><a href="#vue-学习路线-Suspense组件" class="headerlink" title="vue-学习路线-Suspense组件"></a>vue-学习路线-Suspense组件</h1><p>还在开发中，后续的api什么的可能改变</p><p>动态组件，作用让两个组件同时出现，异步引入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;sun/&gt;</span><br><span class="line">  &lt;Suspense&gt;</span><br><span class="line">      &lt;template v-solt:default&gt;</span><br><span class="line">          //真正的组件</span><br><span class="line">  &lt;/template&gt;</span><br><span class="line">       &lt;template v-solt:fallback&gt;</span><br><span class="line">//加载中的时候显示的组件</span><br><span class="line">  &lt;/template&gt;  </span><br><span class="line">    &lt;/Suspense&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123;  RouterView &#125; from &#x27;vue-router&#x27;</span><br><span class="line">import &#123;defineAsyncComponent&#125; from &#x27;vue&#x27;</span><br><span class="line">import son from &#x27;/**/**/**.vue&#x27;</span><br><span class="line">const son=defineAsyncComponent(()=&gt;import(&quot;../../../**.vue&quot;))//动态引入</span><br><span class="line">export default&#123;</span><br><span class="line">    components:&#123;son&#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>这个代表可以使用suspense中的组件，其中的组件可以使用promise作为返回值了。以前不能使用的原因是会直接白给，现在也可以的</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Teleport组件</title>
      <link href="/2023/03/15/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-Teleport%E7%BB%84%E4%BB%B6/"/>
      <url>/2023/03/15/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-Teleport%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="vue-学习路线-Teleport组件"><a href="#vue-学习路线-Teleport组件" class="headerlink" title="vue-学习路线-Teleport组件"></a>vue-学习路线-Teleport组件</h1><p>作用，传送</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">   &lt;div v-bind:style=&quot;&#123; animation: &#x27;my-animation 2s ease-in-out infinite&#x27; &#125;&quot;&gt;&lt;/div&gt;</span><br><span class="line">   &lt;teleport to=&#x27;body&#x27;&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;/teleport&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script &gt;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">    @keyframes my-animation&#123;</span><br><span class="line">        form &#123;</span><br><span class="line">            transform:translateX(-100%)</span><br><span class="line">        &#125;</span><br><span class="line">        to &#123;</span><br><span class="line">            transfrom:translateX(0)</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>就是把这个transport中的内容发送给别的组件。比如有些内容组件的位置想要在最中间，但是默认这个组件就在左上角的。这样就很简单的。把许多零件租金去</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>customRef</title>
      <link href="/2023/03/15/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-customRef/"/>
      <url>/2023/03/15/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-customRef/</url>
      
        <content type="html"><![CDATA[<h1 id="vue-学习路线-customRef"><a href="#vue-学习路线-customRef" class="headerlink" title="vue-学习路线-customRef"></a>vue-学习路线-customRef</h1><p>作用：创建一个自定义的ref，并对其依赖项追踪和更新出发进行显式控制。</p><p>eg:页面防抖效果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; v-model=&quot;keyword&quot;&gt;</span><br><span class="line">&lt;h3&gt;</span><br><span class="line">        &#123;&#123;keyword&#125;&#125;</span><br><span class="line">    &lt;/h3&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123;ref,customRef&#125; from &#x27;vue&#x27;</span><br><span class="line">export default&#123;</span><br><span class="line">    name:&#x27;App&#x27;,</span><br><span class="line">    setup()&#123;</span><br><span class="line">        //自定义一个ref：myref</span><br><span class="line">        function myRef(value)&#123;</span><br><span class="line">            let timer</span><br><span class="line">            //方法要返回一个东西吧，不然干嘛</span><br><span class="line">            return customRef((track,trigger)=&gt;&#123;</span><br><span class="line">                //必须要返回一个对象且必须要有get，set</span><br><span class="line">                return &#123;</span><br><span class="line">                    get:function()&#123;</span><br><span class="line">                        console.log(&quot;324&quot;)</span><br><span class="line">                        track()//追踪value的改变，不然的话后续改变，获取不到最新的值。</span><br><span class="line">                        return value</span><br><span class="line">                    &#125;,</span><br><span class="line">                    set:funtion(newValue)&#123;</span><br><span class="line">                    console.log(&quot;324&quot;)</span><br><span class="line">                        clearTimeout(timer)//在每次赋值前清楚前一个定时器，避免出现之前的定时器，设置文字，导致在连续点击的时候，速度较快，出现数值不断变换成之前的数据。</span><br><span class="line">                        timer=setTimeOut(()=&gt;&#123;</span><br><span class="line">                              value = newValue</span><br><span class="line">                trigger()//通知vue重新解析模板，也就是在set之后让界面认识到改变</span><br><span class="line">                        &#125;,500)</span><br><span class="line">                &#125;,</span><br><span class="line">                    //上面简化的写法</span><br><span class="line">                    get()&#123;&#125;,</span><br><span class="line">                    set()&#123;&#125;</span><br><span class="line">                &#125;</span><br><span class="line">                             </span><br><span class="line"></span><br><span class="line">            &#125;)</span><br><span class="line">            </span><br><span class="line">            console.log(&#x27;myRef&#x27;)</span><br><span class="line">        &#125;</span><br><span class="line">        //let keyworf=ref(&#x27;helleo&#x27;)//使用vue提供的ref</span><br><span class="line">        let keyworf=myRef(&#x27;helleo&#x27;)//使用vue提供的ref</span><br><span class="line">        return &#123;</span><br><span class="line">            keyword</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>provide与inject</title>
      <link href="/2023/03/15/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-provide%E4%B8%8Einject/"/>
      <url>/2023/03/15/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-provide%E4%B8%8Einject/</url>
      
        <content type="html"><![CDATA[<h1 id="vue-学习路线-provide与inject"><a href="#vue-学习路线-provide与inject" class="headerlink" title="vue-学习路线-provide与inject"></a>vue-学习路线-provide与inject</h1><p>作用：实现祖孙组件间通信。也就是跨级组件之间通信。</p><p>注意可以实现响应式的更新并且是双向的响应式更新。主要要记住，你传入的变量需要时响应式变量，这样你的结果才具有响应式更新的特点。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//祖组件中</span><br><span class="line">let page=ref(0)</span><br><span class="line">provide(&quot;mPage&quot;,page)</span><br><span class="line"></span><br><span class="line">//在孙组件中</span><br><span class="line">const sunPage=inject(&quot;mPage&quot;)</span><br></pre></td></tr></table></figure><p>其实在子组件也可以得到，但是有props的情况下，在子组件中基本用不着</p><p>祖组件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;child/&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123;  RouterView &#125; from &#x27;vue-router&#x27;</span><br><span class="line">import child from &#x27;/**/**/**.vue&#x27;</span><br><span class="line">import &#123;reactive ,toRefs,provide&#125; from &#x27;vue&#x27;</span><br><span class="line">    </span><br><span class="line">export default&#123;</span><br><span class="line">    name:&#x27;App&#x27;</span><br><span class="line">    components:&#123;child&#125;,</span><br><span class="line">    setup()&#123;</span><br><span class="line">    let car=reactive(&#123;name:&#x27;奔驰&#x27;,price:&#x27;40w&#x27;&#125;)</span><br><span class="line">        provide(&#x27;car&#x27;,car)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>子组件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;sun/&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123;  RouterView &#125; from &#x27;vue-router&#x27;</span><br><span class="line">import son from &#x27;/**/**/**.vue&#x27;</span><br><span class="line">export default&#123;</span><br><span class="line">    components:&#123;son&#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>孙组件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;router-link replace :to=&quot;/home/message/detail/mid/mtitle&quot;&gt; link &lt;/router-link&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123;  RouterView &#125; from &#x27;vue-router&#x27;</span><br><span class="line">import &#123;inject&#125; from &#x27;vue&#x27;</span><br><span class="line">export default&#123;</span><br><span class="line">    name:&#x27;son&#x27;,</span><br><span class="line">    setup()&#123;</span><br><span class="line">        let car = inject(&#x27;car&#x27;)</span><br><span class="line">        return &#123;car&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>toRaw与markRaw</title>
      <link href="/2023/03/15/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-toRow%E4%B8%8EmarkRow/"/>
      <url>/2023/03/15/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-toRow%E4%B8%8EmarkRow/</url>
      
        <content type="html"><![CDATA[<h1 id="vue-学习路线-toRaw与markRaw"><a href="#vue-学习路线-toRaw与markRaw" class="headerlink" title="vue-学习路线-toRaw与markRaw"></a>vue-学习路线-toRaw与markRaw</h1><h2 id="toRaw"><a href="#toRaw" class="headerlink" title="toRaw"></a>toRaw</h2><p>toRaw作用把响应式的转成原始的</p><p>只能处理reactive处理响应式对象</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import &#123;toRaw,reactive&#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">let person=reactive(&#123;</span><br><span class="line"></span><br><span class="line">name:”张三&quot;,</span><br><span class="line"></span><br><span class="line">age:18</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">function showRawPerson()&#123;</span><br><span class="line"></span><br><span class="line">const p=toRaw(person)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="markRaw"><a href="#markRaw" class="headerlink" title="markRaw"></a>markRaw</h2><p>场景原本的对象没有这个属性，但是通过某种方法之后添加这个属性。如果dom中使用的话，setup阶段是undfined，如果是通过…refs(person)提交出去的信息，则直接没有对象的信息。</p><p>但是如果新添加的属性，添加上去的信息默认是响应式的，但是如果没有响应式的需求，那就可以这么做。</p><p>eg：你在某个对象中引入了一个第三类库的东西，但是因为第三方的东西内部属性什么的比较多，但是实际上又不太需要改变，就可以用于这种情况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import &#123;toRaw,reactive&#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">let person=reactive(&#123;</span><br><span class="line"></span><br><span class="line">name:”张三&quot;,</span><br><span class="line"></span><br><span class="line">age:18</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">function showRawPerson()&#123;</span><br><span class="line">let persion=ref(&#123;name:&quot;adw&quot;,age=23&#125;)</span><br><span class="line">person.car=markRaw(car)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个和readOnly的不同点。这个数据是后台改变，但是前端是没有改变。实际上改变的。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue3与2对比</title>
      <link href="/2023/03/15/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-vue3%E4%B8%8E2%E5%AF%B9%E6%AF%94/"/>
      <url>/2023/03/15/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-vue3%E4%B8%8E2%E5%AF%B9%E6%AF%94/</url>
      
        <content type="html"><![CDATA[<h1 id="vue-学习路线-vue3与2对比"><a href="#vue-学习路线-vue3与2对比" class="headerlink" title="vue-学习路线-vue3与2对比"></a>vue-学习路线-vue3与2对比</h1><p><img src="https://cdn.jsdelivr.net/gh/2508838014/DrawingBed//pictures/202307312336144.png" alt="image-20230731233645075"></p><p><img src="https://cdn.jsdelivr.net/gh/2508838014/DrawingBed//pictures/202307312337937.png" alt="image-20230731233748888"></p><p><img src="https://cdn.jsdelivr.net/gh/2508838014/DrawingBed//pictures/202307312338569.png" alt="image-20230731233831523"></p><p><img src="https://cdn.jsdelivr.net/gh/2508838014/DrawingBed//pictures/202307312339613.png" alt="image-20230731233938567"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>响应式数据的判断</title>
      <link href="/2023/03/15/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-%E5%93%8D%E5%BA%94%E5%BC%8F%E6%95%B0%E6%8D%AE%E7%9A%84%E5%88%A4%E6%96%AD/"/>
      <url>/2023/03/15/%E5%89%8D%E7%AB%AF/vue/vue-%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF-%E5%93%8D%E5%BA%94%E5%BC%8F%E6%95%B0%E6%8D%AE%E7%9A%84%E5%88%A4%E6%96%AD/</url>
      
        <content type="html"><![CDATA[<h1 id="vue-学习路线-响应式数据的判断"><a href="#vue-学习路线-响应式数据的判断" class="headerlink" title="vue-学习路线-响应式数据的判断"></a>vue-学习路线-响应式数据的判断</h1><ul><li>isRef:是否是一个ref创建的对象</li><li>isReactive：是否一个reactive创建的对象</li><li>isReadonly：是否是一个只读的对象</li><li>isProxy：检查一个对象是不是由ref或者reactivee创建的对象</li></ul><p>readOnly的修饰后的依旧还是一个代理的类型的</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-入门学习（一）</title>
      <link href="/2023/03/15/%E5%89%8D%E7%AB%AF/vue/vue-%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2023/03/15/%E5%89%8D%E7%AB%AF/vue/vue-%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="vue前端从零构建（一）"><a href="#vue前端从零构建（一）" class="headerlink" title="vue前端从零构建（一）"></a>vue前端从零构建（一）</h1><h2 id="基础要求"><a href="#基础要求" class="headerlink" title="基础要求"></a>基础要求</h2><p>安装node.js 14.16.0<br>idea</p><h2 id="开始创建"><a href="#开始创建" class="headerlink" title="开始创建"></a>开始创建</h2><p>vue官方链接<a herf="https://cn.vuejs.org/guide/scaling-up/tooling.html#project-scaffolding" title="vue前端从零构建（一）">VUE</a><br>其中VUE已经更新到版本3，目前的项目的脚手架工具是Vite，原来毕设中提供的是Vue CLI:目前处于维护过程中。<br>VUE3 基础要求node.js&gt;16.0</p><h3 id="Vite"><a href="#Vite" class="headerlink" title="Vite"></a>Vite</h3><p>安装命令<code>npm init vue@latest</code></p><h3 id="开始创建-1"><a href="#开始创建-1" class="headerlink" title="开始创建"></a>开始创建</h3><ol><li>下载Node.js安装网址<a herf="http://nodejs.cn/download/">Node.js下载安装</a>，版本检查<code>node --version</code></li><li>切换淘宝镜像 <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry http://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></li><li>安装脚手架工具<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init vue@latest</span><br></pre></td></tr></table></figure></li><li>自动安装Vue项目脚手架工具<code>npm init vue@latest</code>这个时候就开始创建Vue项目，需要你输入项目的名称。选择一些环境。</li><li>运行项目<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> &lt;your-project-name&gt;</span><br><span class="line">npm install</span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure></li><li>发布到生产环境 <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure></li></ol><h3 id="创建出来的项目简单介绍。"><a href="#创建出来的项目简单介绍。" class="headerlink" title="创建出来的项目简单介绍。"></a>创建出来的项目简单介绍。</h3><ul><li>public：存放静态的文件</li><li>src：存放一些组件<ul><li>asset：存放log</li><li>components：存放组件</li><li>router：路由文件</li><li>view：页面存放</li></ul></li></ul><h3 id="安装element-UI"><a href="#安装element-UI" class="headerlink" title="安装element UI"></a>安装element UI</h3><p>此处使用element plus即element3<br>安装步骤。  </p><ol><li>安装element plus—npm install element-plus –save   <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install element-plus --save</span><br></pre></td></tr></table></figure></li><li>按需安装———–npm install -D unplugin-vue-components unplugin-auto-import   <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -D unplugin-vue-components unplugin-auto-import</span><br></pre></td></tr></table></figure></li><li>配置按需安装的环境<br>vite.config中的配置. <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> //vite.config.js额外添加</span><br><span class="line">import AutoImport from &#x27;unplugin-auto-import/vite&#x27;</span><br><span class="line">import Components from &#x27;unplugin-vue-components/vite&#x27;</span><br><span class="line">import &#123; ElementPlusResolver &#125; from &#x27;unplugin-vue-components/resolvers&#x27;</span><br><span class="line"> </span><br><span class="line">export default defineConfig(&#123;</span><br><span class="line">  // ...</span><br><span class="line">  plugins: [</span><br><span class="line">    // ...</span><br><span class="line">    AutoImport(&#123;</span><br><span class="line">      resolvers: [ElementPlusResolver()],</span><br><span class="line">    &#125;),</span><br><span class="line">    Components(&#123;</span><br><span class="line">      resolvers: [ElementPlusResolver()],</span><br><span class="line">    &#125;),</span><br><span class="line">  ],</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol><h3 id="安装element-icons"><a href="#安装element-icons" class="headerlink" title="安装element&#x2F;icons"></a>安装element&#x2F;icons</h3><p>有的element样式需要icons。这个目前是需要另外下载。此处展示了如何下载并且按需安装。与上文得按需安装相对应。<br><a herf="https://blog.csdn.net/weixin_55323831/article/details/127055896" title="参考文章">参考文章</a></p><ol><li>安装。&#x2F;&#x2F;cd到项目目录中 <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install element-plus --save</span><br><span class="line">npm install -D unplugin-vue-components unplugin-auto-import </span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>配置相关的参数。<br>cd到项目目录中 <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install @element-plus/icons-vue</span><br></pre></td></tr></table></figure> &#x2F;&#x2F;安装后无法使用，继续安装以下插件<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i  unplugin-icons -D</span><br></pre></td></tr></table></figure> 配制文件参数：vite.config.ts配置  <figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; fileURLToPath, <span class="variable constant_">URL</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;node:url&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&#x27;vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&#x27;@vitejs/plugin-vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">AutoImport</span> <span class="keyword">from</span> <span class="string">&#x27;unplugin-auto-import/vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Components</span> <span class="keyword">from</span> <span class="string">&#x27;unplugin-vue-components/vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElementPlusResolver</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;unplugin-vue-components/resolvers&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// icon</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icons</span> <span class="keyword">from</span> <span class="string">&#x27;unplugin-icons/vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">IconsResolver</span> <span class="keyword">from</span> <span class="string">&#x27;unplugin-icons/resolver&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// https://vitejs.dev/config/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="title function_">vue</span>(),</span><br><span class="line">    <span class="title class_">AutoImport</span>(&#123;</span><br><span class="line">      <span class="attr">resolvers</span>: [ <span class="comment">// 自动导入图标组件</span></span><br><span class="line">    </span><br><span class="line">        <span class="title class_">IconsResolver</span>(&#123;</span><br><span class="line">          <span class="attr">prefix</span>: <span class="string">&#x27;Icon&#x27;</span>,</span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="title class_">ElementPlusResolver</span>()</span><br><span class="line">      ],</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="title class_">Components</span>(&#123;</span><br><span class="line">      <span class="attr">resolvers</span>: [ <span class="comment">// 自动注册图标组件</span></span><br><span class="line">        <span class="title class_">IconsResolver</span>(&#123;</span><br><span class="line">          <span class="attr">enabledCollections</span>: [<span class="string">&#x27;ep&#x27;</span>],</span><br><span class="line">        &#125;)</span><br><span class="line">        , <span class="title class_">ElementPlusResolver</span>()</span><br><span class="line">      ],</span><br><span class="line"></span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="title class_">Icons</span>(&#123;</span><br><span class="line">      <span class="attr">autoInstall</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;),</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">server</span>: &#123;</span><br><span class="line">    <span class="attr">host</span>: <span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="comment">// ip</span></span><br><span class="line">    <span class="attr">port</span>: <span class="number">8080</span>,  </span><br><span class="line">    <span class="attr">hmr</span>: <span class="literal">true</span>,  <span class="comment">// 热启动</span></span><br><span class="line">    <span class="attr">open</span>: <span class="literal">true</span> <span class="comment">// 自动打开浏览器</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="attr">alias</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;@&#x27;</span>: <span class="title function_">fileURLToPath</span>(<span class="keyword">new</span> <span class="title function_">URL</span>(<span class="string">&#x27;./src&#x27;</span>, <span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">url</span>))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure> 在env.d.ts中添加一行   <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">declare module &quot;element-plus&quot;;</span><br></pre></td></tr></table></figure> 在main.ts中添加对应的style的引用  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import &#x27;../../node_modules/element-plus/es/components/message-box/style&#x27;</span><br><span class="line">import &#x27;../../node_modules/element-plus/es/components/message/style&#x27;</span><br></pre></td></tr></table></figure></li></ol><h3 id="request与get请求"><a href="#request与get请求" class="headerlink" title="request与get请求"></a>request与get请求</h3><p>这个部分我先选择使用axios来进行request与get请求的实现。<br>选择axios的好处是方便实现ajxs的使用即部分界面内容的数据更新。  </p><ol><li>安装axios<br>cd到项目目录中   <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install axios</span><br></pre></td></tr></table></figure></li></ol><h3 id="安装预处理器-scss"><a href="#安装预处理器-scss" class="headerlink" title="安装预处理器-scss"></a>安装预处理器-scss</h3><p> 有的时候看到有许多的程序中存在lang&#x3D;”less”||lang&#x3D;”sass”这种写法。<br> 自己然后去了解，发现这是一种预处理器的方法，其实就是css语法的补充。<br> 给css多了一种表达的方案。  </p><blockquote><blockquote><p>less与sass也是有一定的区别</p></blockquote></blockquote><ol><li>Less环境较Sass简单</li><li>Less使用较Sass简单</li><li>从功能出发，Sass较Less略强大一些</li><li>Less与Sass处理机制不一样（前者是通过客户端处理的，后者是通过服务端处理，相比较之下前者解析会比后者慢一点）</li><li>关于变量在Less和Sass中的唯一区别就是Less用@，Sass用$。 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">- ①sass有变量和作用域。</span><br><span class="line">  - $variable，like php；</span><br><span class="line">  - #｛$variable｝like ruby；</span><br><span class="line">  - 变量有全局和局部之分，并且有优先级。</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  ②sass有函数的概念；</span><br><span class="line">  - @function和@return以及函数参数（还有不定参）可以让你像js开发那样封装你想要的逻辑。</span><br><span class="line">  -@mixin类似function但缺少像function的编程逻辑，更多的是提高css代码段的复用性和模块化，这个用的人也是最多的。</span><br><span class="line">  -ruby提供了非常丰富的内置原生api。</span><br><span class="line">  </span><br><span class="line">  ③进程控制：</span><br><span class="line">  -条件：@if @else；</span><br><span class="line">  -循环遍历：@for @each @while</span><br><span class="line">  -继承：@extend</span><br><span class="line">  -引用：@import</span><br><span class="line">  </span><br><span class="line">  ④数据结构：</span><br><span class="line">  -$list类型=数组；</span><br><span class="line">  -$map类型=object； 其余的也有string、number、function等类型</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p> 有相关的博客链接如下<br> <a href="https://2508838014.github.io/2023/04/03/vue-an-zhuang-scss/">scss安装-作者我自己啊</a></p><ol><li>下载相关包<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install node-sass --save --dev</span><br><span class="line">npm install sass-loader --save --dev</span><br><span class="line">npm install style-loader --save --dev</span><br></pre></td></tr></table></figure></li><li>真的搞我<br>lang&#x3D;”sass”已经是过去式了。现在最新的已经改成lang&#x3D;”scss”.<br>如果是使用之前的会直接报错。<br>不仅如此，我用这个是为了解决页面没有100%高度的。最后我的解决方案是在App.vue中添加样式。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> 入门课程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> 入门课程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github插件安装失败-知错就改</title>
      <link href="/2023/03/13/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/github/github%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85%E5%A4%B1%E8%B4%A5-%E7%9F%A5%E9%94%99%E5%B0%B1%E6%94%B9/"/>
      <url>/2023/03/13/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/github/github%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85%E5%A4%B1%E8%B4%A5-%E7%9F%A5%E9%94%99%E5%B0%B1%E6%94%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>问题；安装插件失败  </p><h2 id="问题场景"><a href="#问题场景" class="headerlink" title="问题场景"></a>问题场景</h2><p>Visual Studio 2019安装github的插件失败。<br>当时是想要安装一个github的插件。但是一直安装失败。长时间卡住，最后会报告一个初始化失败。  </p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>没有安装安装拓展的插件，应该就是安装榜的第二名。  </p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>安装插件还需要安装插件的拓展。</p>]]></content>
      
      
      <categories>
          
          <category> 插件安装 </category>
          
          <category> 平时学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 解决问题 </tag>
            
            <tag> 插件安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记-反直觉的苹果</title>
      <link href="/2023/03/13/%E6%97%A5%E8%AE%B0/%E6%97%A5%E8%AE%B0-%E5%8F%8D%E7%9B%B4%E8%A7%89%E7%9A%84%E8%8B%B9%E6%9E%9C/"/>
      <url>/2023/03/13/%E6%97%A5%E8%AE%B0/%E6%97%A5%E8%AE%B0-%E5%8F%8D%E7%9B%B4%E8%A7%89%E7%9A%84%E8%8B%B9%E6%9E%9C/</url>
      
        <content type="html"><![CDATA[<p>理科就是有很多很有意思的地方，数据不会说谎，但是直觉会。<br>一个很有意思的反直觉案例：<br>一个苹果干物质占比10%，湿物质占比90%。<br>经过一段时间后，湿物质蒸发至苹果80%，干物质质量不变。<br>请问现在的苹果的质量相较于原来的苹果减少了多少。<br>实际上现在的苹果只有原来的苹果的50%<br>看着只是一点的差距，但是数据上却是天差地别。  </p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-设置menu高亮</title>
      <link href="/2023/03/13/%E5%89%8D%E7%AB%AF/vue/Vue-%E8%AE%BE%E7%BD%AEmenu%E9%AB%98%E4%BA%AE/"/>
      <url>/2023/03/13/%E5%89%8D%E7%AB%AF/vue/Vue-%E8%AE%BE%E7%BD%AEmenu%E9%AB%98%E4%BA%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="设置menu的高亮显示"><a href="#设置menu的高亮显示" class="headerlink" title="设置menu的高亮显示"></a>设置menu的高亮显示</h1><p>之前总是对于高亮显示的内容不太对。<br>现在我调整了下。<br>关键点在于两点。  </p><ol><li>defaul-active动态绑定</li><li>index与name相互绑定。</li></ol><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">el-menu</span></span></span><br><span class="line"><span class="tag">      <span class="attr">active-text-color</span>=<span class="string">&quot;#ffd04b&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">background-color</span>=<span class="string">&quot;#004b8c&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">&quot;el-menu-vertical-demo&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">text-color</span>=<span class="string">&quot;#fff&quot;</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">open</span>=<span class="string">&quot;handleOpen&quot;</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">close</span>=<span class="string">&quot;handleClose&quot;</span></span></span><br><span class="line"><span class="tag">      //<span class="attr">关键部分</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:default-active</span>=<span class="string">&quot;$route.name&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-sub-menu</span> <span class="attr">index</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> #<span class="attr">title</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span><span class="tag">&lt;<span class="name">location</span> /&gt;</span><span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>流程管理<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">        //关键部分</span><br><span class="line">          <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">&quot;&#123;name: &#x27;PlcInfo&#x27;&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&#x27;PlcInfo&#x27;</span>&gt;</span>工艺流程编辑<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span> </span><br><span class="line">          <span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-sub-menu</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-menu</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="原理分析："><a href="#原理分析：" class="headerlink" title="原理分析："></a>原理分析：</h2><p>  实际上就是default-active是高亮显示的内容，可以理解成为default-active为对象A，A&#x3D;对象B。<br>  对象B是自定义内容，item中可以设置index为对象C。现在点击跳转了页面，即对象B改变。对象C是对象B的name部分。<br>  现在对象A动态绑定的路由，发现页面跳转，获取了新的name。然后发现name与对象C相同，于是将对象C高亮  </p>]]></content>
      
      
      <categories>
          
          <category> Helper </category>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> element plus </tag>
            
            <tag> Vue </tag>
            
            <tag> menu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CIP通讯</title>
      <link href="/2023/03/13/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/CIP%E9%80%9A%E8%AE%AF/"/>
      <url>/2023/03/13/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/CIP%E9%80%9A%E8%AE%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="CIP通讯个人学习总结"><a href="#CIP通讯个人学习总结" class="headerlink" title="CIP通讯个人学习总结"></a>CIP通讯个人学习总结</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><p>CIP：点对点面向对象协议，处于应用层中。<br>它可以通过使用三种上层网络协议。  </p><ul><li>DeviceNet</li><li>ControlNet</li><li>EtherNet&#x2F;IP</li></ul><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>CIP协议的目的是连接PLC，开发PLC通讯组件。</p><h3 id="实现的功能"><a href="#实现的功能" class="headerlink" title="实现的功能"></a>实现的功能</h3><ul><li>工业的对象的标注定义</li><li>实现通信</li></ul><h2 id="报文类型"><a href="#报文类型" class="headerlink" title="报文类型"></a>报文类型</h2><ul><li>隐式报文<br>隐式报文使用生产者&#x2F;消费者（支持多播）主要用于传输实时性要求较高的数据，例如I&#x2F;O报文<br>都是已连接<br>通讯类型I&#x2F;O数据交换  </li><li>显式报文<br>源&#x2F;目的地 同时Profibus也是源&#x2F;目的地（不支持多播，利用IP指定某一个对象）<br>显式报文又可以分为已连接传输与未连接传输<br>通讯类型 请求&#x2F;响应 交换</li></ul><h2 id="地址"><a href="#地址" class="headerlink" title="地址"></a>地址</h2><ul><li>公开的</li><li>供货商指定的</li><li>对象指定的</li></ul><h2 id="连接对象"><a href="#连接对象" class="headerlink" title="连接对象"></a>连接对象</h2><ul><li>通过连接对象创建连接</li><li>通过连接管理器对象创建链接</li></ul><h3 id="通过连接对象创建连接"><a href="#通过连接对象创建连接" class="headerlink" title="通过连接对象创建连接"></a>通过连接对象创建连接</h3><p>当⼦⽹定义通过Connection Object创建连接时，CIP设备应⽀持该类的Create服务。 Create 服务使⽤类定<br>义的默认属性值实例化连接实例。连接实例是通过对每个连接实例属性的单独访问来配置的。需要单独的服务<br>请求（Apply_Attributes，服务代码 0x0D）将连接转换为 Established 状态。  </p><h3 id="通过连接管理器对象创建链接"><a href="#通过连接管理器对象创建链接" class="headerlink" title="通过连接管理器对象创建链接"></a>通过连接管理器对象创建链接</h3><p>当⼦⽹定义通过Connection Manager Object创建连接时，CIP设备应⽀持该类的Forward Open服务。成功时，<br>Connection Manager 实例化 Connection 类的⼀个实例。此连接实例配置有在 Forward Open 服务中发送的<br>值，并转换为已建⽴状态。此单个 CIP 服务请求在内部建模为单个连接类服务请求（使⽤创建服务）和多个内部服务<br>请求（使⽤ Set_Attribute_Single 和 Apply_Attributes 服务）。⽀持通过连接管理器创建连接的设备可能会也<br>可能不会提供对连接类实例的外部可⻅性。  </p><h2 id="报文格式（应该是与欧姆龙通讯的格式）"><a href="#报文格式（应该是与欧姆龙通讯的格式）" class="headerlink" title="报文格式（应该是与欧姆龙通讯的格式）"></a>报文格式（应该是与欧姆龙通讯的格式）</h2><p>通讯首先是</p><ol><li>注册信息</li><li>（optional）fordword_open&#x2F;forword_large_open</li><li>相关通讯</li><li>(optional) forword_close</li><li>解除注册</li></ol><p><a href="https://www.cnblogs.com/ChuFeiFan/p/10868241.html" title="参考">参考资料1-c#基于TCP&#x2F;IP、CIP协议的欧姆龙PLC通信<br></a>&gt;</br><br><a href="https://blog.csdn.net/weixin_43988842/article/details/113822291" title="参考">参考资料2-工控协议（三）：CIP (基于EtherNet&#x2F;IP) 学习笔记<br></a>&gt;</br><br>Header+CommandSpecificData+CIP消息<br>Ethernet&#x2F;IP 是一个应用层标准，它将网络中的所有设备都视为一系列的对<br>象。<br>在应用层，CIP 按照对象来封装数据，包括 3 类对象：<br>通用对象：连接对象、报文路由对象、身份对象。<br>网络特定对象：TCP&#x2F;IP 接口对象、ControlNet 接口对象、DeviceNet 接口对象。<br>应用对象：和具体的应用和设备相关，比如有 AD&#x2F;DC 变频器、离散量、模拟量 I&#x2F;O 对象等。<br>其中寻找地址中比较重要的有四个属性  </p><ul><li>设备（MAC id）</li><li>class id</li><li>instance id</li><li>attrbute id&#x2F;ServiceID<br>类ID分为两个部分，公共对象（范围：0x0000–0x0063, 0x00F0–0x02FF），厂家自定义对象（范围：0x0064–0x00C7, 0X0300-0X04FF）。其它范围为预留部分。<br>实例ID也分为两个部分，公共实例（范围：0x0001–0x0063,0x00C8-0x02FF），厂家自定义实例（范围：0x0064-0xxC7,0x0300-0x04FF）。其它范围为预留部分。<br>属性ID,公共属性（范围：0x0000–0x0063，0x0100–0x02FF，0x0500–0x08FF），厂家自定义属性（范围：0x0064–0x00C7，0x0300–0x04FF，0x000–0x0CFF）<br>class可以理解成为某一类：human<br>instance实例，就是某一个体：老王<br>attribute可以理解成为对外暴露的属性。:age,name<br>多字节整数部分采用小端传输，标准Internet网络协议是big-endian</li></ul>]]></content>
      
      
      <categories>
          
          <category> CIP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础学习 </tag>
            
            <tag> CIP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-路由跳转-问题解决</title>
      <link href="/2023/03/13/%E5%89%8D%E7%AB%AF/vue/Vue-%E8%B7%AF%E7%94%B1%E8%B7%B3%E8%BD%AC-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
      <url>/2023/03/13/%E5%89%8D%E7%AB%AF/vue/Vue-%E8%B7%AF%E7%94%B1%E8%B7%B3%E8%BD%AC-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</url>
      
        <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>问题；本来正确的路由，突然不能跳转，发出报错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">core.ts:40 Uncaught ReferenceError: process is not defined at node_modules/@</span><br><span class="line">......</span><br></pre></td></tr></table></figure><h2 id="问题场景"><a href="#问题场景" class="headerlink" title="问题场景"></a>问题场景</h2><p>正常调试Vue</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>解决方案：增加配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//vite.config.json</span><br><span class="line">export default defineConfig(&#123;</span><br><span class="line">  // ...</span><br><span class="line">  define: &#123;</span><br><span class="line">    &#x27;process.env&#x27;: process.env</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这为什么还有问题？</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> 平时学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> 工作问题 </tag>
            
            <tag> 解决问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-字典取值</title>
      <link href="/2023/03/13/C%20Sharp/C%20Sharp%20%E5%AD%97%E5%85%B8%E5%8F%96%E5%80%BC/"/>
      <url>/2023/03/13/C%20Sharp/C%20Sharp%20%E5%AD%97%E5%85%B8%E5%8F%96%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<h1 id="已知字典是键值对的方式存储。如何取出相对应的值。"><a href="#已知字典是键值对的方式存储。如何取出相对应的值。" class="headerlink" title="已知字典是键值对的方式存储。如何取出相对应的值。"></a>已知字典是键值对的方式存储。如何取出相对应的值。</h1><p>目前看到两种方案。</p><h2 id="方案1"><a href="#方案1" class="headerlink" title="方案1"></a>方案1</h2><p>Dictionary.tryGetValue(key,out value);<br>这种方案的好处是，如果得不到对应的值，会直接返回false  </p><h2 id="方案2"><a href="#方案2" class="headerlink" title="方案2"></a>方案2</h2><p>Diationary[key]<br>这个方案，就很直白，取出对应的值。但是问题在于不知道key一定存在<br>如果不存在，直接会抛出异常。  </p>]]></content>
      
      
      <categories>
          
          <category> Helper </category>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> Hepler </tag>
            
            <tag> 字典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记-深入人心的句子</title>
      <link href="/2023/03/12/%E6%97%A5%E8%AE%B0/%E6%97%A5%E8%AE%B0-%E6%B7%B1%E5%85%A5%E4%BA%BA%E5%BF%83%E7%9A%84%E5%8F%A5%E5%AD%90/"/>
      <url>/2023/03/12/%E6%97%A5%E8%AE%B0/%E6%97%A5%E8%AE%B0-%E6%B7%B1%E5%85%A5%E4%BA%BA%E5%BF%83%E7%9A%84%E5%8F%A5%E5%AD%90/</url>
      
        <content type="html"><![CDATA[<p>日记-总会有些句子感动人心。<br>看了有些话，感觉不过几句话，直穿人心。想了下自己为什么会感动。因为自己曾经经历过。目前也依旧爱着这个世界，认同着这个世界。对感情更深刻。<br>人真的贱啊，印象最深的永远是悲剧，但是最喜欢的却是喜剧。悲剧感动人心，都是自己经历的事情，或者说是即将或者曾经接近经历的故事。<br>喜欢的感受迫切的一段话：<br>谢谢大家对爸爸的关心，我代表爸爸谢谢大家。<br>很开心地告诉大家，后续是爸爸身体康复了！他正儿八经地带我成长，给我做各种好吃的、带我写日记、带我练字画画、给我出各种抠头的益智题、和我一起养小猫咪；他也会幼稚地和我三两天唇枪舌战、龙虎相争，把家里搞得鸡飞狗跳。<br>希望故事到这里就结束了，希望大家看到这里就结束了。<br>可惜的是，后续不等于结局，很无奈，人生充斥了太多意外。<br>我其实很不想回复，因为在现实生活中我逃避伪装惯了，我从来没有向外界叙述过父亲的结局，这样大家便会以为我的父亲是进行式而不是过去式。<br>原来即使网络上匿了名，我依旧没有勇气坦然地说出爸爸最终的结果，我依旧我不想面对不想承认。  </p><blockquote><blockquote><p>我从来不说那个字，这样爸爸就一直存在。<br>大家的回复我都有认真看，希望所有人健康快乐每一天。<br>开心的地方或许就是我的爸爸还在，还陪伴着我的家人。  </p></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记-小孩子与成年人</title>
      <link href="/2023/03/12/%E6%97%A5%E8%AE%B0/%E6%97%A5%E8%AE%B0-%E5%B0%8F%E5%AD%A9%E5%AD%90%E4%B8%8E%E6%88%90%E5%B9%B4%E4%BA%BA/"/>
      <url>/2023/03/12/%E6%97%A5%E8%AE%B0/%E6%97%A5%E8%AE%B0-%E5%B0%8F%E5%AD%A9%E5%AD%90%E4%B8%8E%E6%88%90%E5%B9%B4%E4%BA%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="日记感悟"><a href="#日记感悟" class="headerlink" title="日记感悟"></a>日记感悟</h1><h2 id="小孩子与成年人"><a href="#小孩子与成年人" class="headerlink" title="小孩子与成年人"></a>小孩子与成年人</h2><p>小孩子更多的，言必行。<br>这一点很大程度是因为教育小孩子的时候我们都是期望小孩子立刻做出反应（比如，让小孩子叫妈妈，期望小孩子立刻叫妈妈）<br>，这就养成了小孩子的言必行的习惯。我称之为言必行。小孩子的善恶没有那么清晰，他们的世界更多的是情感的冲动与本能的反馈。<br>  即使在现在，我也还记得我小的时候有做过一个梦，梦里的内容大概是我从楼上顺着墙壁跑了下去，仿佛墙壁是倾斜的。我当时真的有站在板凳上打开窗户，从书房的窗户往下望，想要尝试跑下去。但是楼坡度似乎太高了，想了下感觉好像跑不了，放弃了奔跑。但是这个冲动一直保留在我的心里，在此之后我又有多次往下望，期待着楼倾斜一点，我就可以很cool的跑下去了。现在想想很不可思议。自己真跑下去就没有现在的我了。当死约束我的并不是世俗的情感教条，更多的是本能的冲动与理智。<br>  小孩子想到一出就是一出，它们真真正正的会立刻去实现，不像成年人因为疲惫等原因拖延，去放弃。<br>  当成年人对小孩子做出承诺的时候，小孩子就会相信了，因为它们的世界就是这样的。所有的话终将应验，所有的事情都尝试去完成，不可以不去做出。失败能够接受，成功也可以相信。但是不去做是他们想不明白的。成年人那么强大，它们完成这个不是很简单吗，怎么不去完成呢？况且小孩子做出了付出，努力却得不到回报，这更加深了小孩子的困惑，乃至委屈。这是另一种世界观与自己的世界观的碰撞。碰撞产生思考，思考让人成熟。剧烈的碰撞也会损坏小孩子的价值判断。它们原本的思考能力不足，只能想到，父母是坏人，想不到父母也有自己的苦衷，这个苦衷是年幼的它们所缺失的信息。没有信息就考虑不到这一层次。坏人的结论也合情合理，它们有了判断就会去做，是实践，真的是坏人，我该怎么去应对。所以成年人教育小孩的时候要经常引导小孩去记忆，去思考。有了记忆之后才能够思考。思考的多了，之后才可以思考更深的层次。  </p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Form操作-全屏显示</title>
      <link href="/2023/03/12/WinForm/Form%E6%93%8D%E4%BD%9C-%E5%85%A8%E5%B1%8F%E6%98%BE%E7%A4%BA/"/>
      <url>/2023/03/12/WinForm/Form%E6%93%8D%E4%BD%9C-%E5%85%A8%E5%B1%8F%E6%98%BE%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="winform全屏显示"><a href="#winform全屏显示" class="headerlink" title="winform全屏显示"></a>winform全屏显示</h1><p>本来觉得很简单，但是实际好像每那么容易  </p><h2 id="原本winform状态。"><a href="#原本winform状态。" class="headerlink" title="原本winform状态。"></a>原本winform状态。</h2><p>mainForm中包含一个panel用于页面切换。<br>panel.controls.add(homeForm)<br>panel.controls.add(editForm)<br>homeform与editform都具有图片  </p><h2 id="实现方案。"><a href="#实现方案。" class="headerlink" title="实现方案。"></a>实现方案。</h2><h3 id="原理解释"><a href="#原理解释" class="headerlink" title="原理解释"></a>原理解释</h3><ol><li>创建公共变量Form frm</li><li>设置frm&#x3D;new homeform(),</li><li>设置frm.size与panel的size相同.这样保证即便切换页面后内部的页面与panel大小一直一致。</li><li>设置frm.size与panel_rasize绑定，即panel的size变化与frm.size相关联。<br>设置homeForm的属性：</li></ol><h3 id="代码呈现"><a href="#代码呈现" class="headerlink" title="代码呈现"></a>代码呈现</h3><p>MainForm</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">Form frm;</span><br><span class="line">System.Drawing.Size frmSize;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">panell_Rasize</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (frm != <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        frm.Size = <span class="keyword">this</span>.mainPanel.Size;</span><br><span class="line">        frmSize = frm.Size;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1ToolStripMenuItem_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    mainPanel.Controls.Clear();</span><br><span class="line">    <span class="comment">//HomeForm homeForm = new HomeForm(plc);</span></span><br><span class="line">    <span class="comment">//homeForm.Location = new Point(0, 0);</span></span><br><span class="line">    <span class="comment">//homeForm.Show();</span></span><br><span class="line">    <span class="comment">//homeForm.TopLevel = false;</span></span><br><span class="line">    <span class="comment">//mainPanel.Controls.Add(homeForm);</span></span><br><span class="line">    mainPanel.BackColor = Color.Red;</span><br><span class="line">    frm = <span class="keyword">new</span> HomeForm(plc);</span><br><span class="line">    frm.Size = frmSize;</span><br><span class="line">    frm.Location = <span class="keyword">new</span> Point(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    frm.Show();</span><br><span class="line">    frm.TopLevel = <span class="literal">false</span>;</span><br><span class="line">    mainPanel.Controls.Add(frm);</span><br><span class="line">    <span class="keyword">this</span>.mainPanel.Resize += <span class="keyword">new</span> EventHandler(panell_Rasize);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>HomeForm</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//属性页</span></span><br><span class="line"><span class="comment">//这个属性的设置是因为似乎因为图片的原因，导致在显示的时候缩放不一样。</span></span><br><span class="line"><span class="comment">//即panel.size==homeForm.size但是home.size并不能显示完全。</span></span><br><span class="line">homeForm.AutoScaleModel=Dpi</span><br><span class="line">windowsState=Maximized</span><br><span class="line">startPosition=centerScreen</span><br><span class="line"><span class="comment">//确保form中每个控件的anchor都是下面</span></span><br><span class="line"><span class="comment">//这个属性类似css中的top。bottom等如果同时有上下会拉长，这一点不太一样。</span></span><br><span class="line">anchor=None</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Form操作 </category>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Form操作 </tag>
            
            <tag> 工作技巧 </tag>
            
            <tag> 全屏显示 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Form操作-切换页面</title>
      <link href="/2023/03/12/WinForm/Form%E6%93%8D%E4%BD%9C-%E5%88%87%E6%8D%A2%E9%A1%B5%E9%9D%A2/"/>
      <url>/2023/03/12/WinForm/Form%E6%93%8D%E4%BD%9C-%E5%88%87%E6%8D%A2%E9%A1%B5%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="WInform切换页面"><a href="#WInform切换页面" class="headerlink" title="WInform切换页面"></a>WInform切换页面</h1><ol><li>首先有一个主界面mainForm</li><li>设置一个Panel：mainPanel</li><li>创建新的form：form1</li><li>form1的属性FormBorderStyle设置为None，</li><li>form1的属性Size设置与panel1的size相同<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mainPanel.Controls.Clear();</span><br><span class="line">form1Form wiEditForm = <span class="keyword">new</span> form1Form();</span><br><span class="line">wiEditForm.Show();</span><br><span class="line">wiEditForm.Location = <span class="keyword">new</span> Point(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">wiEditForm.TopLevel = <span class="literal">false</span>;</span><br><span class="line">mainPanel.Controls.Add(wiEditForm);</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Form操作 </category>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Form操作 </tag>
            
            <tag> 工作技巧 </tag>
            
            <tag> 切换页面 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-知错就改（一）</title>
      <link href="/2023/03/12/%E5%89%8D%E7%AB%AF/vue/Vue-%E7%9F%A5%E9%94%99%E5%B0%B1%E6%94%B9%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2023/03/12/%E5%89%8D%E7%AB%AF/vue/Vue-%E7%9F%A5%E9%94%99%E5%B0%B1%E6%94%B9%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>Vue知错就改-2</p><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>在同时启用了 “preserveValueImports” 和 “isolatedModules” 时，必须使用仅类型导入进行导入。ts(1444)</p><h2 id="出错场景"><a href="#出错场景" class="headerlink" title="出错场景"></a>出错场景</h2><p>vscode<br>引入echarts，但是import部分提示上述错误</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> type &#123; <span class="title class_">ECharts</span>, <span class="title class_">EChartsOption</span>,init&#125; <span class="keyword">from</span> <span class="string">&#x27;echarts&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p> 类型和值放在一个ts文件中，在vite 中会提示错误.<br> 所以将类型与值分开。<br> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">import</span> &#123; init&#125; <span class="keyword">from</span> <span class="string">&#x27;echarts&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> type &#123; <span class="title class_">ECharts</span>, <span class="title class_">EChartsOption</span>,&#125; <span class="keyword">from</span> <span class="string">&#x27;echarts&#x27;</span>;</span><br></pre></td></tr></table></figure></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>网上直接复制的坑</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> 知错就改 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 知错就改 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务器-内网穿透等</title>
      <link href="/2023/03/12/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/%E6%9C%8D%E5%8A%A1%E5%99%A8-%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%AD%89/"/>
      <url>/2023/03/12/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/%E6%9C%8D%E5%8A%A1%E5%99%A8-%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%AD%89/</url>
      
        <content type="html"><![CDATA[<h1 id="内网穿透实现远程登陆"><a href="#内网穿透实现远程登陆" class="headerlink" title="内网穿透实现远程登陆"></a>内网穿透实现远程登陆</h1><p>远程登录，windows其实只需要电脑的IP与电脑设置的登陆账号密码。<br>最大的问题其实就是IP在由于IPV4资源的紧张，很少能够拿到一个固定的IP。大部分的IP其实都是一个内网IP，没有一个公网IP。公网IP似乎可以通过申请得到（动态的，需要经常解析）。但是其实还是可以做一个内网穿透来实现差不多的功能。<br>从晚上找到的内网穿透的方案。Sakura frp.登陆注册，远程端口3389.<br><a herf="https://zhuanlan.zhihu.com/p/115826053" title="内网穿透">参考文章</a><br><a herf="https://zhuanlan.zhihu.com/p/63661477" title="内网穿透">参考文章2</a><br></br><br>这篇文章使用的软件是cpolar，(可能需要配置环境路径，看评论区，最新版是不需要了。)  </p>]]></content>
      
      
      <categories>
          
          <category> 内网穿透 </category>
          
          <category> 远程登陆 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内网穿透 </tag>
            
            <tag> 远程登陆 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记-彩礼</title>
      <link href="/2023/03/12/%E6%97%A5%E8%AE%B0/%E6%97%A5%E8%AE%B0-%E5%BD%A9%E7%A4%BC/"/>
      <url>/2023/03/12/%E6%97%A5%E8%AE%B0/%E6%97%A5%E8%AE%B0-%E5%BD%A9%E7%A4%BC/</url>
      
        <content type="html"><![CDATA[<p>段子：</p><ol><li>已知上海富豪赚国内外的钱→江西妹妹赚上海富豪的钱→亲戚再吸她血→然后去大城市买房买车大消费→最后振兴了整个江西省经济。论发展速度，这种模式比起济南深圳的生育政策快多了。搞成功了形成经济内循环，也就是先富带动后富，最后实现共同富裕。</li><li>foo &#x3D;&#x3D;bar ? foo : bar(如果和老婆意见相同听我的，如果不同，听老婆的)</li><li>鸭嘴兽既可以产蛋，又可以产奶，是为数不多可以依靠自己制作蛋挞的生物。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-基础组件-实战学习（一）</title>
      <link href="/2023/03/12/%E5%89%8D%E7%AB%AF/vue/Vue-%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6-%E5%AE%9E%E6%88%98%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2023/03/12/%E5%89%8D%E7%AB%AF/vue/Vue-%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6-%E5%AE%9E%E6%88%98%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue实战学习（一）"><a href="#Vue实战学习（一）" class="headerlink" title="Vue实战学习（一）"></a>Vue实战学习（一）</h1><p>有一些经常用的数据格式</p><h2 id="创建空列表"><a href="#创建空列表" class="headerlink" title="创建空列表"></a>创建空列表</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">plcTable</span>:plcInfos[] = <span class="title function_">reactive</span>([])</span><br><span class="line"><span class="keyword">interface</span> plcInfos&#123;</span><br><span class="line">    <span class="attr">plcId</span>:<span class="built_in">string</span></span><br><span class="line">    <span class="attr">name</span>:<span class="built_in">string</span></span><br><span class="line">    <span class="attr">info</span>:<span class="built_in">string</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二次确认弹窗"><a href="#二次确认弹窗" class="headerlink" title="二次确认弹窗"></a>二次确认弹窗</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">ElMessageBox</span>.<span class="title function_">confirm</span>(</span><br><span class="line">    <span class="string">&#x27;This routing will be deleted&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Warning&#x27;</span>,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">confirmButtonText</span>: <span class="string">&#x27;OK&#x27;</span>,</span><br><span class="line">        <span class="attr">cancelButtonText</span>: <span class="string">&#x27;Cancel&#x27;</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line"><span class="comment">//若确认，执行的内容</span></span><br><span class="line"><span class="comment">//。。。。。。</span></span><br><span class="line">&#125;).<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line"><span class="comment">//若取消，执行的内容</span></span><br><span class="line">        <span class="title class_">ElMessage</span>(&#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;info&#x27;</span>,</span><br><span class="line">            <span class="attr">message</span>: <span class="string">&#x27;Delete canceled&#x27;</span>,</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><h2 id="post请求"><a href="#post请求" class="headerlink" title="post请求"></a>post请求</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">request.<span class="title function_">post</span>(<span class="string">&quot;/Login/CheckLoginUsers&quot;</span>, row.<span class="property">id</span>).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (res.<span class="property">status</span> == <span class="number">200</span>) &#123;</span><br><span class="line">        resInfo = res.<span class="property">data</span></span><br><span class="line">        <span class="keyword">if</span> (resInfo.<span class="property">success</span>) &#123;</span><br><span class="line">            <span class="title class_">ElMessage</span>(&#123;</span><br><span class="line">                <span class="attr">message</span>: <span class="string">&#x27;Delect succeeded.&#x27;</span>,</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">            &#125;)</span><br><span class="line">            tableData = resInfo.<span class="property">content</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title class_">ElMessage</span>.<span class="title function_">error</span>(resInfo.<span class="property">message</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="title class_">ElMessage</span>.<span class="title function_">error</span>(<span class="string">&#x27;please check the network, etc.&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="form表单确认"><a href="#form表单确认" class="headerlink" title="form表单确认"></a>form表单确认</h2><h3 id="form-内容以及对应按键"><a href="#form-内容以及对应按键" class="headerlink" title="form 内容以及对应按键"></a>form 内容以及对应按键</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">//form设置ref，绑定rules，设置prop绑定对应项目</span><br><span class="line">                <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">ref</span>=<span class="string">&quot;plcFormRef&quot;</span> <span class="attr">:model</span>=<span class="string">&quot;plcForm&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;rules&quot;</span> <span class="attr">label-width</span>=<span class="string">&quot;120px&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;port&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;port&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model.number</span>=<span class="string">&quot;plcForm.port&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;phoneNo&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;rackNo&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model.number</span>=<span class="string">&quot;plcForm.rackNo&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;describe&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;describe&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;plcForm.describe&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//设置dialogConfirm把ref作为参数</span><br><span class="line">                 <span class="tag">&lt;<span class="name">template</span> #<span class="attr">footer</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;dialog-footer&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;dialogVisible = false; dialogCancel()&quot;</span>&gt;</span>Cancel<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;dialogVisible = false; dialogConfirm(plcFormRef,plcForm)&quot;</span>&gt;</span></span><br><span class="line">                            Confirm</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="设置rules"><a href="#设置rules" class="headerlink" title="设置rules"></a>设置rules</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//form中虽然设置了，但是在script中还是要声明这个变量</span></span><br><span class="line"><span class="keyword">const</span> plcFormRef = ref&lt;<span class="title class_">FormInstance</span>&gt;()</span><br><span class="line"><span class="comment">//自定义的rules</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">validatePort</span> = (<span class="params"><span class="attr">rule</span>: <span class="built_in">any</span>, <span class="attr">value</span>: <span class="built_in">any</span>, <span class="attr">callback</span>: <span class="built_in">any</span></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="title class_">Number</span>.<span class="title function_">isInteger</span>(value)) &#123;</span><br><span class="line">    <span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Please input digits&#x27;</span>))</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">callback</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">validateRackNo</span> = (<span class="params"><span class="attr">rule</span>: <span class="built_in">any</span>, <span class="attr">value</span>: <span class="built_in">any</span>, <span class="attr">callback</span>: <span class="built_in">any</span></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="title class_">Number</span>.<span class="title function_">isInteger</span>(value)) &#123;</span><br><span class="line">    <span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Please input digits&#x27;</span>))</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">callback</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">validateSlotNo</span> = (<span class="params"><span class="attr">rule</span>: <span class="built_in">any</span>, <span class="attr">value</span>: <span class="built_in">any</span>, <span class="attr">callback</span>: <span class="built_in">any</span></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="title class_">Number</span>.<span class="title function_">isInteger</span>(value)) &#123;</span><br><span class="line">    <span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Please input digits&#x27;</span>))</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">callback</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> rules = <span class="title function_">reactive</span>(&#123;</span><br><span class="line">    <span class="attr">port</span>: [&#123; <span class="attr">require</span>:<span class="literal">true</span>,<span class="attr">validator</span>: validatePort, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;],</span><br><span class="line">  <span class="attr">rackNo</span>: [&#123; <span class="attr">validator</span>: validateRackNo, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;],</span><br><span class="line">  <span class="attr">slotNo</span>: [&#123; <span class="attr">validator</span>: validateSlotNo, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;],</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="触发方法"><a href="#触发方法" class="headerlink" title="触发方法"></a>触发方法</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!plcFormRef) <span class="keyword">return</span></span><br><span class="line">plcFormRef.<span class="title function_">validate</span>(<span class="function">(<span class="params">valid</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (valid) &#123;</span><br><span class="line"><span class="comment">//rules检验成功如何进行什么</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//rules验证失败进行的操作</span></span><br><span class="line">&#125;&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h3><p>这个出现了一些额外情况，我的input框可以选中，但是不能输入。键盘确定没问题，就是没法输入<br>经过一番折腾我把plcForm的写法有了修改。<br>旧写法：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> plcForm = reactive&lt;plcInfoUpdate&gt;(&#123;</span><br><span class="line">    <span class="attr">id</span>: -<span class="number">1</span>, <span class="attr">plcCode</span>: <span class="string">&quot;&quot;</span>, <span class="attr">ip</span>: <span class="string">&quot;&quot;</span>, <span class="attr">port</span>: <span class="number">80</span>, <span class="attr">rackNo</span>: <span class="number">0</span>, <span class="attr">slotNo</span>: <span class="number">0</span>,  <span class="attr">describe</span>: <span class="string">&quot;&quot;</span>&#125;)</span><br></pre></td></tr></table></figure><p>新写法</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> plcForm = ref&lt;plcInfoUpdate&gt;(&#123;</span><br><span class="line">    <span class="attr">id</span>: -<span class="number">1</span>, <span class="attr">plcCode</span>: <span class="string">&quot;&quot;</span>, <span class="attr">ip</span>: <span class="string">&quot;&quot;</span>, <span class="attr">port</span>: <span class="number">80</span>, <span class="attr">rackNo</span>: <span class="number">0</span>, <span class="attr">slotNo</span>: <span class="number">0</span>,  <span class="attr">describe</span>: <span class="string">&quot;&quot;</span>&#125;)</span><br></pre></td></tr></table></figure><p>问题得到了解决。  </p>]]></content>
      
      
      <categories>
          
          <category> Helper </category>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> 实战学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库-MD5加密</title>
      <link href="/2023/03/12/%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93-MD5%E5%8A%A0%E5%AF%86/"/>
      <url>/2023/03/12/%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93-MD5%E5%8A%A0%E5%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL-SQERVER-MD5加密"><a href="#SQL-SQERVER-MD5加密" class="headerlink" title="SQL SQERVER MD5加密"></a>SQL SQERVER MD5加密</h1><p>目前看到在sql server中两种md5加密方式。  </p><ul><li>通过.net的函数加密然后写入。</li><li>通过sql server自己的md5加密然后写入。</li></ul><h2 id="先加密后写入"><a href="#先加密后写入" class="headerlink" title="先加密后写入"></a>先加密后写入</h2><p>相关代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//使用MD5加密明文密码</span><br><span class="line">MD5 md5 = new MD5CryptoServiceProvider();  //实例化MD5对象</span><br><span class="line">byte[] s = md5.ComputeHash(Encoding.UTF8.GetBytes(&quot;password&quot;));   //调用ComputeHash方法将字符串进行加密处理</span><br><span class="line">string password = Convert.ToBase64String(s);      //将字节类型的数组转换为字符串,得到加密后的密码</span><br><span class="line">str = $&quot;insert into TestTable(ID, Name) values(&#x27;003&#x27;,&#x27;&#123;password&#125;&#x27;)&quot;;</span><br><span class="line">SqlCom = new SqlCommand(str, SqlCon);// 参数1：SQL语句字符串。参数2：已经打开的数据库</span><br><span class="line">Sdr.Close();</span><br><span class="line">Sdr = SqlCom.ExecuteReader();</span><br></pre></td></tr></table></figure><p>这种加密方式经过测试相同的密码结果相同。\n<br>要求，密码那一列的格式需要是varchar如果格式，主要是长度不太对，就出现报错。\n</p><h2 id="自带的sql-server-md5加密方式。"><a href="#自带的sql-server-md5加密方式。" class="headerlink" title="自带的sql server md5加密方式。"></a>自带的sql server md5加密方式。</h2><p>相关代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">str = $&quot;insert into TestTable(ID, Name) values(&#x27;005&#x27;,(select SUBSTRING( sys.fn_sqlvarbasetostr(HashBytes(&#x27;MD5&#x27;,&#x27;pasword&#x27;)),3,32)))&quot;;</span><br><span class="line">SqlCom = new SqlCommand(str, SqlCon);// 参数1：SQL语句字符串。参数2：已经打开的数据库</span><br><span class="line">Sdr.Close();</span><br><span class="line">Sdr = SqlCom.ExecuteReader();</span><br></pre></td></tr></table></figure><p>这种加密方式是通过sql server内置的加密方案进行加密。<br>中间的这个substring的确是截取部分数据。因为开头的0x并不是加密的结果<br>sys.fn_sqlvarbasetostr()这个是一个格式转换函数，将加密后的是varbinary转换为varchar类型，大写也变成了小写，但加密的数值前面两位0x并不是MD5加密后的结果部分，我们还需要使用截取函数将它去掉，获得完整MD5加密结果。<br>其实还可以用另一个函数进行截取的，不过这个是把街区的部分用空格填充。<br><code>select Stuff( sys.fn_sqlvarbasetostr(HashBytes(&#39;MD5&#39;,&#39;123456&#39;)),1,2,SPACE(2))</code><br>STUFF(expression,start,length,replace)\n</p><ul><li>第一参数就是字符串表达式，可以是常量、变量、表达式或字段等</li><li>第二个参数是截取的开始位数</li><li>第三个参数是截取的长度位数</li><li>第四个参数是替换的字符串内容<br>从Sql2008开始，MSSQL提供了hashbytes函数，该函数可以对字符串进行MD2、MD4、MD5、SHA、SHA1、SHA2_256、SHA2_512七种算法的加密<br>1.使用hashbytes函数进行加密的语法格式:<br>HASHBYTES ( ‘算法’, expression)<br>第一个参数就是使用单引号包裹起来的算法名称，这个名字可以以下七种方式中的任何一种：<br>MD2 | MD4 | MD5 | SHA | SHA1 | SHA2_256 | SHA2_512\n<br>第二个参数就是将要被加密的字符串表达式，可以是常量、变量、表达式或字段等。<br>–例如：密码是 123456<br>select HashBytes(‘MD5’,’123456’)<br>输出：0xE10ADC3949BA59ABBE56E057F20F883E<br>返回值是一个最大8000长度的varbinary。没错，返回值是varbinary，并不是直接的字符串<br>我们想要的结果，是MD5加密后的字符串，但hashbytes返回的是varbinary，这倒是没关系，有一个系统函数sys.fn_sqlvarbasetostr是专门用来将varbinary转为varchar的，当然您可以使用其它方式转换.</li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-异常学习-学习日志（9）</title>
      <link href="/2023/03/12/C%20Sharp/C%20Sharp%20%E5%BC%82%E5%B8%B8%E5%AD%A6%E4%B9%A0-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%889%EF%BC%89/"/>
      <url>/2023/03/12/C%20Sharp/C%20Sharp%20%E5%BC%82%E5%B8%B8%E5%AD%A6%E4%B9%A0-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%889%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="C-异常-Expection"><a href="#C-异常-Expection" class="headerlink" title="C#异常-Expection"></a>C#异常-Expection</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">catch</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以捕捉异常。再catch中如果还发生异常，是可以直接被抛出的。<br>eg：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">static void Main(string[] args)</span><br><span class="line">&#123;</span><br><span class="line">    int a = 10;</span><br><span class="line">    int x;</span><br><span class="line">    object o = Reflect(BitConverter.GetBytes(a));</span><br><span class="line">    Console.WriteLine(o.GetType().FullName);</span><br><span class="line">    Program program1=new Program();</span><br><span class="line">    try&#123;</span><br><span class="line">        program1.ThrowExpection();</span><br><span class="line">    &#125;</span><br><span class="line">    catch</span><br><span class="line">    &#123;</span><br><span class="line">        program1.ThrowExpection();</span><br><span class="line">        x = 10;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">public void ThrowExpection()</span><br><span class="line">&#123;</span><br><span class="line">    var expection1=new Exception(&quot;err 1&quot;);</span><br><span class="line">    throw expection1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Helper </category>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> Hepler </tag>
            
            <tag> 异常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-DataTable-学习日志（8）</title>
      <link href="/2023/03/12/C%20Sharp/C%20Sharp%20DataTable-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%888%EF%BC%89/"/>
      <url>/2023/03/12/C%20Sharp/C%20Sharp%20DataTable-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%888%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="C-基础学习DataTable"><a href="#C-基础学习DataTable" class="headerlink" title="C# 基础学习DataTable"></a>C# 基础学习DataTable</h1><p>这个数据类型我只在C#中有看过。特此学习。<br>DataTable这个数据类型<br>比较形象的描述应该是一个具有表名，列名的二维字符串表。  </p><h2 id="基本功能的表示。"><a href="#基本功能的表示。" class="headerlink" title="基本功能的表示。"></a>基本功能的表示。</h2><h3 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建一个空表</span></span><br><span class="line">DataTable dt = <span class="keyword">new</span> DataTable();</span><br><span class="line"><span class="comment">//创建一个名为&quot;Table_New&quot;的空表</span></span><br><span class="line">DataTable dt = <span class="keyword">new</span> DataTable(<span class="string">&quot;Table_New&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="创建列"><a href="#创建列" class="headerlink" title="创建列"></a>创建列</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.创建空列</span></span><br><span class="line">DataColumn dc = <span class="keyword">new</span> DataColumn();</span><br><span class="line">dt.Columns.Add(dc);</span><br><span class="line"><span class="comment">//2.创建带列名和类型名的列(两种方式任选其一)</span></span><br><span class="line">dt.Columns.Add(<span class="string">&quot;column0&quot;</span>, System.Type.GetType(<span class="string">&quot;System.String&quot;</span>));</span><br><span class="line">dt.Columns.Add(<span class="string">&quot;column0&quot;</span>, <span class="keyword">typeof</span>(String));</span><br><span class="line"><span class="comment">//3.通过列架构添加列</span></span><br><span class="line">DataColumn dc = <span class="keyword">new</span> DataColumn(<span class="string">&quot;column1&quot;</span>,System.Type.GetType(<span class="string">&quot;System.DateTime&quot;</span>));</span><br><span class="line">DataColumn dc = <span class="keyword">new</span> DataColumn(<span class="string">&quot;column1&quot;</span>, <span class="keyword">typeof</span>(DateTime));</span><br><span class="line">dt.Columns.Add(dc);</span><br></pre></td></tr></table></figure><h3 id="创建行"><a href="#创建行" class="headerlink" title="创建行"></a>创建行</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.创建空列</span></span><br><span class="line">DataColumn dc = <span class="keyword">new</span> DataColumn();</span><br><span class="line">dt.Columns.Add(dc);</span><br><span class="line"><span class="comment">//2.创建带列名和类型名的列(两种方式任选其一)</span></span><br><span class="line">dt.Columns.Add(<span class="string">&quot;column0&quot;</span>, System.Type.GetType(<span class="string">&quot;System.String&quot;</span>));</span><br><span class="line">dt.Columns.Add(<span class="string">&quot;column0&quot;</span>, <span class="keyword">typeof</span>(String));</span><br><span class="line"><span class="comment">//3.通过列架构添加列</span></span><br><span class="line">DataColumn dc = <span class="keyword">new</span> DataColumn(<span class="string">&quot;column1&quot;</span>,System.Type.GetType(<span class="string">&quot;System.DateTime&quot;</span>));</span><br><span class="line">DataColumn dc = <span class="keyword">new</span> DataColumn(<span class="string">&quot;column1&quot;</span>, <span class="keyword">typeof</span>(DateTime));</span><br><span class="line">dt.Columns.Add(dc);</span><br></pre></td></tr></table></figure><h3 id="赋值与取值"><a href="#赋值与取值" class="headerlink" title="赋值与取值"></a>赋值与取值</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.创建空列</span></span><br><span class="line">DataColumn dc = <span class="keyword">new</span> DataColumn();</span><br><span class="line">dt.Columns.Add(dc);</span><br><span class="line"><span class="comment">//2.创建带列名和类型名的列(两种方式任选其一)</span></span><br><span class="line">dt.Columns.Add(<span class="string">&quot;column0&quot;</span>, System.Type.GetType(<span class="string">&quot;System.String&quot;</span>));</span><br><span class="line">dt.Columns.Add(<span class="string">&quot;column0&quot;</span>, <span class="keyword">typeof</span>(String));</span><br><span class="line"><span class="comment">//3.通过列架构添加列</span></span><br><span class="line">DataColumn dc = <span class="keyword">new</span> DataColumn(<span class="string">&quot;column1&quot;</span>,System.Type.GetType(<span class="string">&quot;System.DateTime&quot;</span>));</span><br><span class="line">DataColumn dc = <span class="keyword">new</span> DataColumn(<span class="string">&quot;column1&quot;</span>, <span class="keyword">typeof</span>(DateTime));</span><br><span class="line">dt.Columns.Add(dc);</span><br></pre></td></tr></table></figure><h3 id="删除行"><a href="#删除行" class="headerlink" title="删除行"></a>删除行</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.创建空列</span></span><br><span class="line">DataColumn dc = <span class="keyword">new</span> DataColumn();</span><br><span class="line">dt.Columns.Add(dc);</span><br><span class="line"><span class="comment">//2.创建带列名和类型名的列(两种方式任选其一)</span></span><br><span class="line">dt.Columns.Add(<span class="string">&quot;column0&quot;</span>, System.Type.GetType(<span class="string">&quot;System.String&quot;</span>));</span><br><span class="line">dt.Columns.Add(<span class="string">&quot;column0&quot;</span>, <span class="keyword">typeof</span>(String));</span><br><span class="line"><span class="comment">//3.通过列架构添加列</span></span><br><span class="line">DataColumn dc = <span class="keyword">new</span> DataColumn(<span class="string">&quot;column1&quot;</span>,System.Type.GetType(<span class="string">&quot;System.DateTime&quot;</span>));</span><br><span class="line">DataColumn dc = <span class="keyword">new</span> DataColumn(<span class="string">&quot;column1&quot;</span>, <span class="keyword">typeof</span>(DateTime));</span><br><span class="line">dt.Columns.Add(dc);</span><br></pre></td></tr></table></figure><h3 id="赋值表"><a href="#赋值表" class="headerlink" title="赋值表"></a>赋值表</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//复制表，同时复制了表结构和表中的数据</span></span><br><span class="line">DataTable dtNew = <span class="keyword">new</span> DataTable();</span><br><span class="line">dtNew = dt.Copy();</span><br><span class="line"><span class="comment">//复制表</span></span><br><span class="line">DataTable dtNew = dt.Copy();  <span class="comment">//复制dt表数据结构</span></span><br><span class="line">dtNew.Clear()  <span class="comment">//清空数据</span></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; dt.Rows.Count; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (条件语句)</span><br><span class="line">    &#123;</span><br><span class="line">         dtNew.Rows.Add(dt.Rows[i].ItemArray);  <span class="comment">//添加数据行</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//克隆表，只是复制了表结构，不包括数据</span></span><br><span class="line">DataTable dtNew = <span class="keyword">new</span> DataTable();</span><br><span class="line">dtNew = dt.Clone();</span><br><span class="line"><span class="comment">//如果只需要某个表中的某一行</span></span><br><span class="line">DataTable dtNew = <span class="keyword">new</span> DataTable();</span><br><span class="line">dtNew = dt.Copy();</span><br><span class="line">dtNew.Rows.Clear();<span class="comment">//清空表数据</span></span><br><span class="line">dtNew.ImportRow(dt.Rows[<span class="number">0</span>]);<span class="comment">//这是加入的是第一行</span></span><br></pre></td></tr></table></figure><h3 id="表排序"><a href="#表排序" class="headerlink" title="表排序"></a>表排序</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DataTable dt = <span class="keyword">new</span> DataTable();<span class="comment">//创建表</span></span><br><span class="line">dt.Columns.Add(<span class="string">&quot;ID&quot;</span>, <span class="keyword">typeof</span>(Int32));<span class="comment">//添加列</span></span><br><span class="line">dt.Columns.Add(<span class="string">&quot;Name&quot;</span>, <span class="keyword">typeof</span>(String));</span><br><span class="line">dt.Columns.Add(<span class="string">&quot;Age&quot;</span>, <span class="keyword">typeof</span>(Int32));</span><br><span class="line">dt.Rows.Add(<span class="keyword">new</span> <span class="built_in">object</span>[] &#123; <span class="number">1</span>, <span class="string">&quot;张三&quot;</span> ,<span class="number">20</span>&#125;);<span class="comment">//添加行</span></span><br><span class="line">dt.Rows.Add(<span class="keyword">new</span> <span class="built_in">object</span>[] &#123; <span class="number">2</span>, <span class="string">&quot;李四&quot;</span> ,<span class="number">25</span>&#125;);</span><br><span class="line">dt.Rows.Add(<span class="keyword">new</span> <span class="built_in">object</span>[] &#123; <span class="number">3</span>, <span class="string">&quot;王五&quot;</span> ,<span class="number">30</span>&#125;);</span><br><span class="line">DataView dv = dt.DefaultView;<span class="comment">//获取表视图</span></span><br><span class="line">dv.Sort = <span class="string">&quot;ID DESC&quot;</span>;<span class="comment">//按照ID倒序排序</span></span><br><span class="line">dv.ToTable();<span class="comment">//转为表</span></span><br></pre></td></tr></table></figure><h3 id="筛选行"><a href="#筛选行" class="headerlink" title="筛选行"></a>筛选行</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//选择column1列值为空的行的集合</span></span><br><span class="line">DataRow[] drs = dt.Select(<span class="string">&quot;column1 is null&quot;</span>);</span><br><span class="line"><span class="comment">//选择column0列值为&quot;李四&quot;的行的集合</span></span><br><span class="line">DataRow[] drs = dt.Select(<span class="string">&quot;column0 = &#x27;李四&#x27;&quot;</span>);</span><br><span class="line"><span class="comment">//筛选column0列值中有&quot;张&quot;的行的集合(模糊查询)</span></span><br><span class="line">DataRow[] drs = dt.Select(<span class="string">&quot;column0 like &#x27;张%&#x27;&quot;</span>);<span class="comment">//如果的多条件筛选，可以加 and 或 or</span></span><br><span class="line"><span class="comment">//筛选column0列值中有&quot;张&quot;的行的集合并按column1降序排序</span></span><br><span class="line">DataRow[] drs = dt.Select(<span class="string">&quot;column0 like &#x27;张%&#x27;&quot;</span>, <span class="string">&quot;column1 DESC&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="读取csv实例"><a href="#读取csv实例" class="headerlink" title="读取csv实例"></a>读取csv实例</h2><p>根据特点，它可以用于读取csv文件中的内容，并存储在dataTable中.<br>如果直接使用CsvHelper，那样是存储在一个<code>List&lt;Object&gt;</code>中<br>以下是例子：  </p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Diagnostics;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Nestar.Helpers</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SpreadSheetHelper</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 将DataTable中数据写入到表格文件中</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;Table&quot;&gt;</span>源数据的DataTable<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;FullPath&quot;&gt;</span>文件路径<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;LineSeparator&quot;&gt;</span>行分隔符<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;FieldDelimiter&quot;&gt;</span>列分隔符<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SaveDataTableToSpreadsheet</span>(<span class="params">DataTable Table, <span class="built_in">string</span> FullPath, <span class="built_in">string</span> LineSeparator, <span class="built_in">string</span> FieldDelimiter </span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            FileInfo fileInfo = <span class="keyword">new</span> FileInfo(FullPath);</span><br><span class="line">            <span class="keyword">if</span> (!fileInfo.Directory.Exists)</span><br><span class="line">            &#123;</span><br><span class="line">                fileInfo.Directory.Create();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">using</span> (FileStream fs = <span class="keyword">new</span> FileStream(FullPath, FileMode.Create, FileAccess.Write))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">using</span> (StreamWriter sw = <span class="keyword">new</span> StreamWriter(fs, Encoding.Default))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">string</span> data = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    <span class="comment">//写出列名称</span></span><br><span class="line">                    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; Table.Columns.Count; i++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        data += Table.Columns[i].ColumnName.ToString();</span><br><span class="line">                        <span class="keyword">if</span> (i &lt; Table.Columns.Count - <span class="number">1</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                            data += FieldDelimiter;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    sw.Write(data + LineSeparator);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//写出各行数据</span></span><br><span class="line">                    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; Table.Rows.Count; i++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        data = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                        <span class="built_in">bool</span> IsEmptyLine = <span class="literal">true</span>;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; Table.Columns.Count; j++)</span><br><span class="line">                        &#123;</span><br><span class="line">                            IsEmptyLine = IsEmptyLine &amp;&amp; <span class="built_in">string</span>.IsNullOrEmpty(Table.Rows[i][j].ToString());</span><br><span class="line">                            data += Table.Rows[i][j].ToString();</span><br><span class="line">                            <span class="keyword">if</span> (j &lt; Table.Columns.Count - <span class="number">1</span>)</span><br><span class="line">                            &#123;</span><br><span class="line">                                data += FieldDelimiter;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span> (!IsEmptyLine)</span><br><span class="line">                        &#123;</span><br><span class="line">                            sw.Write(data + LineSeparator);</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                    sw.Flush();</span><br><span class="line">                    sw.Close();</span><br><span class="line">                &#125;</span><br><span class="line">                fs.Close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 将DataTable中数据写入到CSV文件中</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;Table&quot;&gt;</span>源数据的DataTable<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;FullPath&quot;&gt;</span>CSV文件路径<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SaveDataTableToCSV</span>(<span class="params">DataTable Table, <span class="built_in">string</span> FullPath</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            SaveDataTableToSpreadsheet(Table, FullPath, <span class="string">&quot;\r\n&quot;</span>, <span class="string">&quot;,&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 将表格文件的数据读取到DataTable中</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;FilePath&quot;&gt;</span>表格文件路径<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>返回读取了表格数据的DataTable<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;LineSeparator&quot;&gt;</span>行分隔符<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;FieldDelimiter&quot;&gt;</span>列分隔符<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DataTable <span class="title">OpenSpreadsheetAsDataTable</span>(<span class="params"><span class="built_in">string</span> FilePath, <span class="built_in">string</span> LineSeparator, <span class="built_in">string</span> FieldDelimiter</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            DataTable dataTable = <span class="keyword">new</span> DataTable();</span><br><span class="line">            <span class="keyword">if</span> (!<span class="built_in">string</span>.IsNullOrEmpty(FilePath))</span><br><span class="line">            &#123;</span><br><span class="line">                Encoding encoding = GetType(FilePath);</span><br><span class="line">                <span class="keyword">using</span> (FileStream fs = <span class="keyword">new</span> FileStream(FilePath, FileMode.Open, FileAccess.Read))</span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">using</span> (StreamReader sr = <span class="keyword">new</span> StreamReader(fs, encoding))</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">string</span> fileContent = sr.ReadToEnd();</span><br><span class="line">                        <span class="built_in">string</span>[] strLines = fileContent.Split(<span class="keyword">new</span> <span class="built_in">string</span>[] &#123; LineSeparator &#125;, StringSplitOptions.RemoveEmptyEntries);</span><br><span class="line"></span><br><span class="line">                        <span class="comment">//记录每行记录中的各字段内容</span></span><br><span class="line">                        <span class="built_in">string</span>[] tableHead = <span class="literal">null</span>;</span><br><span class="line">                        <span class="built_in">string</span>[] fields = <span class="literal">null</span>;</span><br><span class="line">                        <span class="comment">//标示列数</span></span><br><span class="line">                        <span class="built_in">int</span> columnCount = <span class="number">0</span>;</span><br><span class="line">                        <span class="comment">//标示是否是读取的第一行</span></span><br><span class="line">                        <span class="built_in">bool</span> isFirstLine = <span class="literal">true</span>;</span><br><span class="line">                        <span class="keyword">try</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">foreach</span> (<span class="built_in">string</span> sline <span class="keyword">in</span> strLines)</span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="keyword">if</span> (!<span class="built_in">string</span>.IsNullOrEmpty(sline))</span><br><span class="line">                                &#123;</span><br><span class="line">                                    <span class="keyword">if</span> (isFirstLine)</span><br><span class="line">                                    &#123;</span><br><span class="line">                                        isFirstLine = !isFirstLine;</span><br><span class="line">                                        tableHead = sline.Split(<span class="keyword">new</span> <span class="built_in">string</span>[] &#123; FieldDelimiter &#125;, StringSplitOptions.RemoveEmptyEntries);</span><br><span class="line">                                        columnCount = tableHead.Length;</span><br><span class="line">                                        <span class="keyword">foreach</span> (<span class="built_in">string</span> head <span class="keyword">in</span> tableHead)</span><br><span class="line">                                        &#123;</span><br><span class="line">                                            dataTable.Columns.Add(head);</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">else</span></span><br><span class="line">                                    &#123;</span><br><span class="line">                                        fields = sline.Split(<span class="keyword">new</span> <span class="built_in">string</span>[] &#123; FieldDelimiter &#125;,StringSplitOptions.None);</span><br><span class="line">                                        DataRow dr = dataTable.NewRow();</span><br><span class="line">                                        <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; columnCount; j++)</span><br><span class="line">                                        &#123;</span><br><span class="line">                                            dr[j] = fields[j];</span><br><span class="line">                                        &#125;</span><br><span class="line">                                        dataTable.Rows.Add(dr);</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">catch</span></span><br><span class="line">                        &#123; &#125;</span><br><span class="line">                        sr.Close();</span><br><span class="line">                    &#125;</span><br><span class="line">                    fs.Close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> dataTable;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 将CSV文件的数据读取到DataTable中</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;FilePath&quot;&gt;</span>CSV文件路径<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>返回读取了CSV数据的DataTable<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DataTable <span class="title">OpenCSVAsDataTable</span>(<span class="params"><span class="built_in">string</span> FilePath</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> OpenSpreadsheetAsDataTable(FilePath, <span class="string">&quot;\r\n&quot;</span>, <span class="string">&quot;,&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">AppendToCSV</span>(<span class="params"><span class="built_in">string</span> FilePath, System.Collections.IEnumerable Fields</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">bool</span> retVal;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">string</span> dir = Path.GetDirectoryName(FilePath);</span><br><span class="line">                <span class="keyword">if</span> (!Directory.Exists(dir))</span><br><span class="line">                &#123;</span><br><span class="line">                    Directory.CreateDirectory(dir);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">using</span> (FileStream fs = <span class="keyword">new</span> FileStream(FilePath, FileMode.Append, FileAccess.Write))</span><br><span class="line">                &#123;</span><br><span class="line">                    Debug.Print(fs.Length.ToString());</span><br><span class="line">                    <span class="keyword">using</span> (StreamWriter sw = <span class="keyword">new</span> StreamWriter(fs))</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">string</span> context = <span class="built_in">string</span>.Empty;</span><br><span class="line">                        <span class="keyword">foreach</span> (<span class="built_in">object</span> field <span class="keyword">in</span> Fields)</span><br><span class="line">                        &#123;</span><br><span class="line">                            context += field.ToString() + <span class="string">&quot;,&quot;</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        context = context.TrimEnd(<span class="string">&#x27;,&#x27;</span>);</span><br><span class="line">                        sw.Write(context + <span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">                        sw.Close();</span><br><span class="line">                    &#125;</span><br><span class="line">                    fs.Close();</span><br><span class="line">                &#125;</span><br><span class="line">                retVal = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span></span><br><span class="line">            &#123;</span><br><span class="line">                retVal = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> retVal;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 给定文件的路径，读取文件的二进制数据，判断文件的编码类型  </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;FileName&quot;&gt;</span>文件路径<span class="doctag">&lt;/param&gt;</span>  </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>文件的编码类型<span class="doctag">&lt;/returns&gt;</span>  </span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Encoding <span class="title">GetType</span>(<span class="params"><span class="built_in">string</span> FileName</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            FileStream fs = <span class="keyword">new</span> FileStream(FileName, FileMode.Open, FileAccess.Read);</span><br><span class="line">            Encoding r = GetType(fs);</span><br><span class="line">            fs.Close();</span><br><span class="line">            <span class="keyword">return</span> r;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 通过给定的文件流，判断文件的编码类型  </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;fileStream&quot;&gt;</span>文件流<span class="doctag">&lt;/param&gt;</span>  </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>文件的编码类型<span class="doctag">&lt;/returns&gt;</span>  </span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Encoding <span class="title">GetType</span>(<span class="params">FileStream fileStream</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">byte</span>[] Unicode = <span class="keyword">new</span> <span class="built_in">byte</span>[] &#123; <span class="number">0xFF</span>, <span class="number">0xFE</span>, <span class="number">0x41</span> &#125;;</span><br><span class="line">            <span class="built_in">byte</span>[] UnicodeBIG = <span class="keyword">new</span> <span class="built_in">byte</span>[] &#123; <span class="number">0xFE</span>, <span class="number">0xFF</span>, <span class="number">0x00</span> &#125;;</span><br><span class="line">            <span class="built_in">byte</span>[] UTF8 = <span class="keyword">new</span> <span class="built_in">byte</span>[] &#123; <span class="number">0xEF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span> &#125;; <span class="comment">//带BOM  </span></span><br><span class="line">            Encoding retVal = Encoding.Default;</span><br><span class="line"></span><br><span class="line">            BinaryReader r = <span class="keyword">new</span> BinaryReader(fileStream, Encoding.Default);</span><br><span class="line">            <span class="built_in">int</span>.TryParse(fileStream.Length.ToString(), <span class="keyword">out</span> <span class="built_in">int</span> i);</span><br><span class="line">            <span class="built_in">byte</span>[] ss = r.ReadBytes(i);</span><br><span class="line">            <span class="keyword">if</span> (IsUTF8Bytes(ss) || (ss[<span class="number">0</span>] == <span class="number">0xEF</span> &amp;&amp; ss[<span class="number">1</span>] == <span class="number">0xBB</span> &amp;&amp; ss[<span class="number">2</span>] == <span class="number">0xBF</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                retVal = Encoding.UTF8;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (ss[<span class="number">0</span>] == <span class="number">0xFE</span> &amp;&amp; ss[<span class="number">1</span>] == <span class="number">0xFF</span> &amp;&amp; ss[<span class="number">2</span>] == <span class="number">0x00</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                retVal = Encoding.BigEndianUnicode;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (ss[<span class="number">0</span>] == <span class="number">0xFF</span> &amp;&amp; ss[<span class="number">1</span>] == <span class="number">0xFE</span> &amp;&amp; ss[<span class="number">2</span>] == <span class="number">0x41</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                retVal = Encoding.Unicode;</span><br><span class="line">            &#125;</span><br><span class="line">            r.Close();</span><br><span class="line">            <span class="keyword">return</span> retVal;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 判断是否是不带 BOM 的 UTF8 格式  </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;data&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span>  </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span>  </span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">IsUTF8Bytes</span>(<span class="params"><span class="built_in">byte</span>[] data</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> charByteCounter = <span class="number">1</span>;  <span class="comment">//计算当前正分析的字符应还有的字节数  </span></span><br><span class="line">            <span class="built_in">byte</span> curByte; <span class="comment">//当前分析的字节.  </span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; data.Length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                curByte = data[i];</span><br><span class="line">                <span class="keyword">if</span> (charByteCounter == <span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (curByte &gt;= <span class="number">0x80</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="comment">//判断当前  </span></span><br><span class="line">                        <span class="keyword">while</span> (((curByte &lt;&lt;= <span class="number">1</span>) &amp; <span class="number">0x80</span>) != <span class="number">0</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                            charByteCounter++;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">//标记位首位若为非0 则至少以2个1开始 如:110XXXXX...........1111110X　  </span></span><br><span class="line">                        <span class="keyword">if</span> (charByteCounter == <span class="number">1</span> || charByteCounter &gt; <span class="number">6</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//若是UTF-8 此时第一位必须为1  </span></span><br><span class="line">                    <span class="keyword">if</span> ((curByte &amp; <span class="number">0xC0</span>) != <span class="number">0x80</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    charByteCounter--;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (charByteCounter &gt; <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;非预期的byte格式&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Helper </category>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> Hepler </tag>
            
            <tag> DataTable </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库-基础sql语句</title>
      <link href="/2023/03/12/%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%9F%BA%E7%A1%80sql%E8%AF%AD%E5%8F%A5/"/>
      <url>/2023/03/12/%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%9F%BA%E7%A1%80sql%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<p>SQL学习复习<br>常见的SQL语句：  </p><h1 id="基础SQL语句"><a href="#基础SQL语句" class="headerlink" title="基础SQL语句"></a>基础SQL语句</h1><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE database-name</span><br></pre></td></tr></table></figure><h2 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database dbname</span><br></pre></td></tr></table></figure><h2 id="创建新表"><a href="#创建新表" class="headerlink" title="创建新表"></a>创建新表</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">create table <span class="title">tabname</span>(<span class="params">col1 type1 [<span class="keyword">not</span> <span class="literal">null</span>] [primary key],col2 type2 [<span class="keyword">not</span> <span class="literal">null</span>],..</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">　　--根据已有的表创建新表：</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">　　A：create table tab_new like <span class="title">tab_old</span> (<span class="params">使用旧表创建新表</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">　　B：create table tab_new <span class="keyword">as</span> <span class="keyword">select</span> col1,col2… <span class="keyword">from</span> tab_old definition only</span></span><br></pre></td></tr></table></figure><p>下面是在C#中遇见的如何创建新表而不与旧表重复</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str = <span class="string">&quot;IF not exists (select * from sysobjects where name=&#x27;Chinese&#x27; and xtype=&#x27;U&#x27;) Create Table Chinese (id char(6),name varchar(10))&quot;</span>;</span><br></pre></td></tr></table></figure><h2 id="删除新表"><a href="#删除新表" class="headerlink" title="删除新表"></a>删除新表</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop table tabname</span><br></pre></td></tr></table></figure><h2 id="数据表中新增一列"><a href="#数据表中新增一列" class="headerlink" title="数据表中新增一列"></a>数据表中新增一列</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Alter table tabname <span class="keyword">add</span> column col type</span><br><span class="line">--注：列增加后将不能删除。DB2中列加上后数据类型也不能改变，唯一能改变的是增加varchar类型的长度。</span><br></pre></td></tr></table></figure><h2 id="数据表中删除一列"><a href="#数据表中删除一列" class="headerlink" title="数据表中删除一列"></a>数据表中删除一列</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"><span class="meta">## 查询信息</span></span><br><span class="line">```C<span class="meta">#</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> table1 <span class="keyword">where</span> 范围</span><br></pre></td></tr></table></figure><h2 id="插入信息"><a href="#插入信息" class="headerlink" title="插入信息"></a>插入信息</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">insert <span class="keyword">into</span> <span class="title">table1</span>(<span class="params">field1,field2</span>) <span class="title">values</span>(<span class="params">value1,value2</span>)</span></span><br></pre></td></tr></table></figure><p>补充说明：如何添加一个md5加密措施</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str = <span class="string">$&quot;insert into TestTable(ID, Name) values(&#x27;005&#x27;,     (select SUBSTRING( sys.fn_sqlvarbasetostr(HashBytes(&#x27;MD5&#x27;,&#x27;pasword&#x27;)),3,32))</span></span><br></pre></td></tr></table></figure><p>SUBSTRING()截取字符串。<br>sys.fn_sqlvarbasetostr()转换格式<br>HashBytes(‘MD5’,’pasword’)MD5加密  </p><h2 id="删除信息"><a href="#删除信息" class="headerlink" title="删除信息"></a>删除信息</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete <span class="keyword">from</span> table1 <span class="keyword">where</span> 范围</span><br></pre></td></tr></table></figure><h2 id="更新信息"><a href="#更新信息" class="headerlink" title="更新信息"></a>更新信息</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update table1 <span class="keyword">set</span> field1=value1 <span class="keyword">where</span> 范围</span><br></pre></td></tr></table></figure><h2 id="关于定位信息的一些辅助功能。"><a href="#关于定位信息的一些辅助功能。" class="headerlink" title="关于定位信息的一些辅助功能。"></a>关于定位信息的一些辅助功能。</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"><span class="meta">### 排序</span></span><br><span class="line">```C<span class="meta">#</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> table1 order <span class="keyword">by</span> field1,field2 [desc]</span><br></pre></td></tr></table></figure><h3 id="总数"><a href="#总数" class="headerlink" title="总数"></a>总数</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> count <span class="keyword">as</span> totalcount <span class="keyword">from</span> table1</span><br></pre></td></tr></table></figure><h3 id="求和"><a href="#求和" class="headerlink" title="求和"></a>求和</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">select</span> <span class="title">sum</span>(<span class="params">field1</span>) <span class="keyword">as</span> sumvalue <span class="keyword">from</span> table1</span></span><br></pre></td></tr></table></figure><h3 id="平均"><a href="#平均" class="headerlink" title="平均"></a>平均</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">select</span> <span class="title">avg</span>(<span class="params">field1</span>) <span class="keyword">as</span> avgvalue <span class="keyword">from</span> table1</span></span><br></pre></td></tr></table></figure><h3 id="最大"><a href="#最大" class="headerlink" title="最大"></a>最大</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">select</span> <span class="title">max</span>(<span class="params">field1</span>) <span class="keyword">as</span> maxvalue <span class="keyword">from</span> table1</span></span><br></pre></td></tr></table></figure><h3 id="最小"><a href="#最小" class="headerlink" title="最小"></a>最小</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">select</span> <span class="title">min</span>(<span class="params">field1</span>) <span class="keyword">as</span> maxvalue <span class="keyword">from</span> table1</span></span><br></pre></td></tr></table></figure><h3 id="like查找"><a href="#like查找" class="headerlink" title="like查找"></a>like查找</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> table1 <span class="keyword">where</span> field1 like ’%value1%’</span><br></pre></td></tr></table></figure><h2 id="添加主键"><a href="#添加主键" class="headerlink" title="添加主键"></a>添加主键</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Alter table tabname <span class="keyword">add</span> primary <span class="title">key</span>(<span class="params">col</span>)</span></span><br><span class="line"><span class="function">--说明：删除主键： Alter table tabname drop primary <span class="title">key</span>(<span class="params">col</span>)</span></span><br></pre></td></tr></table></figure><h2 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">create [unique] <span class="function">index idxname <span class="keyword">on</span> <span class="title">tabname</span>(<span class="params">col….</span>)</span></span><br><span class="line"><span class="function">--删除索引：drop index idxname</span></span><br></pre></td></tr></table></figure><h2 id="创建视图"><a href="#创建视图" class="headerlink" title="创建视图"></a>创建视图</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">create view viewname <span class="keyword">as</span> <span class="keyword">select</span> statement</span><br><span class="line">--删除索引：drop view viewname</span><br></pre></td></tr></table></figure><h1 id="左右连接的区别"><a href="#左右连接的区别" class="headerlink" title="左右连接的区别"></a>左右连接的区别</h1><p>左连接就是左边的表中的结果全部会在结果中出现。如果有左表有，但是右边表无的结果，会出现在null的结果代替。左边的表不加以限制。<br>内连接（自然连接）只会出现两个表都有的结果。<br>全外连接是两个表的结果都会出现在最终的结果中。即包括左右连接的结果。（笛卡尔积的数据量）<br>例如，A&#x3D;{a,b},B&#x3D;{0,1,2},则<br>AxB&#x3D;{&lt;a,o&gt;,&lt;a,1&gt;,&lt;a,2&gt;,&lt;b,0&gt;,&lt;b,1&gt;,&lt;b,2&gt;,}<br>BxA&#x3D;{&lt;0,a&gt;,&lt;0,b&gt;,&lt;1,a&gt;,&lt;1,b&gt;,&lt;2,a&gt;,&lt;2,b&gt;}  </p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>装机-内存缓存</title>
      <link href="/2023/03/12/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/%E8%A3%85%E6%9C%BA-%E5%86%85%E5%AD%98%E7%BC%93%E5%AD%98/"/>
      <url>/2023/03/12/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/%E8%A3%85%E6%9C%BA-%E5%86%85%E5%AD%98%E7%BC%93%E5%AD%98/</url>
      
        <content type="html"><![CDATA[<h1 id="内存，缓存，堆，栈之间的关系"><a href="#内存，缓存，堆，栈之间的关系" class="headerlink" title="内存，缓存，堆，栈之间的关系"></a>内存，缓存，堆，栈之间的关系</h1><h2 id="先说栈和堆"><a href="#先说栈和堆" class="headerlink" title="先说栈和堆"></a>先说栈和堆</h2><p>栈和堆都是放在内存里的，没错就是RAM，通常所说的内存条！<br>因为程序运行就是在运行在内存里的！  </p><h2 id="栈和堆有什么区别？"><a href="#栈和堆有什么区别？" class="headerlink" title="栈和堆有什么区别？"></a>栈和堆有什么区别？</h2><p>栈：栈的大小是静态的，是编译时就知道的，比如数组的大小，每个程序允许申请的栈大小是有上限的，数组申请过大，会导致栈溢出！<br>堆：堆的大小是动态的，程序运行是动态申请的，不固定，比如new对象的个数和大小！需要自己手动释放，不然会导致内存泄漏！  </p><h2 id="缓存："><a href="#缓存：" class="headerlink" title="缓存："></a>缓存：</h2><p>分为两种：程序缓存和CPU缓存<br>程序缓存：就是所说的缓冲区！栈和堆都属于程序缓存！让数据保存在内存中，加快程序计算效率的！（说法：栈属于一级缓存、堆属于二级缓存）<br>CPU缓存：这是硬件层次缓存，处于内存条和CPU之间，以为比如CPU的L1 L2，L3等缓存机制，因为CPU缓存比CPU读内存数据更快！用于存放热点数据，数据如何分级存放有自己的算法。  </p>]]></content>
      
      
      <categories>
          
          <category> 装机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 装机 </tag>
            
            <tag> 内存，缓存，堆，栈之间的关系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记-无糖可乐想喝就喝？</title>
      <link href="/2023/03/12/%E6%97%A5%E8%AE%B0/%E6%97%A5%E8%AE%B0-%E6%97%A0%E7%B3%96%E5%8F%AF%E4%B9%90%E6%83%B3%E5%96%9D%E5%B0%B1%E5%96%9D%EF%BC%9F/"/>
      <url>/2023/03/12/%E6%97%A5%E8%AE%B0/%E6%97%A5%E8%AE%B0-%E6%97%A0%E7%B3%96%E5%8F%AF%E4%B9%90%E6%83%B3%E5%96%9D%E5%B0%B1%E5%96%9D%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="无糖可乐想喝就喝？"><a href="#无糖可乐想喝就喝？" class="headerlink" title="无糖可乐想喝就喝？"></a>无糖可乐想喝就喝？</h1><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>今天在想减肥的时候，突然想起来了无糖可乐。之前一直和父母在喝饮料的问题上争执不休，自己觉得无糖可乐完全可以喝。<br>特别是减肥的时候，不仅是快乐，还有健康。<br>但是搜索下来的结果优点出乎意料。  </p><h2 id="依据"><a href="#依据" class="headerlink" title="依据"></a>依据</h2><ol><li>有的回答说，喝完脑子认为摄入糖类，胰岛素升高，导致身体将原本的血糖通过脂肪存储起来，让自己对于糖类的渴求增加。普通可乐这个增加是很少的。这样长期的欺骗，会导致二型糖尿病的风险增加。<br>而我父亲就有二型糖尿病，所以我直接感觉到了不对。但是也有回答是说饮用后不会有太大的血糖的变化。但是更多的回答是有血糖的变化的。包括知乎中一个一型糖尿病的自我检测，有升高，但是不如主食的变化明显。  </li><li>不仅如此，有的文章中提到有2017年一个澳洲的研究者明确发现，这种甜味剂可以导致血糖的升高，导致二型糖尿病的发生。这个影响是源自，扰乱我们的肠道有益菌的方式，仅仅食用两周就有很明显的影响。  </li><li>除去这些简单的影响，还有需要注意的可乐中的磷酸还是会有导致骨质疏松的风险。  </li><li>除此以外，有的文章说国标说无糖可乐一天不超过1000ml就好，我觉得这个在上面的说法后变得无力。这个就像烟酒，因为市场太大与人们意愿，这个国标就很无力。还说少喝酒，在身体的排毒下的危害不大。这岂不是异曲同工之妙？</li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>因此，可以做出总结，<br>无糖可乐是不可以说随便想喝就喝的。糖尿病人也很明显不能喝啊。亏得我还考虑过要不要以后真的确诊糖尿病的时候全靠无糖可乐续命。<br>能少喝还是少喝，找什么平替呢？不如来点茶与咖啡。  </p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记2023-3-8</title>
      <link href="/2023/03/12/%E6%97%A5%E8%AE%B0/%E6%97%A5%E8%AE%B02023-3-8/"/>
      <url>/2023/03/12/%E6%97%A5%E8%AE%B0/%E6%97%A5%E8%AE%B02023-3-8/</url>
      
        <content type="html"><![CDATA[<h1 id="横渠四句"><a href="#横渠四句" class="headerlink" title="横渠四句"></a>横渠四句</h1><blockquote><p>为天地立心<br>为生民立命<br>为往圣继绝学<br>为万世开太平  </p></blockquote><p>北宋大儒张横渠说的。张载（1020年—1077年），字子厚，凤翔郿县（今陕西眉县）横渠镇人，北宋思想家、教育家、理学创始人之一。世称横渠先生，尊称张子，封先贤，奉祀孔庙西庑第38位。其“为天地立心，为生民立命，为往圣继绝学，为万世开太平”的名言被当代哲学家冯友兰称作“横渠四句”，因其言简意宏，历代传颂不衰。  </p><h2 id="自身理解："><a href="#自身理解：" class="headerlink" title="自身理解："></a>自身理解：</h2><p>构建社会价值观。天地无心，但人有心。人这个整体的心就是社会的价值观，天地人又为一体，所以就是构建社会价值观。<br>营造生机勃勃，百帆争渡的社会氛围。天地无常，但人可定天。人不可向命运低头，立下与天相争，与人相斗的雄心壮志。<br>在过往的学说上再完善，精简。<br>构建社会和平的基石。  </p><h2 id="这是一个时代人的目标"><a href="#这是一个时代人的目标" class="headerlink" title="这是一个时代人的目标"></a>这是一个时代人的目标</h2><p>从社会的价值观,个人的价值观,（不随波逐流，在社会的价值中去冲出命运的枷锁，给社会带来变量。）<br>变量有好有坏，成熟的社会，坏变量会更多。<br>但是可以通过社会价值观去引导，去压制，好的变量需要知识的灌溉才能实现。坏的变量会被社会磨灭，碾碎。社会需要的的创新价值是在巨人的肩膀上去创新。  所以小时候的压制还是利大于弊的，这段时间是依靠社会的硬实力，铁血手段，暴打，训斥等。不能隐忍住的被抛弃。<br>成年后，这种社会的压制被放宽，还在前行车上的人意识到了社会的力量，心生畏惧。这短时间就是依靠社会的软实力去实现磨灭价值。<br>中间插一段为什么小时候要暴力，长大后才会软方案。我觉得人类小的时候都是从认识自己到认识世界。一开始都是以自我为中心，至少中国传统的教育方案是不断加深这个自我为中心的认识，我饿了，有人来喂我，我渴了有人喂水。我上厕所也有人帮忙，因此小时候只有暴力才是真正的，自我为中心是对于外界没有那么多的畏惧，或者说是认识不足，很难感受到。<br>过去的价值,（过去留给我们的最重要的是知识，精神或者说信念，基建）<br>未来的目标（不·假大空·很舒服，我不知道未来会是什么样，但是我在过去的日子里，知道和平很好。我想把这个留给你啊）  </p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>装机-基本知识</title>
      <link href="/2023/03/12/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/%E8%A3%85%E6%9C%BA-%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86/"/>
      <url>/2023/03/12/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/%E8%A3%85%E6%9C%BA-%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="装机知识"><a href="#装机知识" class="headerlink" title="装机知识"></a>装机知识</h1><p>总结以下自己看到的装机知识。<br>首先最影响电脑性能的几样东西。   </p><ul><li>CPU</li><li>主板</li><li>显卡</li><li>内存<br>一些装机需要的东西。  </li><li>机箱</li><li>电源</li><li>硬盘</li><li>散热</li><li>显示器<br>下面针对不同的东西然后细细考虑。</li></ul><h2 id="显卡"><a href="#显卡" class="headerlink" title="显卡"></a>显卡</h2><p>显卡控制显示器屏幕的显示内容。<br>显卡品牌基本可以分为两大阵营：N卡与A卡<br>Steam2022年二月硬件统计N卡75.4%<br>显卡又可以分为  </p><ul><li>集成显卡</li><li>独立显卡</li><li>核心显卡</li><li>双显卡</li></ul><h3 id="集成显卡"><a href="#集成显卡" class="headerlink" title="集成显卡"></a>集成显卡</h3><p>比较老的产品，现在被淘汰。占用内存<br>集成在老式的主板上面。<br>个人PC基本使用核心显卡  </p><h3 id="核心显卡"><a href="#核心显卡" class="headerlink" title="核心显卡"></a>核心显卡</h3><p>其实也属于集成显卡，但是比较特殊。<br>他是集成在CPU中。<br>普通办公，看看剧就挺合适的。  </p><h3 id="独立显卡"><a href="#独立显卡" class="headerlink" title="独立显卡"></a>独立显卡</h3><p>插在主板的PCI显卡卡槽，价格贵但是高性价比。<br>适合游戏用户  </p><h3 id="双显卡"><a href="#双显卡" class="headerlink" title="双显卡"></a>双显卡</h3><p>其实也比较常见，比如你有核心显卡，但是你又再后续玩游戏时候买了独立显卡。<br>这不就是双显卡了嘛。<br>双卡交火，就是两个独立显卡。  </p><h3 id="显卡的带宽与缓存"><a href="#显卡的带宽与缓存" class="headerlink" title="显卡的带宽与缓存"></a>显卡的带宽与缓存</h3><p>有些内容还是需要装机进行补充的。<br>首先补充下有时候看到吐槽显卡的位宽<br>显卡位宽+缓存决定显卡带宽<br>屏幕的分辨率吧需要更高的显卡带宽<br>显卡的算力还是好玩的。<br>显卡与显示器就是一个池子运到另外的池子里<br>显卡算力是一个池子，算力越高水压越高。<br>带宽是水管的粗细。<br>屏幕那边是通过屏幕的分辨率来决定接头的粗细。<br>如果屏幕的分辨率吧很高4k，那样带宽的水管就比接头细，也就是其实损失了部分的性能，没有完全展现出来显卡的性能。<br>如果一个性能更小，但是带宽更大一些的，岂不是同样时间和上面这个显卡给的水一样多，但是它性能弱啊。  </p><p>根据木桶效应，最终的效果是由最短的那一节来决定的。所以在一定状态下3060 g6x是可以和4060ti 8g打一打的。前者的带宽更高，后者的算力更强，价格也是更高  </p><h3 id="购买建议"><a href="#购买建议" class="headerlink" title="购买建议"></a>购买建议</h3><table><thead><tr><th>品类</th><th>价格</th><th>是否为矿</th><th>推荐与原因</th></tr></thead><tbody><tr><td>3050</td><td>1899</td><td>无矿</td><td>不推荐，&lt;&#x3D;2060 12g但价格更贵</td></tr><tr><td>3060 8g</td><td>2399</td><td>无矿</td><td>不推荐，&lt;&#x3D;2060 12g但价格更贵</td></tr><tr><td>3060 12g</td><td>不清楚</td><td>矿渣</td><td>不推荐</td></tr><tr><td>2060 12g</td><td>新1800，二手1000-1400</td><td>矿渣</td><td>二手900感觉可以搞，矿渣品质</td></tr><tr><td>3060 ti</td><td>2900</td><td>不知道</td><td>好像价格略贵了</td></tr></tbody></table><h2 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h2><p>计算机的运算核心与控制核心。  </p><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><ul><li>intel系列</li><li>AMD系列<br>Celeron（赛扬）、Pentium（奔腾）和Core（酷睿）从低端到高端<br>AMD系列：Semporn（闪龙）Athlon（速龙）和 羿龙系列 从低端到高端</li></ul><h3 id="CPU的性能参数"><a href="#CPU的性能参数" class="headerlink" title="CPU的性能参数"></a>CPU的性能参数</h3><ul><li>主频</li><li>外频</li><li>缓存<br>主频就是运算速度<br>外频就是CPU的基准频率。超频就是超过这个外频。<br>缓存的结构和大小非常影响CPU的速度。<br>Intel的CPU型号后面的含义  </li><li>M代表标准电压cpu；</li><li>F不带核显；</li><li>U代表低电压节能的；</li><li>H是高电压的；</li><li>X代表高性能；；</li><li>Q代表至高性能级别；</li><li>Y代表超低电压的；</li><li>K代表不锁倍频的处理器。<br>以上两个字母组合的，含义分别是字母的组合；</li></ul><h1 id="6-18交作业"><a href="#6-18交作业" class="headerlink" title="6.18交作业"></a>6.18交作业</h1><p>目前花费：</p><table><thead><tr><th>种类</th><th>品牌参数</th><th>价格</th><th>来源</th></tr></thead><tbody><tr><td>显示器</td><td>优派 27寸 2k VX2758-2K-PRO</td><td>914</td><td>pdd</td></tr><tr><td>主板+cpu套装</td><td>华硕H610M-a  +  i5 12400散装</td><td>1438</td><td>pdd</td></tr><tr><td>显卡</td><td>耕升RTX3060ti 追风</td><td>2503</td><td>pdd</td></tr><tr><td>内存条</td><td>金百达 音爵 3200频率 16g*2</td><td>355</td><td>pdd</td></tr><tr><td>固态</td><td>宏基掠夺者 1TB</td><td>305.73</td><td>jd</td></tr><tr><td>电源</td><td>长城金牌全模组 750W G7</td><td>437.68</td><td>pdd</td></tr><tr><td>机箱</td><td>小喆优品c2P</td><td>161</td><td>pdd</td></tr><tr><td>风扇</td><td>利民C2C-S白色 *3</td><td>52.4</td><td>pdd</td></tr><tr><td>散热器</td><td>乔思伯CR1400+支架</td><td>89</td><td>pdd</td></tr><tr><td>主板天线与wifi</td><td>英特尔AX210 基础版-8DB</td><td>86</td><td>pdd</td></tr><tr><td>总计</td><td>购买时间：2023-5.31-6.2</td><td>6341.81-50(pdd返现)&#x3D;6291.81</td><td></td></tr></tbody></table><h1 id="事后反思"><a href="#事后反思" class="headerlink" title="事后反思"></a>事后反思</h1><p>购买的时候还是有很多不足的地方在买之前没有考虑，但是实际上还是有很多可以继续深思的地方。<br>比如：</p><ol><li>内存条需要根据主板支持的频率来确定。如果有超频的需要，所以不仅仅是内存条，还要主板好。</li><li>风扇的灯光rgb与argb的区别在于后者是可以编辑灯光颜色的。</li><li>风扇argb需要主板支持argb的编程。</li><li>风扇还要考虑到大小与厚度，这个和机箱的大小息息相关。</li><li>CPU是需要自己购买CPU的散热的。</li><li>主板的接口是固态购买的时候需要相匹配的pcie 3.0与pcie 4.0。</li><li>机箱的选择还是要考虑到电源的大小，主版的大小，显卡的大小。</li><li>这个时间购买就要该下手的时候下手，不然后续很容易后悔</li></ol>]]></content>
      
      
      <categories>
          
          <category> 装机 </category>
          
          <category> 基本知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 装机 </tag>
            
            <tag> 基本知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库-三大泛式</title>
      <link href="/2023/03/12/%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93-%E4%B8%89%E5%A4%A7%E6%B3%9B%E5%BC%8F/"/>
      <url>/2023/03/12/%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93-%E4%B8%89%E5%A4%A7%E6%B3%9B%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="数据库设计的三大范式"><a href="#数据库设计的三大范式" class="headerlink" title="数据库设计的三大范式"></a>数据库设计的三大范式</h1><h2 id="第一范式"><a href="#第一范式" class="headerlink" title="第一范式"></a>第一范式</h2><p>确保每列的原子性，即所有字段不可分解<br>比如如果需要查询地址中的城市，那不能把地址查询出来再分解。<br>应该直接将地址分解后存储在数据库中。  </p><h2 id="第二范式"><a href="#第二范式" class="headerlink" title="第二范式"></a>第二范式</h2><p>确保表中的每列都与主键相关。<br>也就是在一个表中的数据都是与主键相关的。将表分开的原则。<br>在一个表中能用另一个表中的主键表示的地方，就不用自己重复存储。</p><h2 id="第三范式"><a href="#第三范式" class="headerlink" title="第三范式"></a>第三范式</h2><p>确保每列都是与主键直接相关，而不是间接相关。<br>其实也就是在第二范式的基础上，更好，更明确的选择一个表中应该有哪些相关。</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库-基础分类</title>
      <link href="/2023/03/12/%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%9F%BA%E7%A1%80%E5%88%86%E7%B1%BB/"/>
      <url>/2023/03/12/%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%9F%BA%E7%A1%80%E5%88%86%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="数据库的分类"><a href="#数据库的分类" class="headerlink" title="数据库的分类"></a>数据库的分类</h1><p><a herf="https://cloud.tencent.com/developer/article/1784274">参考博客两者区别详解</a></p><ul><li>关系型数据库（SQL）<ul><li>Oracle</li><li>MySql</li><li>Microsoft SQL Server</li><li>SQLite</li><li>PostgreSQL</li><li>IBM DB2</li></ul></li><li>非关系型数据库（NOSQL）<ul><li>键值数据库：Redis、Memcached、Riak</li><li>列族数据库：Bigtable、HBase、Cassandra</li><li>文档数据库：MongoDB、CouchDB、MarkLogic</li><li>图形数据库：Neo4j、InfoGrid</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html-基础学习-基本组件</title>
      <link href="/2023/03/12/%E5%89%8D%E7%AB%AF/html-%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0-%E5%9F%BA%E6%9C%AC%E7%BB%84%E4%BB%B6/"/>
      <url>/2023/03/12/%E5%89%8D%E7%AB%AF/html-%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0-%E5%9F%BA%E6%9C%AC%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML学习"><a href="#HTML学习" class="headerlink" title="HTML学习"></a>HTML学习</h1><h2 id="head"><a href="#head" class="headerlink" title="head"></a>head</h2><p>这个指示，此处是文档的头部。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;&lt;/head&gt;</span><br></pre></td></tr></table></figure><h3 id="1-1-mate"><a href="#1-1-mate" class="headerlink" title="1.1 mate"></a>1.1 mate</h3><p><code>&lt;mate charset=&quot;utf-8&quot;&gt;&lt;/mate&gt;</code><br>meta标签是head部的辅助性标签，提供HTML文档的元数据，不显示在页面上。  </p><h3 id="1-2-title"><a href="#1-2-title" class="headerlink" title="1.2 title"></a>1.2 title</h3><p><code>&lt;title&gt; 网页标题&lt;/title&gt;</code><br/><br>表示网页标题  </p><h2 id="body文档主体标签"><a href="#body文档主体标签" class="headerlink" title="body文档主体标签"></a>body文档主体标签</h2><p><code>&lt;body&gt;&lt;/body&gt;</code></p><h3 id="h标题标签"><a href="#h标题标签" class="headerlink" title="h标题标签"></a>h标题标签</h3><p>从1-6，一般h1用于logo  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt; h1 &lt;/h1&gt;</span><br><span class="line">&lt;h2&gt; h2 &lt;/h2&gt;</span><br></pre></td></tr></table></figure><h3 id="p段落标签"><a href="#p段落标签" class="headerlink" title="p段落标签"></a>p段落标签</h3><p>p是paragraph 单词的缩写，就像我们平常写文章一样，整个网页也可以分为若干个段落，每个新的段落都会重开一行写。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;  文本内容  &lt;/p&gt;</span><br><span class="line"> </span><br><span class="line">&lt;p align=&quot;left&quot;&gt;左对齐&lt;/p&gt;      &lt;!--align:对齐方式 left:左对齐--&gt;</span><br><span class="line"> </span><br><span class="line">&lt;p align=&quot;center&quot;&gt;居中对齐&lt;/p&gt;   &lt;!--center 居中对齐--&gt;</span><br><span class="line"> </span><br><span class="line">&lt;p align=&quot;right&quot;&gt;右对齐&lt;/p&gt;      &lt;!--right 右对齐--&gt;</span><br></pre></td></tr></table></figure><h3 id="br-换行标签"><a href="#br-换行标签" class="headerlink" title="br&#x2F;换行标签"></a>br&#x2F;换行标签</h3><p>这个两个都是换行标签，需要独立使用。<br>区别就是前一个是老的规范。<br>后一个是新的规范，新的规范（W3C&#x2F;&#x2F;DTD HTML   4.0）要求一切都应象XML那样有结束符，如果没有也要硬加一个反斜杠。象br这种不需成对使用的html符号，就成了这个样子：<br/>。<br><code>&lt;br&gt;&lt;br/&gt;</code></p><h3 id="hr-水平线，分割线"><a href="#hr-水平线，分割线" class="headerlink" title="hr&#x2F;水平线，分割线"></a>hr&#x2F;水平线，分割线</h3><p><code>&lt;hr/&gt;</code><br>详细解释：hr是horizontal单词的缩写，表示横线。水平线可用于将段落与段落隔开，使得文档结构清晰，层次分明,<hr />是单标签。这些水平线还可以通过插入水平线的图片实现  </p><h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h3><p>两种设置模式  </p><ul><li>内部样式表（style）<br>常见的使用方式。为每个部件使用配置。  </li><li>外部样式表（link）<br>这个常见用于多个网页共同的样式设置。<br>引用外部文件中的css样式两种设置都可以实现  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;标签路径&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">@import url(&quot;标签路径&quot;)</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>本质上link属于XHTML标签，@import是css提供的一种方式.<br>第二种是在全部加载完毕然后再加载。并且部分老的浏览器不支持这种css再后面提出的引用方式</li></ul><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><h4 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;Hello World!&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>另外一种方案,type可以不写的。就像上面这种。因为创始人一开始觉得还有别的编程语言，但是目前来看是没有的。所以可以直接默认就是。<br>另外还要注意的一个地方就是这种使用scr，那就不可以使用上面这种写在两个script中间的方法。写了也会被忽略掉。  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;./js/example.js&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="noscript"><a href="#noscript" class="headerlink" title="noscript"></a>noscript</h4><p>&lt;noscript&gt; 标签提供无法使用脚本时的替代内容，比方在浏览器禁用脚本时，或浏览器不支持客户端脚本时。  </p><p>&lt;noscript&gt;元素可包含普通 HTML 页面的 body 元素中能够找到的所有元素。  </p><p>只有在浏览器不支持脚本或者禁用脚本时，才会显示 &lt;noscript&gt; 元素中的内容：  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;Hello World!&quot;</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">noscript</span>&gt;</span>抱歉，你的浏览器不支持 JavaScript!<span class="tag">&lt;/<span class="name">noscript</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="区块"><a href="#区块" class="headerlink" title="区块"></a>区块</h3><h4 id="div"><a href="#div" class="headerlink" title="div"></a>div</h4><h4 id="span"><a href="#span" class="headerlink" title="span"></a>span</h4><h2 id="Css"><a href="#Css" class="headerlink" title="Css"></a>Css</h2><h3 id="id"><a href="#id" class="headerlink" title="id"></a>id</h3><p>在一个页面只能被调用一次，优先度更高<br><code>#id_name&#123;&#125;</code><br>用法：\n</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=&quot;id_name&quot;</span><br></pre></td></tr></table></figure><h3 id="class"><a href="#class" class="headerlink" title="class"></a>class</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.class_name&#123;&#125;</span><br></pre></td></tr></table></figure><p>用法：\n</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class=&quot;class_name&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> html </category>
          
          <category> 基础组件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> 基础组件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html-css-[inline-block]</title>
      <link href="/2023/03/12/%E5%89%8D%E7%AB%AF/html-css-inline-block/"/>
      <url>/2023/03/12/%E5%89%8D%E7%AB%AF/html-css-inline-block/</url>
      
        <content type="html"><![CDATA[<h1 id="Html-css知识。"><a href="#Html-css知识。" class="headerlink" title="Html-css知识。"></a>Html-css知识。</h1><h2 id="inline-block"><a href="#inline-block" class="headerlink" title="inline-block"></a>inline-block</h2> <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">display</span>:inline-block</span><br><span class="line">vertical-align: top;</span><br></pre></td></tr></table></figure><p>在inline-block情况下，虽然可以设置每个div的大小。<br>但是默认它们是会按照下方的基准线作为标准的，<br>所以可以调整基准线，让他们上方齐平<br> vertical-align: top;  </p><h2 id="prop"><a href="#prop" class="headerlink" title="prop"></a>prop</h2><p> 单向绑定，主要用于父组件给子组件来传值。<br> 单向绑定：父组件的改变子组件可以接收到。但是子组件的修改父组件不改变。<br> 使用方法<br> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> //父组件</span><br><span class="line"><span class="tag">&lt;<span class="name">child</span> <span class="attr">type</span>=<span class="string">&quot;video&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">child</span>&gt;</span></span><br><span class="line"> //子组件</span><br><span class="line">Vue.component(&#x27;child&#x27;, &#123;</span><br><span class="line">  ...</span><br><span class="line">  // 成功接收</span><br><span class="line">  props: [&#x27;type&#x27;]</span><br><span class="line">  ...</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><br> 既然是单项绑定，那肯定是不希望子组件去改变的。毕竟你改变了，父组件一改变岂不是白给。所以一般用法上是赋值给本地的属性。<br> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">props: [&#x27;message&#x27;],</span><br><span class="line">data () &#123;</span><br><span class="line">  return &#123;</span><br><span class="line">    mes: this.message</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>另外，自认为这个最常用的属性就是用于校验。<br>校验值是否为空等。但是还有的就是赋值了。  </p>]]></content>
      
      
      <categories>
          
          <category> html </category>
          
          <category> css </category>
          
          <category> inline-block </category>
          
          <category> prop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> css </tag>
            
            <tag> inline-block </tag>
            
            <tag> prop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DNS与域名解析</title>
      <link href="/2023/03/12/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/DNS%E4%B8%8E%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/"/>
      <url>/2023/03/12/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/DNS%E4%B8%8E%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1 id="DNS与域名解析"><a href="#DNS与域名解析" class="headerlink" title="DNS与域名解析"></a>DNS与域名解析</h1><p>域名解析流程。</p><ul><li>当用户在浏览器中输入<a href="http://www.qq.com域名访问该网站时,操作系统会先检查自己本地的hosts文件是否有这个网址映射关系,如果有,就先调用这个ip地址映射,完成域名解析/">www.qq.com域名访问该网站时，操作系统会先检查自己本地的hosts文件是否有这个网址映射关系，如果有，就先调用这个IP地址映射，完成域名解析</a></li><li>如果hosts里个域名的映射，则查找本地DNS解析器缓存，是否有这个网址映射关系，如果有，直接返回，完成域名解析。</li><li>如果hosts与本地DNS解析器缓存都没有相应的网址映射关系，没有这首先会找TCP&#x2F;ip参数中设置的首选DNS服务器，即本地DNS服务器，此服务器收到查询时，如果要查询的域名，包含在本地配置区域资源中，则返回解析结果给客户机，完成域名解析，此解析具有权威性。</li><li>如果要查询的域名，不由本地DNS服务器区域解析，但该服务器已缓存了此网址映射关系，则调用这个IP地址映射，完成域名解析，此解析不具有权威性</li><li>如果本地DNS服务器本地区域文件与缓存解析都失效，则根据本地DNS服务器的设置（是否设置转发器）进行查询，如果未用转发模式，本地DNS就会开始迭代查询：把请求发至13台根DNS，根DNS服务器收到请求后会判断这个域名(.com)是谁来授权管理，并会返回一个负责该顶级域名服务器的一个IP。本地DNS服务器收到IP信息后，将会联系负责.com域的这台服务器。这台负责.com域的服务器收到请求后，如果自己无法解析，它就会找一个管理.com域的下一级DNS服务器地址(qq.com)给本地DNS服务器。当本地DNS服务器收到这个地址后，就会找qq.com域服务器，重复上面的动作，进行查询，直至找到<a href="http://www.qq.com主机/">www.qq.com主机</a></li><li>如果用的是转发模式，本地DNS服务器就会开始递归查询：把请求转发至上一级DNS服务器，由上一级服务器进行解析，上一级服务器如果不能解析，或找根DNS或把转请求转至上上级，以此循环。不管是本地DNS服务器用是是转发，还是根提示，最后都是把结果返回给本地DNS服务器，由此DNS服务器再返回给客户机。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
          <category> 日常学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常学习 </tag>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-截取字节数组</title>
      <link href="/2023/03/12/C%20Sharp/C%20Sharp%20%E6%88%AA%E5%8F%96%E5%AD%97%E8%8A%82%E6%95%B0%E7%BB%84/"/>
      <url>/2023/03/12/C%20Sharp/C%20Sharp%20%E6%88%AA%E5%8F%96%E5%AD%97%E8%8A%82%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<p>字节数组截取与转换其他类型</p><h1 id="截取字节数组"><a href="#截取字节数组" class="headerlink" title="截取字节数组"></a>截取字节数组</h1><h2 id="方法一-截取位数规则"><a href="#方法一-截取位数规则" class="headerlink" title="方法一 截取位数规则"></a>方法一 截取位数规则</h2><h3 id="截取2位长度的字节数组"><a href="#截取2位长度的字节数组" class="headerlink" title="截取2位长度的字节数组"></a>截取2位长度的字节数组</h3><p>用BitConverter.ToInt16<br>例如，从第2位开始截取2个字节则 BitConverter.ToInt16(bt,2)；</p><h3 id="截取4位长度的字节数组"><a href="#截取4位长度的字节数组" class="headerlink" title="截取4位长度的字节数组"></a>截取4位长度的字节数组</h3><p>用BitConverter.ToInt32<br>例如，从第3位开始截取4个字节则 BitConverter.ToInt32(bt,3)；</p><h3 id="截取8位长度的字节数组"><a href="#截取8位长度的字节数组" class="headerlink" title="截取8位长度的字节数组"></a>截取8位长度的字节数组</h3><p>用BitConverter.ToInt64<br>例如，从第4位开始截取8个字节则 BitConverter.ToInt64(bt,4)；</p><h2 id="方法二-截取的位数不规则"><a href="#方法二-截取的位数不规则" class="headerlink" title="方法二 截取的位数不规则"></a>方法二 截取的位数不规则</h2><p>使用方法：<br>b.Skip(x).Take(y).ToArray()\n<br>例如，从第2位开始截取4个字节则 bt.Skip(2).Take(4).ToArray()；\n<br>注意这中间是使用int十进制类型，十六进制也可以的。但是直接使用字节形式也可以（即隐式转换成十进制类型），但是需要注意你原来的表示长度的数据是否真实的长度（比如是用ASCII表示的数字与直接十进制表示的长度是不一样的）。</p><h1 id="字节数组转换"><a href="#字节数组转换" class="headerlink" title="字节数组转换"></a>字节数组转换</h1><h2 id="BitConverter类"><a href="#BitConverter类" class="headerlink" title="BitConverter类"></a>BitConverter类</h2><p>这个方案可以很方便的转换一些数组，但是有些内容需要注意  </p><ul><li>BitConverter.ToInt32()需要四个字节的数组长度，不然会报错\n</li><li>BitConverter.ToString()这个单个字节就可以，但是他是直接转化，比如原来是 0x32他就会转成50.如果是使用ASCII来进行编译。需要使用System.Text.Encoding.ASCII.GetString(str)来帮助进行转化。\n</li></ul><h2 id="System-Text-Encoding-ASCII-GetString（）"><a href="#System-Text-Encoding-ASCII-GetString（）" class="headerlink" title="System.Text.Encoding.ASCII.GetString（）"></a>System.Text.Encoding.ASCII.GetString（）</h2><p>这个也可以将字节数组转换成string类型，但是这个是直接使用ASCII表示的字符的数字转换成为对应的ASCII表中对应的字符\n<br>例如0x32表示数字2,0x表示十六进制0x32即十进制的50</p><h2 id="负数转换进两个字节表示"><a href="#负数转换进两个字节表示" class="headerlink" title="负数转换进两个字节表示"></a>负数转换进两个字节表示</h2><p>通过与运算来实现.<br>支持的数字范围-32768到32767\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">int fushu = 32767;</span><br><span class="line">byte[] b1= new byte[] &#123;  (byte)(fushu &amp; 0x00ff),(byte)(fushu &gt;&gt; 8) &#125;;</span><br><span class="line">Console.WriteLine(BitConverter.ToInt16(b1));//部分版本中不支持这个写法，但是支持下个写法。</span><br><span class="line">//Console.WriteLine(BitConverter.ToInt16(new byte[] &#123;b[0],b[1]&#125;,0));</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hepler </category>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> Hepler </tag>
            
            <tag> 字节数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-字节数组格式转换</title>
      <link href="/2023/03/12/C%20Sharp/C%20Sharp%20%E5%AD%97%E8%8A%82%E6%95%B0%E7%BB%84%E6%A0%BC%E5%BC%8F%E8%BD%AC%E6%8D%A2/"/>
      <url>/2023/03/12/C%20Sharp/C%20Sharp%20%E5%AD%97%E8%8A%82%E6%95%B0%E7%BB%84%E6%A0%BC%E5%BC%8F%E8%BD%AC%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="字节数组格式转换"><a href="#字节数组格式转换" class="headerlink" title="字节数组格式转换"></a>字节数组格式转换</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>本文内容主要是关于怎么将字节数组转换成int，string，float等类型<br>主要的方案就是<br><code>BitConverter.GetBytes(true);</code><br>与<br><code>BitConverter.To***(true);</code><br>有的时候有用的方案<br><code>Encoding.UTF8.GetString()</code><br>需要注意点  </p><ul><li>BitConverter.ToInt16（）这一类都是固定几个字节，比如ToInt16固定一次读取两个字节. </li><li>BitConverter.ToInt16（）转化出来是从低字节到高字节。例如<code>202</code>转化成为<code>[CA] [00]</code>,而不是[00][CA]  </li><li>BitConverter.ToString()这个方案有问题，他是直接强行转换成对应的字符串，不考虑是否具有特殊的编码方案。比如Encoding.UTF8.GetString()这样是具有编码方法的方法。  </li><li>BitConverter.GetBytes()支持直接写入负数（比如-1）,但是byte一般来说默认是正数。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Hepler </category>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> Hepler </tag>
            
            <tag> 字节数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-TCP_Client-学习日志（7）</title>
      <link href="/2022/11/23/C%20Sharp/C%20Sharp%20TCP-Client-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%887%EF%BC%89/"/>
      <url>/2022/11/23/C%20Sharp/C%20Sharp%20TCP-Client-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%887%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="TCP连接"><a href="#TCP连接" class="headerlink" title="TCP连接"></a>TCP连接</h1><p>tcpClent</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Net;</span><br><span class="line">using System.Net.Sockets;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Threading;</span><br><span class="line"></span><br><span class="line">namespace Test.TCPClient</span><br><span class="line">&#123;</span><br><span class="line">    class Program</span><br><span class="line">    &#123;</span><br><span class="line">        static void Main(string[] args)</span><br><span class="line">        &#123;</span><br><span class="line">            //socket</span><br><span class="line">            Socket tcpClient = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);</span><br><span class="line">            //ip</span><br><span class="line">            IPAddress ipAddress = new IPAddress(new byte[] &#123; 127, 0, 0, 1 &#125;);</span><br><span class="line">            //ip + Port(端口)</span><br><span class="line">            IPEndPoint ipEndPoint = new IPEndPoint(ipAddress, 30000);</span><br><span class="line">            //连接服务器端</span><br><span class="line">            tcpClient.Connect(ipEndPoint);</span><br><span class="line">            Console.WriteLine(&quot;链接上服务器端了&quot;);</span><br><span class="line"></span><br><span class="line">            //向服务器发送消息</span><br><span class="line">            //转码为byte字节发送</span><br><span class="line">            try &#123;</span><br><span class="line">                Thread.Sleep(5000);</span><br><span class="line">                tcpClient.SendTimeout = 2000;</span><br><span class="line">                int a=tcpClient.Send(Encoding.UTF8.GetBytes(&quot;我连接上了&quot;));</span><br><span class="line">            &#125;</span><br><span class="line">            catch(Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine($&quot;&#123;ex&#125;&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            //分配1024个字节大小的内存给message</span><br><span class="line">            byte[] message = new byte[1024];</span><br><span class="line"></span><br><span class="line">            tcpClient.ReceiveTimeout = 2000;</span><br><span class="line">            int length=0;</span><br><span class="line">            //接收消息</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                length = tcpClient.Receive(message);</span><br><span class="line">            &#125;</span><br><span class="line">            catch(Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line">                if(ex.Message==  &quot;由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。&quot;)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(&quot;1053&quot;);</span><br><span class="line">                &#125;</span><br><span class="line">                var a=ex.InnerException;</span><br><span class="line">                var b=ex.GetHashCode();</span><br><span class="line">                if (ex.HResult == 1053)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(&quot;1053&quot;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            //转码为string接收</span><br><span class="line">            string data = Encoding.UTF8.GetString(message, 0, length);</span><br><span class="line">            Console.WriteLine(&quot;收到服务器消息：&quot; + data);</span><br><span class="line">            //关闭Socket</span><br><span class="line">            tcpClient.Close();</span><br><span class="line">            Console.WriteLine(&quot;Hello World!&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Helper </category>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> Hepler </tag>
            
            <tag> TCP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-TCP_server-学习日志（7）</title>
      <link href="/2022/11/23/C%20Sharp/C%20Sharp%20TCP-server-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%887%EF%BC%89/"/>
      <url>/2022/11/23/C%20Sharp/C%20Sharp%20TCP-server-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%887%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="TCPServer"><a href="#TCPServer" class="headerlink" title="TCPServer"></a>TCPServer</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">public void TcpListen()</span><br><span class="line">&#123;</span><br><span class="line">    try</span><br><span class="line">    &#123;</span><br><span class="line">       myIP = IPAddress.Parse(&quot;127.0.0.1&quot;);//要using System.Net</span><br><span class="line">        IPEndPoint MyServer = new IPEndPoint(myIP, 30000);</span><br><span class="line">        socketWatch = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);</span><br><span class="line">        socketWatch.Bind(MyServer);</span><br><span class="line">        //最大连接数</span><br><span class="line">        socketWatch.Listen(10);</span><br><span class="line">        StartListern(socketWatch);</span><br><span class="line">    &#125;</span><br><span class="line">    catch (Exception ex)</span><br><span class="line">    &#123;</span><br><span class="line">        throw ex;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">private void StartListern(Socket socket)</span><br><span class="line">&#123;</span><br><span class="line">    while (true)</span><br><span class="line">    &#123;</span><br><span class="line">        //表示接收到信息</span><br><span class="line">        Socket socketConnect = socket.Accept();</span><br><span class="line">        byte[] bytes = new byte[1024 * 1024];</span><br><span class="line">        </span><br><span class="line">        Task.Run(() =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            int reciveLength = socketConnect.Receive(bytes);</span><br><span class="line">            string reciveString = Encoding.Default.GetString(bytes);</span><br><span class="line">            Console.WriteLine(reciveString);</span><br><span class="line">            byte[] sendbytes = Encoding.Default.GetBytes(&quot;收到请返回&quot;);</span><br><span class="line">            socketConnect.Send(sendbytes);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Helper </category>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> Hepler </tag>
            
            <tag> TCP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-RPC_Server-学习日志（6）</title>
      <link href="/2022/11/23/C%20Sharp/C%20Sharp%20RPC-Server-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%886%EF%BC%89/"/>
      <url>/2022/11/23/C%20Sharp/C%20Sharp%20RPC-Server-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%886%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="C-RPC通用版本"><a href="#C-RPC通用版本" class="headerlink" title="C#-RPC通用版本"></a>C#-RPC通用版本</h1><p>双方约定好的程序有哪些</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">class XmlService : XmlRpcListenerService</span><br><span class="line">&#123;</span><br><span class="line">    [XmlRpcMethod(&quot;XmlService.Add&quot;)]</span><br><span class="line">    public int Add(int a, int b)</span><br><span class="line">    &#123;</span><br><span class="line">        return a + b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>[XMLRpcMethod(“**”)]server具有的函数的名称\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">public class Service</span><br><span class="line">&#123;</span><br><span class="line">    System.Collections.IDictionary props = new System.Collections.Hashtable();</span><br><span class="line">    HttpChannel channel;</span><br><span class="line">    public Service()</span><br><span class="line">    &#123;</span><br><span class="line">        props[&quot;name&quot;] = &quot;localhost&quot;;</span><br><span class="line">        props[&quot;port&quot;] = 7762;</span><br><span class="line">        channel = new HttpChannel(props, null, new XmlRpcServerFormatterSinkProvider());</span><br><span class="line">    &#125;</span><br><span class="line">    public bool ServiceStart()</span><br><span class="line">    &#123;</span><br><span class="line">        try</span><br><span class="line">        &#123;</span><br><span class="line">            Logger.WriteLog(&quot;服务准备开启&quot;);</span><br><span class="line">            ServiceHelper.WriteInfo(DateTime.Now + &quot;服务准备开启&quot;);</span><br><span class="line">            ChannelServices.RegisterChannel(channel, false);</span><br><span class="line">            RemotingConfiguration.RegisterWellKnownServiceType(typeof(XmlService), &quot;XmlService.rem&quot;, WellKnownObjectMode.Singleton);</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">        catch</span><br><span class="line">        &#123;</span><br><span class="line">            Logger.WriteLog(DateTime.Now+&quot;XML-RPC服务开启失败&quot;);</span><br><span class="line">            ServiceHelper.WriteInfo(&quot;XML-RPC服务开启失败&quot;);</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public void ServiceStop()</span><br><span class="line">    &#123;</span><br><span class="line">        ChannelServices.UnregisterChannel(channel);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Helper </category>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> Hepler </tag>
            
            <tag> RPC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-RPC_Client-学习日志（6）</title>
      <link href="/2022/11/23/C%20Sharp/C%20Sharp%20RPC-Client-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%886%EF%BC%89/"/>
      <url>/2022/11/23/C%20Sharp/C%20Sharp%20RPC-Client-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%886%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="C-RPC-Client"><a href="#C-RPC-Client" class="headerlink" title="C#-RPC-Client"></a>C#-RPC-Client</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">XmlRpcUrl(<span class="string">&quot;http://localhost:7762/XmlService.rem&quot;</span>)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IXmlServer</span> : <span class="title">IXmlRpcProxy</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">XmlRpcMethod(<span class="string">&quot;XmlService.Add&quot;</span>)</span>]</span><br><span class="line">    <span class="function"><span class="built_in">int</span> <span class="title">Add</span>(<span class="params"><span class="built_in">int</span> a, <span class="built_in">int</span> b</span>)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        IXmlServer proxy = XmlRpcProxyGen.Create&lt;IXmlServer&gt;();</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Synchronous call：&quot;</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;state #45 is &#123;0&#125;&quot;</span>, proxy.Add(<span class="number">12</span>,<span class="number">34</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (XmlRpcFaultException fex)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(fex.FaultString);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(ex.Message);</span><br><span class="line">    &#125;</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;到此结束&quot;</span>);</span><br><span class="line">    Console.ReadLine();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Helper </category>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> Hepler </tag>
            
            <tag> RPC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-CsvHelper-学习日志（6）</title>
      <link href="/2022/11/23/C%20Sharp/C%20Sharp%20%20CsvHelper-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%886%EF%BC%89/"/>
      <url>/2022/11/23/C%20Sharp/C%20Sharp%20%20CsvHelper-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%886%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>CsvHelper 是一个用于读写 CSV 文件的.NET库。极其快速，灵活且易于使用。\n</p><p>CsvHelper 建立在.NET Standard 2.0 之上，几乎可以在任何地方运行。\n<br>CsvHelper可以通过Nuget安装。</p><h1 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h1><table><thead><tr><th>模块</th><th>功能</th></tr></thead><tbody><tr><td>CsvHelper</td><td>读写 CSV 数据的核心类。</td></tr><tr><td>CsvHelper.Configuration</td><td>配置 CsvHelper 读写行为的类。</td></tr><tr><td>CsvHelper.Configuration.Attributes</td><td>配置 CsvHelper 的特性。</td></tr><tr><td>CsvHelper.Expressions</td><td>生成 LINQ 表达式的类。</td></tr><tr><td>CsvHelper.TypeConversion</td><td>将 CSV 字段与 .NET 类型相互转换的类。</td></tr></tbody></table><h1 id="写入"><a href="#写入" class="headerlink" title="写入"></a>写入</h1><h2 id="测试类"><a href="#测试类" class="headerlink" title="测试类"></a>测试类</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public class Foo</span><br><span class="line">&#123;</span><br><span class="line">    public int ID &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">    public string Name &#123; get; set; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="写入所有数据"><a href="#写入所有数据" class="headerlink" title="写入所有数据"></a>写入所有数据</h2><p>覆盖掉之前的数据。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">var records = new List&lt;Foo&gt;</span><br><span class="line">&#123;</span><br><span class="line">    new Foo &#123; ID = 1, Name = &quot;Tom&quot; &#125;,</span><br><span class="line">    new Foo &#123; ID = 2, Name = &quot;Jerry&quot; &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">using (var writer = new StreamWriter(&quot;foo.csv&quot;))</span><br><span class="line">&#123;</span><br><span class="line">    using (var csv = new CsvWriter(writer, CultureInfo.InvariantCulture))</span><br><span class="line">    &#123;</span><br><span class="line">        csv.WriteRecords(records);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="逐条写入"><a href="#逐条写入" class="headerlink" title="逐条写入"></a>逐条写入</h2><p>默认没有换行与标题\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">using (var writer = new StreamWriter(&quot;foo.csv&quot;))</span><br><span class="line">&#123;</span><br><span class="line">    using (var csv = new CsvWriter(writer, CultureInfo.InvariantCulture))</span><br><span class="line">    &#123;</span><br><span class="line">        foreach (var record in records)</span><br><span class="line">        &#123;</span><br><span class="line">            csv.WriteRecord(record);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>逐条写入加入标题，并且添加换行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">using (var writer = new StreamWriter(&quot;Test.csv&quot;))</span><br><span class="line">&#123;</span><br><span class="line">    using (var csv = new CsvWriter(writer, CultureInfo.InvariantCulture))</span><br><span class="line">    &#123;</span><br><span class="line">        //单独写一行的时候，不会自动添加Header，并且写一行（Header或者数据）都不会自动换行，需要手动换行。</span><br><span class="line">        csv.WriteHeader&lt;Person&gt;();//写Header</span><br><span class="line">        csv.NextRecord();//写Header后换行</span><br><span class="line">        foreach (var record in records)</span><br><span class="line">        &#123;</span><br><span class="line">            csv.WriteRecord(record);</span><br><span class="line">            csv.NextRecord();</span><br><span class="line">            //csv.WriteRecord(record);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意这个写法是覆盖掉原来文件，还可以追加写入。var writer &#x3D; new StreamWriter(“Test.csv”)的第二个参数改为true，就是追加写入。注意标题不要重复输入。</p><h2 id="逐字段写入"><a href="#逐字段写入" class="headerlink" title="逐字段写入"></a>逐字段写入</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">using (var writer = new StreamWriter(&quot;foo.csv&quot;))</span><br><span class="line">&#123;</span><br><span class="line">    using (var csv = new CsvWriter(writer, CultureInfo.InvariantCulture))</span><br><span class="line">    &#123;</span><br><span class="line">        csv.WriteHeader&lt;Foo&gt;();</span><br><span class="line">        csv.NextRecord();</span><br><span class="line"></span><br><span class="line">        foreach (var record in records)</span><br><span class="line">        &#123;</span><br><span class="line">            csv.WriteField(record.ID);</span><br><span class="line">            csv.WriteField(record.Name);</span><br><span class="line">            csv.NextRecord();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="读取"><a href="#读取" class="headerlink" title="读取"></a>读取</h1><h2 id="读取所有记录"><a href="#读取所有记录" class="headerlink" title="读取所有记录"></a>读取所有记录</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">using (var reader = new StreamReader(&quot;foo.csv&quot;))</span><br><span class="line">&#123;</span><br><span class="line">    using (var csv = new CsvReader(reader, CultureInfo.InvariantCulture))</span><br><span class="line">    &#123;</span><br><span class="line">        var records = csv.GetRecords&lt;Foo&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="逐条读取"><a href="#逐条读取" class="headerlink" title="逐条读取"></a>逐条读取</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">using (var reader = new StreamReader(&quot;foo.csv&quot;))</span><br><span class="line">&#123;</span><br><span class="line">    using (var csv = new CsvReader(reader, CultureInfo.InvariantCulture))</span><br><span class="line">    &#123;</span><br><span class="line">        while (csv.Read())</span><br><span class="line">        &#123;</span><br><span class="line">            var record = csv.GetRecord&lt;Foo&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>GetRecords&lt;T&gt; 方法通过 yield 返回一个 IEnumerable&lt;T&gt;，并不会将内容一次全部读进内存，除非调用了 ToList 或 ToArray 方法。所以这种逐条读取的写法没有太多必要。</code></pre><h2 id="读取单个字段"><a href="#读取单个字段" class="headerlink" title="读取单个字段"></a>读取单个字段</h2><p>两种方案，一种根据index，另一种根据标题。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">using (var csv = new CsvReader(reader, CultureInfo.InvariantCulture))</span><br><span class="line">&#123;</span><br><span class="line">    csv.Read();</span><br><span class="line">    csv.ReadHeader();</span><br><span class="line"></span><br><span class="line">    while (csv.Read())</span><br><span class="line">    &#123;</span><br><span class="line">    //方案1</span><br><span class="line">        var id = csv.GetField&lt;int&gt;(0);</span><br><span class="line">        //方案2</span><br><span class="line">        var name = csv.GetField&lt;string&gt;(&quot;Name&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>逐行读取时，可以不管标题行，但是，这里不行。\n</p><p>csv.Read(); 这句是读取标题，如果没有的话，while 循环第一次取到的是标题，肯定会报错。\n</p><p>csv.ReadHeader(); 这句是给标题赋值，如果没有的话，csv.GetField<string>(“Name”) 会报找不到标题。\n<br>使用 TryGetField 可以防止意外的报错。\n<br><code>csv.TryGetField(0, out int id);</code></p><h1 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h1><h2 id="Index"><a href="#Index" class="headerlink" title="Index"></a>Index</h2><p><em>Index</em>特性用于标记字段顺序。<br>在读取文件时候，如果没有标题，就只能通过顺序来确定字段。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">public class Foo</span><br><span class="line">&#123;</span><br><span class="line">    [Index(0)]</span><br><span class="line">    public int ID &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">    [Index(1)]</span><br><span class="line">    public string Name &#123; get; set; &#125;</span><br><span class="line">&#125;</span><br><span class="line">using (var reader = new StreamReader(&quot;Test.csv&quot;))</span><br><span class="line">&#123;</span><br><span class="line">    var config = new CsvConfiguration(CultureInfo.InvariantCulture)</span><br><span class="line">    &#123;</span><br><span class="line">        HasHeaderRecord = false,</span><br><span class="line">    &#125;;</span><br><span class="line">    using (var csv = new CsvReader(reader, config))</span><br><span class="line">    &#123;</span><br><span class="line">        var records_IEnumable = csv.GetRecords&lt;Foo&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>HasHeaderRecord &#x3D; false, 配置告知 CsvReader 没有标题。必须要加这一行，否则会默认第一行为标题而跳过，导致最后的结果中少了一行。如果数据量比较多，会很难发现这个 bug。当位true的时候，但是找不到合适的标题，则会报错。<br>在写入文件的时候，会按 Index 顺序写入。如果不想写入标题，也需要添加 HasHeaderRecord &#x3D; false;\n<br>以下写法已经被弃用。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">public class Foo</span><br><span class="line">&#123;</span><br><span class="line">    [Index(0)]</span><br><span class="line">    public int ID &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">    [Index(1)]</span><br><span class="line">    public string Name &#123; get; set; &#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">using (var reader = new StreamReader(&quot;foo.csv&quot;))</span><br><span class="line">&#123;</span><br><span class="line">    using (var csv = new CsvReader(reader, CultureInfo.InvariantCulture))</span><br><span class="line">    &#123;</span><br><span class="line">        csv.Configuration.HasHeaderRecord = false;</span><br><span class="line"></span><br><span class="line">        var records = csv.GetRecords&lt;Foo&gt;().ToList();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Name"><a href="#Name" class="headerlink" title="Name"></a>Name</h2><p>如果字段名称和列名不一致，可以使用 Name 属性。\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">public class Foo</span><br><span class="line">&#123;</span><br><span class="line">    [Name(&quot;id&quot;)]</span><br><span class="line">    public int ID &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">    [Name(&quot;name&quot;)]</span><br><span class="line">    public string Name &#123; get; set; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="NameIndex"><a href="#NameIndex" class="headerlink" title="NameIndex"></a>NameIndex</h2><p>NameIndex 用于处理 CSV 文件中的同名列。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public class Foo</span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    [Name(&quot;Name&quot;)]</span><br><span class="line">    [NameIndex(0)]</span><br><span class="line">    public string FirstName &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">    [Name(&quot;Name&quot;)]</span><br><span class="line">    [NameIndex(1)]</span><br><span class="line">    public string LastName &#123; get; set; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Ignore"><a href="#Ignore" class="headerlink" title="Ignore"></a>Ignore</h2><p>忽略字段</p><h2 id="Optional"><a href="#Optional" class="headerlink" title="Optional"></a>Optional</h2><p>读取时如果找不到匹配的字段，则忽略。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public class Foo</span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    [Optional]</span><br><span class="line">    public string Remarks &#123; get; set; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Default"><a href="#Default" class="headerlink" title="Default"></a>Default</h2><p>当读取的字段为空时 Default 特性可为其指定默认值。\n</p><p>Default 特性仅在读取时有效，写入时是不会将空值替换为默认值写入的。\n</p><h2 id="NullValues"><a href="#NullValues" class="headerlink" title="NullValues"></a>NullValues</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public class Foo</span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    [NullValues(&quot;None&quot;, &quot;none&quot;, &quot;Null&quot;, &quot;null&quot;)]</span><br><span class="line">    public string None &#123; get; set; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>读取文件时，若 CSV 文件中某字段的值为空，那么读取后的值是 “”，而非 null，标记 NullValues 特性后，若 CSV 文件中的某字段值为 NullValues 指定的值，则读取后为 null。</p><p>若同时标记了 Default 特性，则此特性不起作用。</p><blockquote><p>坑爹的是，在写入文件时，此特性并不起作用。因此会引起读写不一致的问题。</p></blockquote><h2 id="Constant"><a href="#Constant" class="headerlink" title="Constant"></a>Constant</h2><p>Constant 特性为字段指定一个常量值，读写时都使用此值，无论指定了什么其他映射或配置。</p><h2 id="Format"><a href="#Format" class="headerlink" title="Format"></a>Format</h2><p>Format 指定类型转换时使用的字符串格式。\n</p><p>例如数字和时间类型，我们经常会指定其格式。\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">public class Foo</span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    [Format(&quot;0.00&quot;)]</span><br><span class="line">    public decimal Amount &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">    [Format(&quot;yyyy-MM-dd HH:mm:ss&quot;)]</span><br><span class="line">    public DateTime JoinTime &#123; get; set; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="BooleanTrueValues-和-BooleanFalseValues"><a href="#BooleanTrueValues-和-BooleanFalseValues" class="headerlink" title="BooleanTrueValues 和 BooleanFalseValues"></a>BooleanTrueValues 和 BooleanFalseValues</h2><p>这两个特性用于将 bool 转换成指定的形式显示。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">public class Foo</span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    [BooleanTrueValues(&quot;yes&quot;)]</span><br><span class="line">    [BooleanFalseValues(&quot;no&quot;)]</span><br><span class="line">    public bool Vip &#123; get; set; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="NumberStyles"><a href="#NumberStyles" class="headerlink" title="NumberStyles"></a>NumberStyles</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">public class Foo</span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    [Format(&quot;X2&quot;)]</span><br><span class="line">    [NumberStyles(NumberStyles.HexNumber)]</span><br><span class="line">    public int Data &#123; get; set; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>比较有用是 NumberStyles.HexNumber 和 NumberStyles.AllowHexSpecifier，这两个枚举的作用差不多。此特性仅在读取时有效，写入时并不会转成 16 进制写入。这会导致读写不一致，可以用 Format 特性指定写入格式。</p><h1 id="映射"><a href="#映射" class="headerlink" title="映射"></a>映射</h1><p>如果无法给要映射的类添加特性，在这种情况下，可以使用 ClassMap 方式进行映射。\n</p><p>使用映射和使用特性效果是一样的，坑爹的地方也一样坑爹。以下示例用属性实现了上面特性的功能。\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">public class Foo2</span><br><span class="line">&#123;</span><br><span class="line">    public int ID &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">    public string Name &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">    public decimal Amount &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">    public DateTime JoinTime &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">    public string Msg &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">    public string Msg2 &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">    public bool Vip &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">    public string Remarks &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">    public string None &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">    public int Data &#123; get; set; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class Foo2Map : ClassMap&lt;Foo2&gt;</span><br><span class="line">&#123;</span><br><span class="line">    public Foo2Map()</span><br><span class="line">    &#123;</span><br><span class="line">        Map(m =&gt; m.ID).Index(0).Name(&quot;id&quot;);</span><br><span class="line">        Map(m =&gt; m.Name).Index(1).Name(&quot;name&quot;);</span><br><span class="line">        Map(m =&gt; m.Amount).TypeConverterOption.Format(&quot;0.00&quot;);</span><br><span class="line">        Map(m =&gt; m.JoinTime).TypeConverterOption.Format(&quot;yyyy-MM-dd HH:mm:ss&quot;);</span><br><span class="line">        Map(m =&gt; m.Msg).Default(&quot;Hello&quot;);</span><br><span class="line">        Map(m =&gt; m.Msg2).Ignore();</span><br><span class="line">        Map(m =&gt; m.Vip)</span><br><span class="line">            .TypeConverterOption.BooleanValues(true, true, new string[] &#123; &quot;yes&quot; &#125;)</span><br><span class="line">            .TypeConverterOption.BooleanValues(false, true, new string[] &#123; &quot;no&quot; &#125;);</span><br><span class="line">        Map(m =&gt; m.Remarks).Optional();</span><br><span class="line">        Map(m =&gt; m.None).TypeConverterOption.NullValues(&quot;None&quot;, &quot;none&quot;, &quot;Null&quot;, &quot;null&quot;);</span><br><span class="line">        Map(m =&gt; m.Data)</span><br><span class="line">            .TypeConverterOption.NumberStyles(NumberStyles.HexNumber)</span><br><span class="line">            .TypeConverterOption.Format(&quot;X2&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在使用映射前，需要先注册</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">csv.Configuration.RegisterClassMap&lt;Foo2Map&gt;();</span><br></pre></td></tr></table></figure><h2 id="ConvertUsing"><a href="#ConvertUsing" class="headerlink" title="ConvertUsing"></a>ConvertUsing</h2><p>ConvertUsing 允许使用一个委托方法实现类型转换。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 常数</span><br><span class="line">Map(m =&gt; m.Constant).ConvertUsing(row =&gt; 3);</span><br><span class="line"></span><br><span class="line">// 把两列聚合在一起</span><br><span class="line">Map(m =&gt; m.Name).ConvertUsing(row =&gt; $&quot;&#123;row.GetField&lt;string&gt;(&quot;FirstName&quot;)&#125; &#123;row.GetField&lt;string&gt;(&quot;LastName&quot;)&#125;&quot;);</span><br><span class="line"></span><br><span class="line">Map(m =&gt; m.Names).ConvertUsing(row =&gt; new List&lt;string&gt; &#123; row.GetField&lt;string&gt;(&quot;Name&quot;) &#125; );</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="Delimiter"><a href="#Delimiter" class="headerlink" title="Delimiter"></a>Delimiter</h2><p>分隔符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Delimiter = &quot;,&quot;;</span><br></pre></td></tr></table></figure><h2 id="HasHeaderRecord"><a href="#HasHeaderRecord" class="headerlink" title="HasHeaderRecord"></a>HasHeaderRecord</h2><p>此配置前文已经提到过，是否将第一行作为标题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HasHeaderRecord = false;</span><br></pre></td></tr></table></figure><h2 id="IgnoreBlankLines"><a href="#IgnoreBlankLines" class="headerlink" title="IgnoreBlankLines"></a>IgnoreBlankLines</h2><p>是否忽略空行，默认 true<br><code>csv.Configuration.IgnoreBlankLines = false; </code></p><h2 id="AllowComments"><a href="#AllowComments" class="headerlink" title="AllowComments"></a>AllowComments</h2><p>是否允许注释，注释以 # 开头。<br><code>csv.Configuration.AllowComments = true; </code></p><h2 id="Comment"><a href="#Comment" class="headerlink" title="Comment"></a>Comment</h2><p>获取或设置用于表示注释掉的行的字符。默认是 #。<br><code>csv.Configuration.Comment = &#39;/&#39;; </code></p><h2 id="BadDataFound"><a href="#BadDataFound" class="headerlink" title="BadDataFound"></a>BadDataFound</h2><p>设置一个函数，该函数会在数据不正确时触发，可用于记录日志。</p><h2 id="IgnoreQuotes"><a href="#IgnoreQuotes" class="headerlink" title="IgnoreQuotes"></a>IgnoreQuotes</h2><p>获取或设置一个值，该值指示在解析时是否应忽略引号并将其与其他任何字符一样对待。\n</p><p>默认是 false，如果字符串中有引号，必须是 3 个 “ 连在一起，读取到的字符串中才会有一个 “，如果是 1 个则忽略，2 个则报错。\n</p><p>如果为 true，则会将 “ 当做字符串原样返回。\n</p><p><code>csv.Configuration.IgnoreQuotes = true;</code></p><p>CsvWriter 中是没有这个属性的，一旦字符串中包含 “，写出来就是 3 个 “ 连在一起。\n</p><h2 id="TrimOptions"><a href="#TrimOptions" class="headerlink" title="TrimOptions"></a>TrimOptions</h2><p>去除字段首尾空格<br><code>csv.Configuration.TrimOptions = TrimOptions.Trim;</code></p><h2 id="PrepareHeaderForMatch"><a href="#PrepareHeaderForMatch" class="headerlink" title="PrepareHeaderForMatch"></a>PrepareHeaderForMatch</h2><p>PrepareHeaderForMatch 定义了属性名称与标题进行匹配的函数。标题和属性名称均通过该函数运行。此功能可用于删除标题中的空格，或者当标题和属性名称大小写不一致时统一大小写后比较。\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">csv.Configuration.PrepareHeaderForMatch = (string header, int index) =&gt; header.ToLower();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hepler </category>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> Csv </tag>
            
            <tag> Hepler </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#-Attribute-学习日志（5）</title>
      <link href="/2022/11/23/C%20Sharp/C%20Sharp%20Attribute-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%885%EF%BC%89/"/>
      <url>/2022/11/23/C%20Sharp/C%20Sharp%20Attribute-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%885%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="Attribute概述"><a href="#Attribute概述" class="headerlink" title="Attribute概述"></a>Attribute概述</h1><p>特性本质上是用来给代码添加额外信息的一种手段，它可以应用于类、结构、方法、构造函数等。在 C# 中，特性是继承自 Attribute 基类的类。所有继承自 Attribute 的类都可以用作给代码添加额外信息。</p><h1 id="预定义特性"><a href="#预定义特性" class="headerlink" title="预定义特性"></a>预定义特性</h1><p>一共有三种预定义的特性</p><ul><li>AttributeUsage</li><li>Conditional</li><li>Obsolete</li></ul><h2 id="AttributeUsage"><a href="#AttributeUsage" class="headerlink" title="AttributeUsage"></a>AttributeUsage</h2><p>描述了如何使用一个自定义特性类。\n<br>规定了特性可以应用到的项目的类型\n</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p>语法如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[AttributeUsage(</span><br><span class="line">   validon,</span><br><span class="line">   AllowMultiple=allowmultiple,</span><br><span class="line">   Inherited=inherited</span><br><span class="line">)]</span><br></pre></td></tr></table></figure><p>其中\n</p><ul><li>参数 validon 规定特性可被放置的语言元素。它是枚举器 AttributeTargets 的值的组合。默认值是 AttributeTargets.All。</li><li>参数 allowmultiple（可选的）为该特性的 AllowMultiple 属性（property）提供一个布尔值。如果为 true，则该特性是多用的。默认值是 false（单用的）。</li><li>参数 inherited（可选的）为该特性的 Inherited 属性（property）提供一个布尔值。如果为 true，则该特性可被派生类继承。默认值是 false（不被继承）。</li></ul><h3 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[AttributeUsage(AttributeTargets.Class |</span><br><span class="line">AttributeTargets.Constructor |</span><br><span class="line">AttributeTargets.Field |</span><br><span class="line">AttributeTargets.Method |</span><br><span class="line">AttributeTargets.Property, </span><br><span class="line">AllowMultiple = true)]</span><br></pre></td></tr></table></figure><h2 id="Conditional"><a href="#Conditional" class="headerlink" title="Conditional"></a>Conditional</h2><p>这个预定义特性标记了一个条件方法，其执行依赖于指定的预处理标识符。\n</p><p>它会引起方法调用的条件编译，取决于指定的值，比如 Debug 或 Trace。例如，当调试代码时显示变量的值。\n</p><h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><p>规定该特性的语法如下：\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[Conditional(</span><br><span class="line">   conditionalSymbol</span><br><span class="line">)]</span><br></pre></td></tr></table></figure><h3 id="使用示例-1"><a href="#使用示例-1" class="headerlink" title="使用示例"></a>使用示例</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#define DEBUG</span><br><span class="line">using System;</span><br><span class="line">using System.Diagnostics;</span><br><span class="line">public class Myclass</span><br><span class="line">&#123;</span><br><span class="line">    [Conditional(&quot;DEBUG&quot;)]</span><br><span class="line">    public static void Message(string msg)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(msg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class Test</span><br><span class="line">&#123;</span><br><span class="line">    static void function1()</span><br><span class="line">    &#123;</span><br><span class="line">        Myclass.Message(&quot;In Function 1.&quot;);</span><br><span class="line">        function2();</span><br><span class="line">    &#125;</span><br><span class="line">    static void function2()</span><br><span class="line">    &#123;</span><br><span class="line">        Myclass.Message(&quot;In Function 2.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    public static void Main()</span><br><span class="line">    &#123;</span><br><span class="line">        Myclass.Message(&quot;In Main function.&quot;);</span><br><span class="line">        function1();</span><br><span class="line">        Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译与执行，会有如下效果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">In Main function</span><br><span class="line">In Function 1</span><br><span class="line">In Function 2</span><br></pre></td></tr></table></figure><h2 id="Obsolete"><a href="#Obsolete" class="headerlink" title="Obsolete"></a>Obsolete</h2><p>这个预定义特性标记了不应被使用的程序实体。它可以让您通知编译器丢弃某个特定的目标元素。例如，当一个新方法被用在一个类中，但是您仍然想要保持类中的旧方法，您可以通过显示一个应该使用新方法，而不是旧方法的消息，来把它标记为 obsolete（过时的）。</p><h3 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h3><p>规定该特性的语法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[Obsolete(</span><br><span class="line">   message</span><br><span class="line">)]</span><br><span class="line">[Obsolete(</span><br><span class="line">   message,</span><br><span class="line">   iserror</span><br><span class="line">)]</span><br></pre></td></tr></table></figure><p>其中：\n</p><ul><li>参数 message，是一个字符串，描述项目为什么过时以及该替代使用什么。</li><li>参数 iserror，是一个布尔值。如果该值为true，编译器应把该项目的使用当作一个错误。默认值是false（编译器生成一个警告）。</li></ul><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">public class MyClass</span><br><span class="line">&#123;</span><br><span class="line">   [Obsolete(&quot;Don&#x27;t use OldMethod, use NewMethod instead&quot;, true)]</span><br><span class="line">   static void OldMethod()</span><br><span class="line">   &#123; </span><br><span class="line">      Console.WriteLine(&quot;It is the old method&quot;);</span><br><span class="line">   &#125;</span><br><span class="line">   static void NewMethod()</span><br><span class="line">   &#123; </span><br><span class="line">      Console.WriteLine(&quot;It is the new method&quot;); </span><br><span class="line">   &#125;</span><br><span class="line">   public static void Main()</span><br><span class="line">   &#123;</span><br><span class="line">      OldMethod();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>当您尝试编译该程序时，编译器会给出一个错误消息说明：\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Don&#x27;t use OldMethod, use NewMethod instead</span><br></pre></td></tr></table></figure><h1 id="创建自定义特性（Attribute）"><a href="#创建自定义特性（Attribute）" class="headerlink" title="创建自定义特性（Attribute）"></a>创建自定义特性（Attribute）</h1><p>自定义特性只需要让一个类继承Attribute类并且名称后缀是Attribute结尾即可。\n</p><h2 id="创建特性并使用"><a href="#创建特性并使用" class="headerlink" title="创建特性并使用"></a>创建特性并使用</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">class MsgAttribute : Attribute</span><br><span class="line">&#123;</span><br><span class="line">    private string msg;</span><br><span class="line">    public MyAttribute(string msg)</span><br><span class="line">    &#123;</span><br><span class="line">        this.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line">    public void ShowMsg()</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(msg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">[Msg(&quot;这是一条信息&quot;)]</span><br><span class="line">class MyClass</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="读取特性信息"><a href="#读取特性信息" class="headerlink" title="读取特性信息"></a>读取特性信息</h2><p>特性只做标识所用。不借助一些外在力量，特性其实什么用也没有。\n</p><p>若要使用特性，通常需要使用反射。例如，可以使用反射获取类的相关信息。\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">TypeInfo typeInfo = typeof(MyClass).GetTypeInfo();//获取类型信息</span><br><span class="line">MsgAttribute customAttribute = typeInfo.GetCustomAttribute&lt;MsgAttribute&gt;(); //获取特性信息，返回特性的实例对象</span><br><span class="line">customAttribute.GetName();//调用方法 控制台中输出 这是一条信息</span><br></pre></td></tr></table></figure><p>GetCustomAttribute&lt;T&gt;\n<br>泛型方法用于获取某个特定的特性，返回该特性实例，还有一个GetCustomAttributes()方法用于获取所有的特性。</p><p>特性只有使用 GetCustomAttribute 或 GetCustomAttributes，它们才会实例化。 并且每次调用都会重新实例化并返回不同的特性实例。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>特性是给类等附加一些信息，方便读取。本身几乎没有实际的功能型效果。</p>]]></content>
      
      
      <categories>
          
          <category> 日常学习 </category>
          
          <category> 基本语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> Attribute </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#-PadLeft（）,PadRight（）用法</title>
      <link href="/2022/10/27/C%20Sharp/C%20Sharp%20PadLeft%EF%BC%88%EF%BC%89-PadRight%EF%BC%88%EF%BC%89%E7%94%A8%E6%B3%95/"/>
      <url>/2022/10/27/C%20Sharp/C%20Sharp%20PadLeft%EF%BC%88%EF%BC%89-PadRight%EF%BC%88%EF%BC%89%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="C-中PadLeft（）、PadRight（）的用法"><a href="#C-中PadLeft（）、PadRight（）的用法" class="headerlink" title="C#中PadLeft（）、PadRight（）的用法"></a>C#中PadLeft（）、PadRight（）的用法</h1><p>PS\n<br>简单来说就是给字符串实现补位。\n<br>PadRight：固定长度输出，左对齐\n<br>PadLeft：固定长度输出，右对齐\n<br>参数不同，表示含义不同\n</p><h2 id="1-PadLeft-Int32-n"><a href="#1-PadLeft-Int32-n" class="headerlink" title="1).PadLeft(Int32)\n"></a>1).PadLeft(Int32)\n</h2><p>返回一个新字符串，该字符串通过在此实例中的字符左侧填充空格来达到指定的总长度，从而实现右对齐。\n</p><h2 id="2-PadLeft-Int32-Char-n"><a href="#2-PadLeft-Int32-Char-n" class="headerlink" title="2).PadLeft(Int32, Char)\n"></a>2).PadLeft(Int32, Char)\n</h2><p>返回一个新字符串，该字符串通过在此实例中的字符左侧填充指定的 Unicode 字符来达到指定的总长度，从而使这些字符右对齐。\n<br>实例：string num&#x3D;12 num.PadLeft(4, ‘0’); &#x2F;&#x2F;结果为为 ‘0012’ &#x2F;&#x2F;看字符串长度是否满足4位,不满足则在字符串左边以”0”补足)\n<br>PadLeft(int totalWidth, char paddingChar) &#x2F;&#x2F;在字符串左边用 paddingChar 补足 totalWidth 长度\n<br>PadRight(int totalWidth, char paddingChar) &#x2F;&#x2F;在字符串右边用 paddingChar 补足 totalWidth 长度\n</p><h2 id="例：-n"><a href="#例：-n" class="headerlink" title="例：\n"></a>例：\n</h2><p>示例：\n</p><ol><li>假如想输出AAAAA，可以用string.Empty.PadLeft(5,‘A’);</li><li>假如想输出：<br>可以用PadLeft实现：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for(int i=1;i&lt;=4;i++)\n</span><br><span class="line">&#123;</span><br><span class="line">Console.WriteLine(string.Empty.PadLeft(i,’*’));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>转载自：<br><a href="https://docs.microsoft.com/zh-cn/dotnet/api/system.string.padleft?redirectedfrom=MSDN&view=netframework-4.8#System_String_PadLeft_System_Int32">https://docs.microsoft.com/zh-cn/dotnet/api/system.string.padleft?redirectedfrom=MSDN&amp;view=netframework-4.8#System_String_PadLeft_System_Int32</a>_<br><a href="https://blog.csdn.net/xtfnpgy/article/details/24919145">https://blog.csdn.net/xtfnpgy/article/details/24919145</a></p>]]></content>
      
      
      <categories>
          
          <category> 日常学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> toString </tag>
            
            <tag> PadLeft() </tag>
            
            <tag> PadRight() </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Form操作-程序功能保活</title>
      <link href="/2022/10/27/WinForm/Form%E6%93%8D%E4%BD%9C-%E7%A8%8B%E5%BA%8F%E5%8A%9F%E8%83%BD%E4%BF%9D%E6%B4%BB/"/>
      <url>/2022/10/27/WinForm/Form%E6%93%8D%E4%BD%9C-%E7%A8%8B%E5%BA%8F%E5%8A%9F%E8%83%BD%E4%BF%9D%E6%B4%BB/</url>
      
        <content type="html"><![CDATA[<p>偶尔有的功能因为处理的事件过长。\n<br>需要进行延时处理，来确保进行功能不被后台直接回收\n<br>所以引用了一下函数，作用主要是界面保活\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public static bool Delay(int delayTime)</span><br><span class="line">&#123;</span><br><span class="line">    DateTime now = DateTime.Now;</span><br><span class="line">    int s;</span><br><span class="line">    do</span><br><span class="line">    &#123;</span><br><span class="line">        TimeSpan spand = DateTime.Now - now;</span><br><span class="line">        s = spand.Seconds;</span><br><span class="line">        Application.DoEvents();</span><br><span class="line">    &#125;</span><br><span class="line">    while (s &lt; delayTime);</span><br><span class="line">    return true;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 日常学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> Form </tag>
            
            <tag> 程序保活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#-字节流与图片转换</title>
      <link href="/2022/10/27/C%20Sharp/C%20Sharp%20%E5%AD%97%E8%8A%82%E6%B5%81%E4%B8%8E%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2/"/>
      <url>/2022/10/27/C%20Sharp/C%20Sharp%20%E5%AD%97%E8%8A%82%E6%B5%81%E4%B8%8E%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<p>有的时候数据传输会使用字节流的模式进行传输。\n<br>字节流到达本地之后需要进行转换来进行对应的操作。\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">            byte[] tempImgData= Encoding.Unicode.GetBytes(img.ToString());</span><br><span class="line">            MemoryStream stmBLOBData = new MemoryStream(tempImgData);</span><br><span class="line">//上面是将某种烈性转换成对应的字节流，</span><br><span class="line">//下面是将字节流转换成bitmap类型，并且保存。</span><br><span class="line">            Bitmap bt = new Bitmap，(stmBLOBData);</span><br><span class="line">            bt.Save($&quot;D:\\image\\1_&#123;DateTime.Now&#125;.png&quot;, System.Drawing.Imaging.ImageFormat.Jpeg);</span><br><span class="line">            bt.Dispose();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 日常学习 </category>
          
          <category> 字节流与图片转换 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 图片转化 </tag>
            
            <tag> 字节流 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win服务start失败</title>
      <link href="/2022/10/26/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/win%E6%9C%8D%E5%8A%A1start%E5%A4%B1%E8%B4%A5/"/>
      <url>/2022/10/26/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/win%E6%9C%8D%E5%8A%A1start%E5%A4%B1%E8%B4%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>试图加载格式不正确的程序\n</p><h1 id="出错场景"><a href="#出错场景" class="headerlink" title="出错场景"></a>出错场景</h1><p>Visual Studio 2019\n<br>尝试运行自己的win服务。\n<br>中间使用了其他人的dll-64位。\n</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>在每个项目的属性界面，将它们的目标平台都设置成为64位，于dll保持一致。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>有的时候win服务需要引用其他dll来实现某些功能。\n<br>但是在一般的情况下64位的程序与32位的程序不能只能引用对应位数的dll文件。\n<br>如果不做设置，那样win服务就是默认是32位的，在面对64位程序就会出现错误\n<br>错误提示：<br>解决方案：切换成对应的x64或者x86程序。\n<br>win服务的要求更多一些。因为目前是有三个项目，分别负责form窗口，core，service创建\n<br>这三个项目都要统一设置成x64，或者是x86.\n<br>如果有一个没有设置，那样就会运行出错。\n</p>]]></content>
      
      
      <categories>
          
          <category> 问题解决 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> win服务 </tag>
            
            <tag> 文件解决 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>string转坐标点</title>
      <link href="/2022/10/26/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/string%E8%BD%AC%E5%9D%90%E6%A0%87%E7%82%B9/"/>
      <url>/2022/10/26/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/string%E8%BD%AC%E5%9D%90%E6%A0%87%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<p>有的时候需要将string转换成自己想要的格式。最常见的比如我需要一个点，但是用户可能输入类似[1,2,3,4,5,6]这样的格式，我们就需要将这个string类型转换成对应的点的格式。\n<br>示例代码如下：\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public HTuple StringToHTuplePose(string PointString)</span><br><span class="line">&#123;</span><br><span class="line">    string[] array = PointString.Split(new char[] &#123; &#x27;,&#x27;, &#x27;[&#x27;, &#x27;]&#x27; &#125;, StringSplitOptions.RemoveEmptyEntries);</span><br><span class="line">    HTuple res = new HTuple(Convert.ToDouble(array[0]) / 1000, Convert.ToDouble(array[1]) / 1000, Convert.ToDouble(array[2]) / 1000,</span><br><span class="line">        Convert.ToDouble(array[3]), Convert.ToDouble(array[4]), Convert.ToDouble(array[5]), 0);</span><br><span class="line">    return res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该行为可以更容易地用逗号分隔值 (CSV) 文件之类的格式表示表格数据。 连续的逗号表示空白列。\n<br>可传递可选 StringSplitOptions.RemoveEmptyEntries 参数来排除返回数组中的任何空字符串。 \n要对返回的集合进行更复杂的处理，可使用 LINQ 来处理结果序列。\n</p>]]></content>
      
      
      <categories>
          
          <category> 工作技巧 </category>
          
          <category> string操作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> string </tag>
            
            <tag> 坐标点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>config文件使用</title>
      <link href="/2022/10/26/WinForm/config%E6%96%87%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/10/26/WinForm/config%E6%96%87%E4%BB%B6%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="工作技巧"><a href="#工作技巧" class="headerlink" title="工作技巧"></a>工作技巧</h1><p>config由于原本文件会自动生成一个.config文件，所以在使用的时候往往直接可以进行使用<br>为了方便对于config文件进行操作，这里创建一个ConfigHelper的类进行一些操作的示例，见代码1</p><h2 id="代码1"><a href="#代码1" class="headerlink" title="代码1"></a>代码1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Configuration;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Text.RegularExpressions;</span><br><span class="line">using System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line">namespace XmlRpcCore</span><br><span class="line">&#123;</span><br><span class="line">    public static class ConfigHelper</span><br><span class="line">    &#123;</span><br><span class="line">        public static string GetAppConfig(string FilePath, string strKey)</span><br><span class="line">        &#123;</span><br><span class="line">            Configuration val = ConfigurationManager.OpenExeConfiguration(FilePath);</span><br><span class="line">            string[] allKeys = val.AppSettings.Settings.AllKeys;</span><br><span class="line">            foreach (string a in allKeys)</span><br><span class="line">            &#123;</span><br><span class="line">                if (a == strKey)</span><br><span class="line">                &#123;</span><br><span class="line">                    return val.AppSettings.Settings[strKey].Value.ToString();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            return null;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public static void UpdateAppConfig(string FilePath, string newKey, string newValue)</span><br><span class="line">        &#123;</span><br><span class="line">            Configuration val = ConfigurationManager.OpenExeConfiguration(FilePath);</span><br><span class="line">            bool flag = false;</span><br><span class="line">            string[] allKeys = val.AppSettings.Settings.AllKeys;</span><br><span class="line">            foreach (string a in allKeys)</span><br><span class="line">            &#123;</span><br><span class="line">                if (a == newKey)</span><br><span class="line">                &#123;</span><br><span class="line">                    flag = true;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            if (flag)</span><br><span class="line">            &#123;</span><br><span class="line">                val.AppSettings.Settings.Remove(newKey);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            val.AppSettings.Settings.Add(newKey, newValue);</span><br><span class="line">            val.Save(ConfigurationSaveMode.Modified);</span><br><span class="line">            ConfigurationManager.RefreshSection(&quot;appSettings&quot;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>filepath：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">private string appPath = $&quot;&#123;Application.ExecutablePath&#125;&quot;;</span><br></pre></td></tr></table></figure><p>使用示例：<br>第一步获取对应的路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string xmlPath = $&quot;&#123;AppDomain.CurrentDomain.BaseDirectory&#125;machines.xml&quot;;</span><br></pre></td></tr></table></figure><p>第二步，获得数据，获得的类型都是string类型。<br>此处使用了上面代码1中的方法。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parameters.IP = ConfigHelper.GetAppConfig(configFile, &quot;IP&quot;);</span><br></pre></td></tr></table></figure><h2 id="Config文件中初始化"><a href="#Config文件中初始化" class="headerlink" title="Config文件中初始化"></a>Config文件中初始化</h2><ol><li>文件路径如下：</li></ol><p>在App.config中添加appSettting的内容</p><ol start="2"><li>在文件中添加如下内容。</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">  &lt;startup&gt;</span><br><span class="line">    &lt;supportedRuntime version=<span class="string">&quot;v4.0&quot;</span> sku=<span class="string">&quot;.NETFramework,Version=v4.7.2&quot;</span> /&gt;</span><br><span class="line">  &lt;/startup&gt;</span><br><span class="line">  &lt;appSettings&gt;</span><br><span class="line">    &lt;<span class="keyword">add</span> key=<span class="string">&quot;IP&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;192.168.10.10&quot;</span> /&gt;</span><br><span class="line">    &lt;<span class="keyword">add</span> key=<span class="string">&quot;Port&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;5562&quot;</span> /&gt;</span><br><span class="line">  &lt;/appSettings&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工作技巧 </category>
          
          <category> 类库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> Hepler </tag>
            
            <tag> config </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XML使用</title>
      <link href="/2022/10/26/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/XML%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/10/26/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/XML%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>在框架中使用XML几种方案。\n<br>首先是自己创建一个xml文档，注意要有一个父节点，此处的父节点名称machine\n<br>节点模样参考\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</span><br><span class="line">&lt;machine&gt;</span><br><span class="line"></span><br><span class="line">&lt;/machine&gt;</span><br></pre></td></tr></table></figure><p>自己编写xmlhelper，需要后续进行修改。见代码1</p><p>代码1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Threading.Tasks;</span><br><span class="line">using System.Xml;</span><br><span class="line"></span><br><span class="line">namespace XmlRpcCore</span><br><span class="line">&#123;</span><br><span class="line">    public static class XmlHelper</span><br><span class="line">    &#123;</span><br><span class="line">        public static bool ElementIsNotExist(string FilePath, string machineNum)</span><br><span class="line">        &#123;</span><br><span class="line">            XmlDocument xmlDocument = new XmlDocument();</span><br><span class="line">            xmlDocument.Load(FilePath);</span><br><span class="line">            XmlElement xmlElement = (XmlElement)xmlDocument.SelectSingleNode(&quot;machine/&quot; + machineNum);</span><br><span class="line">            if (xmlElement == null)</span><br><span class="line">                return true;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        public static string GetAppXmlAttribute(string FilePath, string machineNum, string strKey)</span><br><span class="line">        &#123;</span><br><span class="line">            XmlDocument xmlDocument = new XmlDocument();</span><br><span class="line">            xmlDocument.Load(FilePath);</span><br><span class="line">            XmlElement xmlElement = (XmlElement)xmlDocument.SelectSingleNode(&quot;machine/&quot; + machineNum);</span><br><span class="line">            string res = xmlElement.GetAttribute(strKey);</span><br><span class="line">            return res;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 修改对应xml的特性若key存在，则修改，不存在则增添</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=&quot;FilePath&quot;&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=&quot;machineNum&quot;&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=&quot;newKey&quot;&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=&quot;newValue&quot;&gt;&lt;/param&gt;</span><br><span class="line">        public static void UpdateAppXmlAttribute(string FilePath, string machineNum, string newKey, string newValue)</span><br><span class="line">        &#123;</span><br><span class="line">            XmlDocument xmlDocument = new XmlDocument();</span><br><span class="line">            xmlDocument.Load(FilePath);</span><br><span class="line">            XmlElement xmlElement = (XmlElement)xmlDocument.SelectSingleNode(&quot;machine/&quot; + machineNum);</span><br><span class="line">            string res = xmlElement.GetAttribute(newKey);</span><br><span class="line">            xmlElement.SetAttribute(newKey, newValue);</span><br><span class="line">            xmlDocument.Save(FilePath);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public static void UpdateCameraOne(string FilePath, string machineNum, string HeightCameraOne, string MovingDirectionCameraOne,</span><br><span class="line">            string DataFileCameraOne, string ImageFileCameraOne, string ModelFileCameraOne, string PositionCameraOne)</span><br><span class="line">        &#123;</span><br><span class="line">            XmlDocument xmlDocument = new XmlDocument();</span><br><span class="line">            xmlDocument.Load(FilePath);</span><br><span class="line">            XmlElement xmlElement = (XmlElement)xmlDocument.SelectSingleNode(&quot;machine/&quot; + machineNum);</span><br><span class="line">            xmlElement.SetAttribute(&quot;HeightCameraOne&quot;, HeightCameraOne);</span><br><span class="line">            xmlElement.SetAttribute(&quot;MovingDirectionCameraOne&quot;, MovingDirectionCameraOne);</span><br><span class="line">            xmlElement.SetAttribute(&quot;DataFileCameraOne&quot;, DataFileCameraOne);</span><br><span class="line">            xmlElement.SetAttribute(&quot;ImageFileCameraOne&quot;, ImageFileCameraOne);</span><br><span class="line">            xmlElement.SetAttribute(&quot;ModelFileCameraOne&quot;, ModelFileCameraOne);</span><br><span class="line">            xmlElement.SetAttribute(&quot;PositionCameraOne&quot;, PositionCameraOne);</span><br><span class="line">            xmlDocument.Save(FilePath);</span><br><span class="line">        &#125;</span><br><span class="line">        public static void UpdateCameraTwo(string FilePath, string machineNum, string HeightCameraTwo, string MovingDirectionCameraTwo,</span><br><span class="line">    string DataFileCameraTwo, string ImageFileCameraTwo, string ModelFileCameraTwo, string PositionCameraTwo)</span><br><span class="line">        &#123;</span><br><span class="line">            XmlDocument xmlDocument = new XmlDocument();</span><br><span class="line">            xmlDocument.Load(FilePath);</span><br><span class="line">            XmlElement xmlElement = (XmlElement)xmlDocument.SelectSingleNode(&quot;machine/&quot; + machineNum);</span><br><span class="line">            xmlElement.SetAttribute(&quot;HeightCameraTwo&quot;, HeightCameraTwo);</span><br><span class="line">            xmlElement.SetAttribute(&quot;MovingDirectionCameraTwo&quot;, MovingDirectionCameraTwo);</span><br><span class="line">            xmlElement.SetAttribute(&quot;DataFileCameraTwo&quot;, DataFileCameraTwo);</span><br><span class="line">            xmlElement.SetAttribute(&quot;ImageFileCameraTwo&quot;, ImageFileCameraTwo);</span><br><span class="line">            xmlElement.SetAttribute(&quot;ModelFileCameraTwo&quot;, ModelFileCameraTwo);</span><br><span class="line">            xmlElement.SetAttribute(&quot;PositionCameraTwo&quot;, PositionCameraTwo);</span><br><span class="line">            xmlDocument.Save(FilePath);</span><br><span class="line">        &#125;</span><br><span class="line">        public static void ReadCameraTwo(string FilePath, string machineNum, out string HeightCameraTwo, out string MovingDirectionCameraTwo,</span><br><span class="line">out string DataFileCameraTwo, out string ImageFileCameraTwo, out string ModelFileCameraTwo, out string PositionCameraTwo)</span><br><span class="line">        &#123;</span><br><span class="line">            XmlDocument xmlDocument = new XmlDocument();</span><br><span class="line">            xmlDocument.Load(FilePath);</span><br><span class="line">            XmlElement xmlElement = (XmlElement)xmlDocument.SelectSingleNode(&quot;machine/&quot; + machineNum);</span><br><span class="line">            HeightCameraTwo = xmlElement.GetAttribute(&quot;HeightCameraTwo&quot;);</span><br><span class="line">            MovingDirectionCameraTwo = xmlElement.GetAttribute(&quot;MovingDirectionCameraTwo&quot;);</span><br><span class="line">            DataFileCameraTwo = xmlElement.GetAttribute(&quot;DataFileCameraTwo&quot;);</span><br><span class="line">            ImageFileCameraTwo = xmlElement.GetAttribute(&quot;ImageFileCameraTwo&quot;);</span><br><span class="line">            ModelFileCameraTwo = xmlElement.GetAttribute(&quot;ModelFileCameraTwo&quot;);</span><br><span class="line">            PositionCameraTwo = xmlElement.GetAttribute(&quot;PositionCameraTwo&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        public static void ReadCameraOne(string FilePath, string machineNum, out string HeightCameraOne, out string MovingDirectionCameraOne,</span><br><span class="line">out string DataFileCameraOne, out string ImageFileCameraOne, out string ModelFileCameraOne, out string PositionCameraOne)</span><br><span class="line">        &#123;</span><br><span class="line">            XmlDocument xmlDocument = new XmlDocument();</span><br><span class="line">            xmlDocument.Load(FilePath);</span><br><span class="line">            XmlElement xmlElement = (XmlElement)xmlDocument.SelectSingleNode(&quot;machine/&quot; + machineNum);</span><br><span class="line">            HeightCameraOne = xmlElement.GetAttribute(&quot;HeightCameraOne&quot;);</span><br><span class="line">            MovingDirectionCameraOne = xmlElement.GetAttribute(&quot;MovingDirectionCameraOne&quot;);</span><br><span class="line">            DataFileCameraOne = xmlElement.GetAttribute(&quot;DataFileCameraOne&quot;);</span><br><span class="line">            ImageFileCameraOne = xmlElement.GetAttribute(&quot;ImageFileCameraOne&quot;);</span><br><span class="line">            ModelFileCameraOne = xmlElement.GetAttribute(&quot;ModelFileCameraOne&quot;);</span><br><span class="line">            PositionCameraOne = xmlElement.GetAttribute(&quot;PositionCameraOne&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        public static void RemoveAppXmlElement(string FilePath, string machineNum)</span><br><span class="line">        &#123;</span><br><span class="line">            XmlDocument xmlDocument = new XmlDocument();</span><br><span class="line">            xmlDocument.Load(FilePath);</span><br><span class="line">            XmlElement rootElement = (XmlElement)xmlDocument.SelectSingleNode(&quot;machine&quot;);</span><br><span class="line">            XmlElement xmlElement = (XmlElement)xmlDocument.SelectSingleNode(&quot;machine/&quot; + machineNum);</span><br><span class="line">            rootElement.RemoveChild(xmlElement);</span><br><span class="line">            xmlDocument.Save(FilePath);</span><br><span class="line">        &#125;</span><br><span class="line">        public static void AddAppXmlElement(string FilePath, string machineNum)</span><br><span class="line">        &#123;</span><br><span class="line">            XmlDocument xmlDocument = new XmlDocument();</span><br><span class="line">            xmlDocument.Load(FilePath);</span><br><span class="line">            XmlElement rootElement = (XmlElement)xmlDocument.SelectSingleNode(&quot;machine&quot;);</span><br><span class="line">            XmlElement xmlElement = xmlDocument.CreateElement(machineNum);</span><br><span class="line">            rootElement.AppendChild(xmlElement);</span><br><span class="line">            xmlDocument.Save(FilePath);</span><br><span class="line">        &#125;</span><br><span class="line">        public static XmlNodeList AppXmlElementCount(string FilePath)</span><br><span class="line">        &#123;</span><br><span class="line">            XmlDocument xmlDocument = new XmlDocument();</span><br><span class="line">            xmlDocument.Load(FilePath);</span><br><span class="line">            XmlElement rootElement = (XmlElement)xmlDocument.SelectSingleNode(&quot;machine&quot;);</span><br><span class="line">            XmlNodeList childNodes = rootElement.ChildNodes;</span><br><span class="line">            return childNodes;</span><br><span class="line">        &#125;</span><br><span class="line">        public static void CopyAppXmlElement(string FilePath, string oldmachineNum, string newmachineNum)</span><br><span class="line">        &#123;</span><br><span class="line">            XmlDocument xmlDocument = new XmlDocument();</span><br><span class="line">            xmlDocument.Load(FilePath);</span><br><span class="line">            XmlElement rootElement = (XmlElement)xmlDocument.SelectSingleNode(&quot;machine&quot;);</span><br><span class="line">            XmlElement oldElement = (XmlElement)xmlDocument.SelectSingleNode(&quot;machine/&quot; + oldmachineNum);</span><br><span class="line">            XmlElement newElement = xmlDocument.CreateElement(newmachineNum);</span><br><span class="line">            foreach (XmlAttribute att in oldElement.Attributes)</span><br><span class="line">            &#123;</span><br><span class="line">                newElement.SetAttribute(att.Name, att.Value);</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            rootElement.AppendChild(newElement);</span><br><span class="line">            xmlDocument.Save(FilePath);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工作技巧 </category>
          
          <category> 类库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> XML </tag>
            
            <tag> Helper </tag>
            
            <tag> class </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XML命名空间</title>
      <link href="/2022/10/26/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/XML%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4/"/>
      <url>/2022/10/26/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/XML%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4/</url>
      
        <content type="html"><![CDATA[<p>先说结论，两种命名空间，\n<br>一种默认命名空间，没有前缀。\n<br>二、显式名称空间声明，有前缀。\n<br>默认命名空间，无前缀的都使用\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;根元素 xmlns = “http://xugang.cnblogs.com” &gt;</span><br><span class="line"></span><br><span class="line">           &lt;子元素 attName =“myname” /&gt;</span><br></pre></td></tr></table></figure><p>显式名称控件声明\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;根元素 xmlns: xg = “http://xugang.cnblogs.com” &gt;</span><br><span class="line"></span><br><span class="line">           &lt;xg:子元素  attName = “myname” /&gt;</span><br></pre></td></tr></table></figure><p>注意：尽量只在根元素声明默认名称空间。若默认名称空间声明在非根元素，则容易被用户误解或忽略成没有名称空间的元素。所以，非根元素尽量不使用默认名称空间声明（推荐使用显式名称空间声明）。\n<br>名称空间的声明注意：\n<br>    * 双引号内必须是一个URI；<br>    * XML区分大小写，前缀名也不例外；<br>    * 前缀名建议采用英文缩写，也可以用中文（但不推荐用中文）；<br>    * 尽量避免同名前缀却对应不同URI的名称空间的情况，它将容易误导用户；<br>    * 尽量在根元素中声明所有的名称空间；<br>    * 如果一个属性所在的元素属于某显式声明的名称空间，一般就不需要为该属性添加前缀。<br>xml前缀的使用示例，两个xml文件合并成为一个xml文件，使用前缀进行区分。\n<br>IT部门\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;GB2312&quot; standalone=&quot;yes&quot;?&gt;</span><br><span class="line">&lt;资料&gt;</span><br><span class="line">   &lt;设备 编号=&quot;联想6515b&quot;&gt;</span><br><span class="line">      &lt;生产商&gt;联想集团&lt;/生产商&gt;</span><br><span class="line">      &lt;地址&gt;北京市中关村127号&lt;/地址&gt;</span><br><span class="line">   &lt;/设备&gt;</span><br><span class="line">&lt;/资料&gt;</span><br></pre></td></tr></table></figure><p>建筑部门\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;GB2312&quot; standalone=&quot;yes&quot; ?&gt;</span><br><span class="line">&lt;资料&gt;</span><br><span class="line">   &lt;设备 编号=&quot;中联F001&quot;&gt;</span><br><span class="line">      &lt;生产商&gt;中联重科&lt;/生产商&gt;</span><br><span class="line">      &lt;地址&gt;湖南省长沙市新开铺113号&lt;/地址&gt;</span><br><span class="line">   &lt;/设备&gt;</span><br><span class="line">&lt;/资料&gt;</span><br></pre></td></tr></table></figure><p>正确合并\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;GB2312&quot; standalone=&quot;yes&quot;?&gt;</span><br><span class="line">&lt;资料 xmlns:IT=&quot;http://www.lenovo.com&quot; xmlns:建筑=&quot;myURN:中联&quot;&gt;</span><br><span class="line">   &lt;设备 IT:编号=&quot;联想6515b&quot; 建筑:编号=&quot;中联F001&quot;&gt;</span><br><span class="line">      &lt;IT:设备名&gt;笔记本&lt;/IT:设备名&gt;</span><br><span class="line">      &lt;IT:生产商&gt;联想集团&lt;/IT:生产商&gt;</span><br><span class="line">      &lt;IT:地址&gt;北京市中关村127号&lt;/IT:地址&gt;</span><br><span class="line">      &lt;建筑:设备名&gt;起重机&lt;/建筑:设备名&gt;</span><br><span class="line">      &lt;建筑:生产商&gt;中联重科&lt;/建筑:生产商&gt;</span><br><span class="line">      &lt;建筑:地址&gt;湖南省长沙市新开铺113号&lt;/建筑:地址&gt;</span><br><span class="line">   &lt;/设备&gt;</span><br><span class="line">&lt;/资料&gt;</span><br></pre></td></tr></table></figure><p>错误合并\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;GB2312&quot; standalone=&quot;yes&quot;?&gt;</span><br><span class="line">&lt;资料&gt;</span><br><span class="line">   &lt;设备 编号=&quot;联想6515b&quot; 编号=&quot;中联F001&quot;&gt;</span><br><span class="line">      &lt;设备名&gt;笔记本&lt;/设备名&gt;</span><br><span class="line">      &lt;生产商&gt;联想集团&lt;/生产商&gt;</span><br><span class="line">      &lt;地址&gt;北京市中关村127号&lt;/地址&gt;</span><br><span class="line">      &lt;设备名&gt;起重机&lt;/设备名&gt;</span><br><span class="line">      &lt;生产商&gt;中联重科&lt;/生产商&gt;</span><br><span class="line">      &lt;地址&gt;湖南省长沙市新开铺113号&lt;/地址&gt;</span><br><span class="line">   &lt;/设备&gt;</span><br><span class="line">&lt;/资料&gt;</span><br></pre></td></tr></table></figure><p>相关知识，在复制节点的时候如果需要的话可以将对应的节点的命名空间一起复制\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">XmlAttribute newAttribute = (XmlAttribute)sourceAttribute.CloneNode(true);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> XML </tag>
            
            <tag> 命名空间 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XML命名规则</title>
      <link href="/2022/10/26/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/XML%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99/"/>
      <url>/2022/10/26/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/XML%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99/</url>
      
        <content type="html"><![CDATA[<p>问题表现\n<br>XML节点元素不可以以数字和特殊符号，如“.”开头，否则用XMLDOMDocument写入将会出现Bug。\n<br>具体规则\n<br>• 名称可以含字母、数字以及其他的字符<br>• 名称不能以数字或者标点符号开始<br>• 名称不能以字符 “xml”（或者 XML、Xml）开始<br>• 名称不能包含空格<br>注意，名称不能包括，并不是说value不能包括。name与value不同的\n</p>]]></content>
      
      
      <categories>
          
          <category> 基础学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> XML </tag>
            
            <tag> 命名规则 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>获取当前程序路径</title>
      <link href="/2022/10/26/C%20Sharp/%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E7%A8%8B%E5%BA%8F%E8%B7%AF%E5%BE%84/"/>
      <url>/2022/10/26/C%20Sharp/%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E7%A8%8B%E5%BA%8F%E8%B7%AF%E5%BE%84/</url>
      
        <content type="html"><![CDATA[<p>获取路径的原因可以是很多。\n<br>需要获得当前文件的config文件中的属性\n<br>有些信息被写在xml文件之中\n<br>用户需要打开窗口选取文件，我们要获得用户打开的文件。\n<br>创建service服务的时候需要知道service服务的路径才可以进行对应的install or uninstall\n<br>当前最常使用的几种路径的获取方案如下。\n<br>这个是获得当前运行程序的目录，是一个exe文件。<br>在读取config文件的时候经常使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">private string appPath = $&quot;&#123;Application.ExecutablePath&#125;&quot;;</span><br></pre></td></tr></table></figure><p>这个是获取到当前运行的exe文件的目录\n<br>获取启动了应用程序的可执行文件的路径，不包括可执行文件的名称。\n<br>这个方法也是可靠的获取程序路径的方法。不过返回的路径最末并没有”&quot;结尾。另外因为是Forms命名空间的。因此如果使用WPF还是不用的好。\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">private String serviceFilePath= $&quot;&#123;Application.StartupPath&#125;\\XmlRpcUR.exe&quot;;</span><br></pre></td></tr></table></figure><p>这个也是获得当前运行的exe文件的目录\n<br>获取当前 Thread\n<br>的当前应用程序域的基目录，它由程序集冲突解决程序用来探测程序集。\n<br>这个方法是以”&quot;结尾\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string xmlPath = $&quot;&#123;AppDomain.CurrentDomain.BaseDirectory&#125;\\machines.xml&quot;;</span><br></pre></td></tr></table></figure><p>此处有一些我的路径实例用作参考  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">private void DataFile_Click(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    OpenFileDialog dialog = new OpenFileDialog();</span><br><span class="line">    if (File.Exists(DataFileTextBox.Text))</span><br><span class="line">    &#123;</span><br><span class="line">        int lastIndex = DataFileTextBox.Text.LastIndexOf(&quot;\\&quot;);//获取双斜杠所在的最后的一个索引位置</span><br><span class="line">        string filePath = DataFileTextBox.Text.Substring(0, lastIndex);</span><br><span class="line">        dialog.InitialDirectory = filePath;</span><br><span class="line">    &#125;</span><br><span class="line">    else if (Directory.Exists(DataFileTextBox.Text))</span><br><span class="line">    &#123;</span><br><span class="line">        dialog.InitialDirectory = DataFileTextBox.Text;</span><br><span class="line">    &#125;</span><br><span class="line">    dialog.Multiselect = false;//该值确定是否可以选择多个文件</span><br><span class="line">    dialog.Title = &quot;请选择文件&quot;;</span><br><span class="line">    //过滤器，根据后缀过滤文件，文件夹保留。此处分为两个部分，前者只显示txt文档与文件夹，后者显示全部文件与文件夹</span><br><span class="line">    dialog.Filter = &quot;hed格式（*.hed）|*.hed|所有文件|*.*&quot;;</span><br><span class="line">    if (dialog.ShowDialog() == System.Windows.Forms.DialogResult.OK)</span><br><span class="line">    &#123;</span><br><span class="line">        string file = dialog.FileName;</span><br><span class="line">        DataFileTextBox.Text = file;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以下内容来源于网络。\n<br>获取启动了应用程序的可执行文件的路径及文件名。\n<br>这个方法获取的是执行程序的完整文件名。是最可靠的方式，只需要去掉程序文件名就可以获得路径。\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.Windows.Forms.Application.ExecutablePath</span><br></pre></td></tr></table></figure><p>获取当前应用程序所在目录的路径，最后包含“\”。\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.Threading.Thread.GetDomain().BaseDirectory</span><br></pre></td></tr></table></figure><p>参考文章\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://t.zoukankan.com/zhzhx-p-3115102.html</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 程序路径 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日期格式文件名</title>
      <link href="/2022/10/26/C%20Sharp/%E6%97%A5%E6%9C%9F%E6%A0%BC%E5%BC%8F%E6%96%87%E4%BB%B6%E5%90%8D/"/>
      <url>/2022/10/26/C%20Sharp/%E6%97%A5%E6%9C%9F%E6%A0%BC%E5%BC%8F%E6%96%87%E4%BB%B6%E5%90%8D/</url>
      
        <content type="html"><![CDATA[<p>因为是自动化，需要批量保存的时候文件名就会依据日期来命名\n<br>需要进行格式转换的原因有：文件命名不能有冒号\n<br>可以创建依据月份，具体到某一天的文件夹来对于文件进行分类。\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">strFileName=Format(System.DateTime.Now,&quot;yyyyMMdd_hhmmss&quot;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">精确到毫秒级别</span><br><span class="line">名称＝DateTime.Now.ToString(&quot;yyyyMMddhhmmss&quot;) + DateTime.Now.Millisecond.ToString() + &quot;上传文件的后缀名&quot;;</span><br></pre></td></tr></table></figure><p>不同的日期表达形式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line">//2007年4月24日</span><br><span class="line"> </span><br><span class="line"> this.TextBox1.Text = System.DateTime.Now.ToString(&quot;D&quot;);</span><br><span class="line"> </span><br><span class="line"> //2007/4/24</span><br><span class="line"> </span><br><span class="line"> this.TextBox2.Text = System.DateTime.Now.ToString(&quot;d&quot;);</span><br><span class="line"> </span><br><span class="line"> //2007年4月24日 16:30:15</span><br><span class="line"> </span><br><span class="line"> this.TextBox3.Text = System.DateTime.Now.ToString(&quot;F&quot;);</span><br><span class="line"> </span><br><span class="line"> //2007年4月24日 16:30</span><br><span class="line"> </span><br><span class="line"> this.TextBox4.Text = System.DateTime.Now.ToString(&quot;f&quot;);</span><br><span class="line"> </span><br><span class="line"> //2007/4/24 16:30:15</span><br><span class="line"> </span><br><span class="line"> this.TextBox5.Text = System.DateTime.Now.ToString(&quot;G&quot;);</span><br><span class="line"> </span><br><span class="line"> //2007/4/24 16:30        </span><br><span class="line"> </span><br><span class="line">this.TextBox6.Text = System.DateTime.Now.ToString(&quot;g&quot;);</span><br><span class="line"> </span><br><span class="line"> //16:30:15</span><br><span class="line"> </span><br><span class="line"> this.TextBox7.Text = System.DateTime.Now.ToString(&quot;T&quot;);</span><br><span class="line"> </span><br><span class="line"> //16:30</span><br><span class="line"> </span><br><span class="line"> this.TextBox8.Text = System.DateTime.Now.ToString(&quot;t&quot;);</span><br><span class="line"> </span><br><span class="line"> //2007年4月24日 8:30:15</span><br><span class="line"> </span><br><span class="line"> this.TextBox9.Text = System.DateTime.Now.ToString(&quot;U&quot;);</span><br><span class="line"> </span><br><span class="line"> //2007-04-24 16:30:15Z</span><br><span class="line"> </span><br><span class="line"> this.TextBox10.Text = System.DateTime.Now.ToString(&quot;u&quot;);</span><br><span class="line"> </span><br><span class="line"> //4月24日    </span><br><span class="line"> </span><br><span class="line"> this.TextBox11.Text = System.DateTime.Now.ToString(&quot;m&quot;);</span><br><span class="line"> </span><br><span class="line"> this.TextBox12.Text = System.DateTime.Now.ToString(&quot;M&quot;);</span><br><span class="line"> </span><br><span class="line"> //Tue, 24 Apr 2007 16:30:15 GMT  </span><br><span class="line"> </span><br><span class="line"> this.TextBox13.Text = System.DateTime.Now.ToString(&quot;r&quot;);</span><br><span class="line"> </span><br><span class="line"> this.TextBox14.Text = System.DateTime.Now.ToString(&quot;R&quot;);</span><br><span class="line"> </span><br><span class="line"> //2007年4月 </span><br><span class="line"> </span><br><span class="line"> this.TextBox15.Text = System.DateTime.Now.ToString(&quot;y&quot;);</span><br><span class="line"> </span><br><span class="line"> this.TextBox16.Text = System.DateTime.Now.ToString(&quot;Y&quot;);</span><br><span class="line"> </span><br><span class="line"> //2007-04-24T15:52:19.1562500+08:00</span><br><span class="line"> </span><br><span class="line"> this.TextBox17.Text = System.DateTime.Now.ToString(&quot;o&quot;);</span><br><span class="line"> </span><br><span class="line"> this.TextBox18.Text = System.DateTime.Now.ToString(&quot;O&quot;);</span><br><span class="line"> </span><br><span class="line"> //2007-04-24T16:30:15</span><br><span class="line"> </span><br><span class="line"> this.TextBox19.Text = System.DateTime.Now.ToString(&quot;s&quot;);</span><br><span class="line"> </span><br><span class="line"> //2007-04-24 15:52:19:9889</span><br><span class="line"> </span><br><span class="line"> this.TextBox20.Text = System.DateTime.Now.ToString(&quot;yyyy-MM-dd HH：mm：ss：ffff&quot;);</span><br><span class="line"> </span><br><span class="line"> //2007年04月24 15时56分48秒</span><br><span class="line"> </span><br><span class="line"> this.TextBox21.Text = System.DateTime.Now.ToString(&quot;yyyy年MM月dd HH时mm分ss秒&quot;);</span><br><span class="line"> </span><br><span class="line"> //星期二, 四月 24 2007</span><br><span class="line"> </span><br><span class="line"> this.TextBox22.Text = System.DateTime.Now.ToString(&quot;dddd, MMMM dd yyyy&quot;);</span><br><span class="line"> </span><br><span class="line"> //周三, 十二月 7 &#x27;11</span><br><span class="line"> </span><br><span class="line"> this.TextBox23.Text = System.DateTime.Now.ToString(&quot;ddd, MMM d \&quot;&#x27;\&quot;yy&quot;);</span><br><span class="line"> </span><br><span class="line"> //星期二, 四月 24</span><br><span class="line"> </span><br><span class="line"> this.TextBox24.Text = System.DateTime.Now.ToString(&quot;dddd, MMMM dd&quot;);</span><br><span class="line"> </span><br><span class="line"> //4/07</span><br><span class="line"> </span><br><span class="line"> this.TextBox25.Text = System.DateTime.Now.ToString(&quot;M/yy&quot;);</span><br><span class="line"> </span><br><span class="line"> //07-12-11</span><br><span class="line"> </span><br><span class="line"> this.TextBox26.Text = System.DateTime.Now.ToString(&quot;dd-MM-yy&quot;);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> string[] Day = new string[] &#123; &quot;星期日&quot;, &quot;星期一&quot;, &quot;星期二&quot;, &quot;星期三&quot;, &quot;星期四&quot;, &quot;星期五&quot;, &quot;星期六&quot; &#125;;</span><br><span class="line"> </span><br><span class="line"> //2011/12/6 昨天</span><br><span class="line"> </span><br><span class="line"> this.TextBox1.Text = System.DateTime.Now.AddDays(-1).ToShortDateString();</span><br><span class="line"> </span><br><span class="line"> //2011/12/8 明天</span><br><span class="line"> </span><br><span class="line"> this.TextBox2.Text = DateTime.Now.AddDays(1).ToShortDateString();</span><br><span class="line"> </span><br><span class="line"> //2011/12/4 本周星期天</span><br><span class="line"> </span><br><span class="line"> this.TextBox3.Text = DateTime.Now.AddDays(Convert.ToDouble((0 - Convert.ToInt16(DateTime.Now.DayOfWeek)))).ToShortDateString();</span><br><span class="line"> </span><br><span class="line"> //2011/12/10 本周星期六</span><br><span class="line"> </span><br><span class="line"> this.TextBox4.Text = DateTime.Now.AddDays(Convert.ToDouble((6 - Convert.ToInt16(DateTime.Now.DayOfWeek)))).ToShortDateString();</span><br><span class="line"> </span><br><span class="line"> //星期三 今天周几</span><br><span class="line"> </span><br><span class="line"> this.TextBox5.Text = Day[Convert.ToInt16(DateTime.Now.DayOfWeek)];</span><br><span class="line"> </span><br><span class="line"> //2011/11/27 上周日</span><br><span class="line"> </span><br><span class="line"> this.TextBox6.Text = DateTime.Now.AddDays(Convert.ToDouble((0 - Convert.ToInt16(DateTime.Now.DayOfWeek))) - 7).ToShortDateString();</span><br><span class="line"> </span><br><span class="line"> //2011/12/3 上周六</span><br><span class="line"> </span><br><span class="line"> this.TextBox7.Text = DateTime.Now.AddDays(Convert.ToDouble((6 - Convert.ToInt16(DateTime.Now.DayOfWeek))) - 7).ToShortDateString();</span><br><span class="line"> </span><br><span class="line"> //2011/12/11 下周日</span><br><span class="line"> </span><br><span class="line"> this.TextBox8.Text = DateTime.Now.AddDays(Convert.ToDouble((0 - Convert.ToInt16(DateTime.Now.DayOfWeek))) + 7).ToShortDateString();</span><br><span class="line"> </span><br><span class="line"> //2011/12/17 下周六</span><br><span class="line"> </span><br><span class="line"> this.TextBox9.Text = DateTime.Now.AddDays(Convert.ToDouble((6 - Convert.ToInt16(DateTime.Now.DayOfWeek))) + 7).ToShortDateString();</span><br><span class="line"> </span><br><span class="line"> //2011-12-01 本月一号</span><br><span class="line"> </span><br><span class="line"> this.TextBox10.Text =DateTime.Now.ToString(&quot;yyyy-MM-01&quot;);</span><br><span class="line"> </span><br><span class="line"> //2011/12/31 本月最后一天</span><br><span class="line"> </span><br><span class="line"> this.TextBox11.Text=DateTime.Parse(DateTime.Now.ToString(&quot;yyyy-MM-01&quot;)).AddMonths(1).AddDays(-1).ToShortDateString();</span><br><span class="line"> </span><br><span class="line"> //2011/11/1 上个月一号</span><br><span class="line"> </span><br><span class="line"> this.TextBox12.Text=System.DateTime.Parse(DateTime.Now.ToString(&quot;yyyy-MM-01&quot;)).AddMonths(-1).ToShortDateString();</span><br><span class="line"> </span><br><span class="line"> //2012/1/1 下个月一号</span><br><span class="line"> </span><br><span class="line"> this.TextBox13.Text=System.DateTime.Parse(DateTime.Now.ToString(&quot;yyyy-MM-01&quot;)).AddMonths(1).ToShortDateSring();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> DateTime </tag>
            
            <tag> 文件名称 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Form操作-打开文件弹窗</title>
      <link href="/2022/10/26/WinForm/Form%E6%93%8D%E4%BD%9C-%E6%89%93%E5%BC%80%E6%96%87%E4%BB%B6%E5%BC%B9%E7%AA%97/"/>
      <url>/2022/10/26/WinForm/Form%E6%93%8D%E4%BD%9C-%E6%89%93%E5%BC%80%E6%96%87%E4%BB%B6%E5%BC%B9%E7%AA%97/</url>
      
        <content type="html"><![CDATA[<p>有的时候需要让用户选择文件，我们获取文件路径，用于读取相对应的文件。<br>因此有了这个弹窗按钮。\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">private void DataFile_Click(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    OpenFileDialog dialog = new OpenFileDialog();</span><br><span class="line">    if (File.Exists(DataFileTextBox.Text))</span><br><span class="line">    &#123;</span><br><span class="line">        int lastIndex = DataFileTextBox.Text.LastIndexOf(&quot;\\&quot;);//获取双斜杠所在的最后的一个索引位置</span><br><span class="line">        string filePath = DataFileTextBox.Text.Substring(0, lastIndex);</span><br><span class="line">        dialog.InitialDirectory = filePath;</span><br><span class="line">    &#125;</span><br><span class="line">    else if (Directory.Exists(DataFileTextBox.Text))</span><br><span class="line">    &#123;</span><br><span class="line">        dialog.InitialDirectory = DataFileTextBox.Text;</span><br><span class="line">    &#125;</span><br><span class="line">    dialog.Multiselect = false;//该值确定是否可以选择多个文件</span><br><span class="line">    dialog.Title = &quot;请选择文件&quot;;</span><br><span class="line">    //过滤器，根据后缀过滤文件，文件夹保留。此处分为两个部分，前者只显示txt文档与文件夹，后者显示全部文件与文件夹</span><br><span class="line">    dialog.Filter = &quot;hed格式（*.hed）|*.hed|所有文件|*.*&quot;;</span><br><span class="line">    if (dialog.ShowDialog() == System.Windows.Forms.DialogResult.OK)</span><br><span class="line">    &#123;</span><br><span class="line">        string file = dialog.FileName;</span><br><span class="line">        DataFileTextBox.Text = file;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Form操作 </category>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Form操作 </tag>
            
            <tag> 获得文件路径 </tag>
            
            <tag> 文件弹窗 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C Sharp 创建日志</title>
      <link href="/2022/10/26/C%20Sharp/C%20Sharp%20%E6%97%A5%E5%BF%97%E5%88%9B%E5%BB%BA/"/>
      <url>/2022/10/26/C%20Sharp/C%20Sharp%20%E6%97%A5%E5%BF%97%E5%88%9B%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>目前有两个方案。</p><ol><li>布置简单，就是直接写入到一个txt文档之中。</li><li>另一个是比较专业log4net的使用 <a href="https://www.cnblogs.com/zhangchenliang/p/4546352.html">参考文章</a></li></ol><h1 id="一、直接写入文档"><a href="#一、直接写入文档" class="headerlink" title="一、直接写入文档"></a>一、直接写入文档</h1><p>相关代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">private static string filePath = @&quot;C:\Users\Desktop\Xml.txt&quot;;</span><br><span class="line">public static void WriteInfo(string info)</span><br><span class="line">&#123;</span><br><span class="line">    using (FileStream stream = new FileStream(filePath, FileMode.Append))</span><br><span class="line">    &#123;</span><br><span class="line">        using (StreamWriter writer = new StreamWriter(stream))</span><br><span class="line">        &#123;</span><br><span class="line">            writer.WriteLine($&quot;&#123;DateTime.Now&#125;,&#123;info&#125;&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>filepath可以根据自己的想要生成的路径任意设置。</p><h1 id="二、创建logger4日志"><a href="#二、创建logger4日志" class="headerlink" title="二、创建logger4日志"></a>二、创建logger4日志</h1><p>比较专业logger4的使用</p><ol><li>在引用的位置通过Nuggert安装log4net。</li><li>在启动项目中手动创建log4net.config文件,将下面的代码2拷入文件中.需要注意的需要设置文件为复制到输出目录</li><li>在启动项目的.cs(常见问文件命名时AssemblyInfo.cs)，中最下面添加代码3内容。如果像net8.0控制台任务，可以新建一个AssemblyInfo.cs就可以了。</li><li>（可选项）添加LoggerHelper方便对于logger日志的操作，相关代码见代码4</li></ol><h2 id="结构梳理"><a href="#结构梳理" class="headerlink" title="结构梳理"></a>结构梳理</h2><ol><li><strong>Logger（记录器）</strong>：Logger 是直接与应用程序交互的组件，负责记录日志。你可以同时存在多个 Logger，每个 Logger 引用一个 Appender 来将日志记录到指定的媒介，并由 Layout 控制输出格式。</li><li><strong>Appender（输出器）</strong>：Appender 定义了日志的输出方式，即记录介质。它可以将日志记录到不同地方，如数据库、本地文件、控制台等。</li><li><strong>Layout（布局）</strong>：Layout 用于控制 Appender 的输出格式，即格式化记录数据。你可以选择线性格式或 XML 格式。</li><li><strong>Filter（过滤器）</strong>：Filter 负责记录筛选，可以过滤掉 Appender 输出的内容。</li></ol><h2 id="代码2"><a href="#代码2" class="headerlink" title="代码2"></a>代码2</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&lt;log4net&gt;</span><br><span class="line">  &lt;root&gt;</span><br><span class="line">    &lt;level value=&quot;ALL&quot; /&gt;</span><br><span class="line">    &lt;appender-ref ref=&quot;infoAppender&quot; /&gt;</span><br><span class="line">    &lt;appender-ref ref=&quot;errorAppender&quot; /&gt;</span><br><span class="line">    &lt;appender-ref ref=&quot;debugAppender&quot; /&gt;</span><br><span class="line">  &lt;/root&gt;</span><br><span class="line">  &lt;!-- 日志的等级，它们由高到底分别为： OFF &gt; FATAL &gt; ERROR &gt; WARN &gt; INFO &gt; DEBUG &gt; ALL --&gt;</span><br><span class="line">  &lt;!--信息日志配置--&gt;</span><br><span class="line">  &lt;appender name=&quot;infoAppender&quot; type=&quot;log4net.Appender.RollingFileAppender&quot;&gt;</span><br><span class="line">    &lt;param name=&quot;File&quot; value=&quot;Logs\Info\info.log&quot; /&gt;</span><br><span class="line">    &lt;param name=&quot;AppendToFile&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">    &lt;param name=&quot;MaxFileSize&quot; value=&quot;10240&quot; /&gt;</span><br><span class="line">    &lt;param name=&quot;MaxSizeRollBackups&quot; value=&quot;100&quot; /&gt;</span><br><span class="line">    &lt;param name=&quot;PreserveLogFileNameExtension&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">    &lt;param name=&quot;StaticLogFileName&quot; value=&quot;false&quot; /&gt;</span><br><span class="line">    &lt;param name=&quot;DatePattern&quot; value=&quot;yyyyMMdd&quot; /&gt;</span><br><span class="line">    &lt;param name=&quot;RollingStyle&quot; value=&quot;Date&quot; /&gt;</span><br><span class="line">    &lt;layout type=&quot;log4net.Layout.PatternLayout&quot;&gt;</span><br><span class="line">      &lt;conversionPattern value=&quot;%date [%thread] %-5level %logger - %message%newline&quot; /&gt;</span><br><span class="line">    &lt;/layout&gt;</span><br><span class="line">    &lt;filter type=&quot;log4net.Filter.LevelRangeFilter&quot;&gt;</span><br><span class="line">      &lt;param name=&quot;LevelMin&quot; value=&quot;INFO&quot; /&gt;</span><br><span class="line">      &lt;param name=&quot;LevelMax&quot; value=&quot;INFO&quot; /&gt;</span><br><span class="line">    &lt;/filter&gt;</span><br><span class="line">  &lt;/appender&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!--调试日志配置--&gt;</span><br><span class="line">  &lt;appender name=&quot;debugAppender&quot; type=&quot;log4net.Appender.RollingFileAppender&quot;&gt;</span><br><span class="line">    &lt;param name=&quot;File&quot; value=&quot;Logs\Debug\debug.log&quot; /&gt;</span><br><span class="line">    &lt;param name=&quot;AppendToFile&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">    &lt;param name=&quot;MaxFileSize&quot; value=&quot;10240&quot; /&gt;</span><br><span class="line">    &lt;param name=&quot;MaxSizeRollBackups&quot; value=&quot;100&quot; /&gt;</span><br><span class="line">    &lt;param name=&quot;PreserveLogFileNameExtension&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">    &lt;param name=&quot;StaticLogFileName&quot; value=&quot;false&quot; /&gt;</span><br><span class="line">    &lt;param name=&quot;DatePattern&quot; value=&quot;yyyyMMdd&quot; /&gt;</span><br><span class="line">    &lt;param name=&quot;RollingStyle&quot; value=&quot;Date&quot; /&gt;</span><br><span class="line">    &lt;layout type=&quot;log4net.Layout.PatternLayout&quot;&gt;</span><br><span class="line">      &lt;conversionPattern value=&quot;%date [%thread] %-5level %logger - %message%newline&quot; /&gt;</span><br><span class="line">    &lt;/layout&gt;</span><br><span class="line">    &lt;filter type=&quot;log4net.Filter.LevelRangeFilter&quot;&gt;</span><br><span class="line">      &lt;param name=&quot;LevelMin&quot; value=&quot;DEBUG&quot; /&gt;</span><br><span class="line">      &lt;param name=&quot;LevelMax&quot; value=&quot;DEBUG&quot; /&gt;</span><br><span class="line">    &lt;/filter&gt;</span><br><span class="line">  &lt;/appender&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!--错误日志配置--&gt;</span><br><span class="line">  &lt;appender name=&quot;errorAppender&quot; type=&quot;log4net.Appender.RollingFileAppender&quot;&gt;</span><br><span class="line">    &lt;param name=&quot;File&quot; value=&quot;Logs\Error\Err.log&quot; /&gt;</span><br><span class="line">    &lt;param name=&quot;AppendToFile&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">    &lt;param name=&quot;MaxFileSize&quot; value=&quot;10240&quot; /&gt;</span><br><span class="line">    &lt;param name=&quot;MaxSizeRollBackups&quot; value=&quot;100&quot; /&gt;</span><br><span class="line">    &lt;param name=&quot;PreserveLogFileNameExtension&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">    &lt;param name=&quot;StaticLogFileName&quot; value=&quot;false&quot; /&gt;</span><br><span class="line">    &lt;param name=&quot;DatePattern&quot; value=&quot;yyyyMMdd&quot; /&gt;</span><br><span class="line">    &lt;param name=&quot;RollingStyle&quot; value=&quot;Date&quot; /&gt;</span><br><span class="line">    &lt;layout type=&quot;log4net.Layout.PatternLayout&quot;&gt;</span><br><span class="line">      &lt;conversionPattern value=&quot;%date [%thread] %-5level %logger - %message%newline&quot; /&gt;</span><br><span class="line">    &lt;/layout&gt;</span><br><span class="line">    &lt;filter type=&quot;log4net.Filter.LevelRangeFilter&quot;&gt;</span><br><span class="line">      &lt;param name=&quot;LevelMin&quot; value=&quot;ERROR&quot; /&gt;</span><br><span class="line">      &lt;param name=&quot;LevelMax&quot; value=&quot;ERROR&quot; /&gt;</span><br><span class="line">    &lt;/filter&gt;</span><br><span class="line">  &lt;/appender&gt;</span><br><span class="line">&lt;/log4net&gt;</span><br></pre></td></tr></table></figure><blockquote><p>记得文件的命名要求是log4net.config.同时要把文件设置为复制到输出目录</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/2508838014/DrawingBed/pictures/image-20230720185635223.png" alt="image-20230720185635223"></p><p>需要注意的是，虽然此处没有明写Log，但是root是作为所有的父节点，默认是Log的名称。</p><p>1.主要是log实例化有变化。通过GetLogger方法获取xml配置中中gdLog4net的Logger</p><p>2.xml中定义了logger，关于logger和root，可以参考文章：<a href="https://www.cnblogs.com/zhangchenliang/p/4546352.html">https://www.cnblogs.com/zhangchenliang/p/4546352.html</a> 的后面部分内容，大概意思就是说root其实就是一个顶级的logger，所有其他logger都默认继承这个root。如果需要让logger阻断和root的联系，可以将logger的additivity设置为false。</p><p>示例代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;log4net&gt;</span><br><span class="line">  &lt;appender name=&quot;AccesssService_Err&quot; type=&quot;log4net.Appender.RollingFileAppender&quot;&gt;</span><br><span class="line">    &lt;!--日志路径--&gt;</span><br><span class="line">    &lt;param name=&quot;File&quot; value=&quot;Errors\log.log&quot; /&gt;</span><br><span class="line">    &lt;!--是否是向文件中追加日志--&gt;</span><br><span class="line">    &lt;param name=&quot;AppendToFile&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">    &lt;!--log保留个数--&gt;</span><br><span class="line">    &lt;param name=&quot;MaxSizeRollBackups&quot; value=&quot;200&quot; /&gt;</span><br><span class="line">    &lt;!--单个日志文件大小--&gt;</span><br><span class="line">    &lt;param name=&quot;MaximumFileSize&quot; value=&quot;5MB&quot; /&gt;</span><br><span class="line">    &lt;!--日志文件名是否是固定不变的--&gt;</span><br><span class="line">    &lt;param name=&quot;StaticLogFileName&quot; value=&quot;false&quot; /&gt;</span><br><span class="line">    &lt;!--日志文件名格式为:2008-08-31.log--&gt;</span><br><span class="line">    &lt;DatePattern value=&quot;yyyy-MM-dd HH&#x27;时.log&#x27;&quot;&gt;&lt;/DatePattern&gt;</span><br><span class="line">    &lt;lockingModel type=&quot;log4net.Appender.FileAppender+MinimalLock&quot; /&gt;</span><br><span class="line">    &lt;!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])--&gt;</span><br><span class="line">    &lt;param name=&quot;RollingStyle&quot; value=&quot;Size&quot; /&gt;</span><br><span class="line">    &lt;layout type=&quot;log4net.Layout.PatternLayout&quot;&gt;</span><br><span class="line">      &lt;param name=&quot;ConversionPattern&quot; value=&quot;记录时间：%date%n线程ID:[%thread] %n日志级别：%-5level%n记录位置：%location%n消息描述：%property&#123;Message&#125;%n异常：%exception%n消息：%message%newline%n------------------------------------------%n&quot; /&gt;</span><br><span class="line">    &lt;/layout&gt;</span><br><span class="line">    &lt;filter type=&quot;log4net.Filter.LevelRangeFilter&quot;&gt;</span><br><span class="line">      &lt;levelMin value=&quot;WARN&quot; /&gt;</span><br><span class="line">      &lt;levelMax value=&quot;FATAL&quot; /&gt;</span><br><span class="line">    &lt;/filter&gt;</span><br><span class="line">    &lt;filter type=&quot;log4net.Filter.DenyAllFilter&quot; /&gt;</span><br><span class="line">  &lt;/appender&gt;</span><br><span class="line">  &lt;appender name=&quot;AccesssService_info&quot; type=&quot;log4net.Appender.RollingFileAppender&quot;&gt;</span><br><span class="line">    &lt;!--日志路径--&gt;</span><br><span class="line">    &lt;param name=&quot;File&quot; value=&quot;MyLogs\log.log&quot; /&gt;</span><br><span class="line">    &lt;!--是否是向文件中追加日志--&gt;</span><br><span class="line">    &lt;param name=&quot;AppendToFile&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">    &lt;!--log保留个数--&gt;</span><br><span class="line">    &lt;param name=&quot;MaxSizeRollBackups&quot; value=&quot;200&quot; /&gt;</span><br><span class="line">    &lt;!--单个日志文件大小--&gt;</span><br><span class="line">    &lt;param name=&quot;MaximumFileSize&quot; value=&quot;5MB&quot; /&gt;</span><br><span class="line">    &lt;!--日志文件名是否是固定不变的--&gt;</span><br><span class="line">    &lt;param name=&quot;StaticLogFileName&quot; value=&quot;false&quot; /&gt;</span><br><span class="line">    &lt;!--日志文件名格式为:2008-08-31.log--&gt;</span><br><span class="line">    &lt;DatePattern value=&quot;yyyy-MM-dd HH&#x27;时.log&#x27;&quot;&gt;&lt;/DatePattern&gt;</span><br><span class="line">    &lt;lockingModel type=&quot;log4net.Appender.FileAppender+MinimalLock&quot; /&gt;</span><br><span class="line">    &lt;!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])--&gt;</span><br><span class="line">    &lt;param name=&quot;RollingStyle&quot; value=&quot;Size&quot; /&gt;</span><br><span class="line">    &lt;layout type=&quot;log4net.Layout.PatternLayout&quot;&gt;</span><br><span class="line">      &lt;param name=&quot;ConversionPattern&quot; value=&quot;记录时间：%date%n线程ID:[%thread] %n日志级别：%-5level%n记录位置：%location%n消息描述：%property&#123;Message&#125;%n异常：%exception%n消息：%message%newline%n------------------------------------------%n&quot; /&gt;</span><br><span class="line">    &lt;/layout&gt;</span><br><span class="line">    &lt;filter type=&quot;log4net.Filter.LevelRangeFilter&quot;&gt;</span><br><span class="line">      &lt;levelMin value=&quot;DEBUG&quot; /&gt;</span><br><span class="line">      &lt;levelMax value=&quot;INFO&quot; /&gt;</span><br><span class="line">    &lt;/filter&gt;</span><br><span class="line">    &lt;filter type=&quot;log4net.Filter.DenyAllFilter&quot; /&gt;</span><br><span class="line">  &lt;/appender&gt;</span><br><span class="line">  &lt;logger name=&quot;gdLog4net&quot; additivity=&quot;false&quot;&gt;</span><br><span class="line">    &lt;level value=&quot;DEBUG&quot; /&gt;</span><br><span class="line">    &lt;appender-ref ref=&quot;AccesssService_Err&quot; /&gt;</span><br><span class="line">    &lt;appender-ref ref=&quot;AccesssService_info&quot; /&gt;</span><br><span class="line">  &lt;/logger&gt;</span><br><span class="line">&lt;/log4net&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">public class LogHelper</span><br><span class="line">&#123;</span><br><span class="line">    private static ILog log = null;</span><br><span class="line">    public static ILog Log</span><br><span class="line">    &#123;</span><br><span class="line">        get</span><br><span class="line">        &#123;</span><br><span class="line">            if (log == null)</span><br><span class="line">            &#123;</span><br><span class="line">                //log4.config表示log4的配置文件</span><br><span class="line">                string fileName = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, &quot;config&quot;, &quot;log4.config&quot;);</span><br><span class="line">                log4net.Config.XmlConfigurator.ConfigureAndWatch(new FileInfo(fileName));</span><br><span class="line">                log = LogManager.GetLogger(&quot;gdLog4net&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            return log;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="代码3"><a href="#代码3" class="headerlink" title="代码3"></a>代码3</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[assembly: log4net.Config.XmlConfigurator(ConfigFile = &quot;log4net.config&quot;, ConfigFileExtension = &quot;config&quot;, Watch = true)]</span><br></pre></td></tr></table></figure><p>相关属性讲解，<br>ConfigFile:<br>ConfigFileExtension:根据类型加载<br>Watch</p><h2 id="代码4"><a href="#代码4" class="headerlink" title="代码4"></a>代码4</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">using log4net;</span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line">namespace XmlRpcApp</span><br><span class="line">&#123;</span><br><span class="line">    internal class Logger</span><br><span class="line">    &#123;</span><br><span class="line">        private static readonly ILog loginfo = LogManager.GetLogger(&quot;Log&quot;);//这里的Log默认是根目录的名称</span><br><span class="line">        public static void WriteLog(string info)</span><br><span class="line">        &#123;</span><br><span class="line">            if (loginfo.IsInfoEnabled)</span><br><span class="line">            &#123;</span><br><span class="line">                loginfo.Info(info);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public static void WriteLog(string info, Exception ex)</span><br><span class="line">        &#123;</span><br><span class="line">            if (loginfo.IsErrorEnabled)</span><br><span class="line">            &#123;</span><br><span class="line">                loginfo.Error(info, ex);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public static void DebugLog(string info)</span><br><span class="line">        &#123;</span><br><span class="line">            if (loginfo.IsDebugEnabled)</span><br><span class="line">            &#123;</span><br><span class="line">                loginfo.Debug(info);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Code配置方案"><a href="#Code配置方案" class="headerlink" title="Code配置方案"></a>Code配置方案</h3><p>至少在中文网站上全是通过.config文件进行配置的。</p><p>万一哪天我想要动态添加设备的信息，并且设备的内容都是动态添加，每台设备的日志单独记录。至少想要减少修改量。那通过代码岂不是应该更好理解。</p><p>所以我进行了通过代码配置的探索。</p><p>探索环境</p><ul><li>net 8.0</li><li>控制台输出</li></ul><p>其中配置关键步骤如下：</p><ol><li>下载log4net包</li><li>在运行主函数中添加执行函数，接管原本的日志的记录。</li><li>添加使用类来简化使用。</li></ol><h4 id="下载log4net包"><a href="#下载log4net包" class="headerlink" title="下载log4net包"></a>下载log4net包</h4><p>这还用教吗？nuget中自己寻找。</p><h4 id="在运行主函数中添加执行函数"><a href="#在运行主函数中添加执行函数" class="headerlink" title="在运行主函数中添加执行函数"></a>在运行主函数中添加执行函数</h4><p>这一步我是使用了一个静态类来实现直接接管，并且简单配置最常用的方式。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> log4net;</span><br><span class="line"><span class="keyword">using</span> log4net.Appender;</span><br><span class="line"><span class="keyword">using</span> log4net.Core;</span><br><span class="line"><span class="keyword">using</span> log4net.Filter;</span><br><span class="line"><span class="keyword">using</span> log4net.Layout;</span><br><span class="line"><span class="keyword">using</span> log4net.Repository.Hierarchy;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">static</span> log4net.Appender.FileAppender;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Text.MyLog4net</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">LoggerManager</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 初始化配置</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Configure</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 初始化 log4net</span></span><br><span class="line">            log4net.Config.BasicConfigurator.Configure();</span><br><span class="line">            <span class="comment">// 配置根记录器</span></span><br><span class="line">            ConfigureRootLogger();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 在根路径下添加内容</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ConfigureRootLogger</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Logger rootLogger = ((Hierarchy)LogManager.GetRepository()).Root;</span><br><span class="line">            rootLogger.Level = Level.Debug;</span><br><span class="line">            <span class="comment">// 这里可以添加其他根记录器的配置，如输出器等</span></span><br><span class="line">            AddDeviceLogger(<span class="string">&quot;root&quot;</span>, Level.Debug);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 根据名称添加内瓤</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;name&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;level&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">AddDeviceLogger</span>(<span class="params"><span class="built_in">string</span> name, Level level</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> console = CreateConsoleAppender(name);</span><br><span class="line">            <span class="keyword">var</span> fileDebugAppender = CreateFileConmonAppender(name, Level.Debug);</span><br><span class="line">            <span class="keyword">var</span> fileInfoAppender = CreateFileConmonAppender(name, Level.Info);</span><br><span class="line">            <span class="keyword">var</span> fileErrorAppender = CreateFileConmonAppender(name, Level.Error);</span><br><span class="line">            <span class="comment">// 创建设备记录器</span></span><br><span class="line">            Logger deviceLogger = (Logger)((Hierarchy)LogManager.GetRepository()).GetLogger(name);</span><br><span class="line">            deviceLogger.Level = level;<span class="comment">//记录的最低级别</span></span><br><span class="line">            deviceLogger.AddAppender(fileDebugAppender);</span><br><span class="line">            deviceLogger.AddAppender(fileInfoAppender);</span><br><span class="line">            deviceLogger.AddAppender(fileErrorAppender);</span><br><span class="line">            deviceLogger.AddAppender(console);</span><br><span class="line">            deviceLogger.Additivity = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 通用的输出到文件的设备输出器创建</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;name&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;level&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;floderName&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> RollingFileAppender <span class="title">CreateFileConmonAppender</span>(<span class="params"><span class="built_in">string</span> name, Level level</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 创建布局</span></span><br><span class="line">            PatternLayout layout = <span class="keyword">new</span> PatternLayout(<span class="string">&quot;%date [%thread] %-5level %logger - %message%newline&quot;</span>);</span><br><span class="line">            layout.ActivateOptions(); <span class="comment">// 激活选项</span></span><br><span class="line"></span><br><span class="line">            LevelRangeFilter filter = <span class="keyword">new</span> LevelRangeFilter();</span><br><span class="line">            filter.LevelMin = level; <span class="comment">// 最低级别</span></span><br><span class="line">            filter.LevelMax = level; <span class="comment">// 最高级别</span></span><br><span class="line">            filter.ActivateOptions(); <span class="comment">// 激活选项</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 创建设备输出器</span></span><br><span class="line">            <span class="comment">// 输出到文件</span></span><br><span class="line">            RollingFileAppender deviceAppender = <span class="keyword">new</span> RollingFileAppender();</span><br><span class="line">            deviceAppender.Name = name;</span><br><span class="line">            deviceAppender.File = <span class="string">$&quot;Log/<span class="subst">&#123;DateTime.Now.ToString(<span class="string">&quot;yyyyMMdd&quot;</span>)&#125;</span>&quot;</span> + <span class="string">$&quot;/<span class="subst">&#123;level&#125;</span>.log&quot;</span>;</span><br><span class="line">            deviceAppender.LockingModel = <span class="keyword">new</span> MinimalLock(); <span class="comment">// 设置 LockingModel</span></span><br><span class="line">            deviceAppender.AppendToFile = <span class="literal">true</span>;</span><br><span class="line">            deviceAppender.MaxFileSize = <span class="number">10240</span>;</span><br><span class="line">            deviceAppender.MaxSizeRollBackups = <span class="number">100</span>;</span><br><span class="line">            deviceAppender.PreserveLogFileNameExtension = <span class="literal">true</span>;</span><br><span class="line">            deviceAppender.StaticLogFileName = <span class="literal">false</span>;</span><br><span class="line">            deviceAppender.DatePattern = <span class="string">&quot;yyyyMMdd&quot;</span>;</span><br><span class="line">            deviceAppender.RollingStyle = RollingFileAppender.RollingMode.Size;</span><br><span class="line"></span><br><span class="line">            deviceAppender.Layout = layout;</span><br><span class="line">            deviceAppender.AddFilter(filter);</span><br><span class="line">            deviceAppender.ActivateOptions(); <span class="comment">// 激活选项</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> deviceAppender;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 创建输出到控制台的设备记录器</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;name&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> ConsoleAppender <span class="title">CreateConsoleAppender</span>(<span class="params"><span class="built_in">string</span> name</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 创建布局</span></span><br><span class="line">            PatternLayout layout = <span class="keyword">new</span> PatternLayout(<span class="string">&quot;%date [%thread] %-5level %logger - %message%newline&quot;</span>);</span><br><span class="line">            layout.ActivateOptions(); <span class="comment">// 激活选项</span></span><br><span class="line"></span><br><span class="line">            LevelRangeFilter filter = <span class="keyword">new</span> LevelRangeFilter();</span><br><span class="line">            filter.LevelMin = Level.Debug; <span class="comment">// 最低级别</span></span><br><span class="line">            filter.LevelMax = Level.Error; <span class="comment">// 最高级别</span></span><br><span class="line">            filter.ActivateOptions(); <span class="comment">// 激活选项</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 创建设备输出器</span></span><br><span class="line">            <span class="comment">// 输出到Console</span></span><br><span class="line">            ConsoleAppender deviceAppender = <span class="keyword">new</span> ConsoleAppender();</span><br><span class="line">            deviceAppender.Name = name + <span class="string">&quot;Console&quot;</span>;</span><br><span class="line"></span><br><span class="line">            deviceAppender.Layout = layout;</span><br><span class="line">            deviceAppender.AddFilter(filter);</span><br><span class="line">            deviceAppender.ActivateOptions(); <span class="comment">// 激活选项</span></span><br><span class="line">            <span class="keyword">return</span> deviceAppender;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个其中涉及了不少对于log4net中的日志结构的理解。另外开一章专门讲解比较舒服。</p><h4 id="添加工具类"><a href="#添加工具类" class="headerlink" title="添加工具类"></a>添加工具类</h4><p>其实还是上面的那个工具类。我只是配置方式改变了，使用方式又没有变化。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> log4net;</span><br><span class="line"><span class="keyword">using</span> log4net.Core;</span><br><span class="line"><span class="keyword">using</span> log4net.Repository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Text.MyLog4net</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">class</span> <span class="title">LogHelper</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> ILog loginfo = LogManager.GetLogger(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">WriteLog</span>(<span class="params"><span class="built_in">string</span> info</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (loginfo.IsInfoEnabled)</span><br><span class="line">            &#123;</span><br><span class="line">                loginfo.Info(info);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">WriteLog</span>(<span class="params"><span class="built_in">string</span> info, Exception ex</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (loginfo.IsErrorEnabled)</span><br><span class="line">            &#123;</span><br><span class="line">                loginfo.Error(info, ex);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">DebugLog</span>(<span class="params"><span class="built_in">string</span> info</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (loginfo.IsDebugEnabled)</span><br><span class="line">            &#123;</span><br><span class="line">                loginfo.Debug(info);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="主函数的调用"><a href="#主函数的调用" class="headerlink" title="主函数的调用"></a>主函数的调用</h4><p>这边就演示下如何在主函数中添加的。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Text.MyLog4net;</span><br><span class="line">LoggerManager.Configure();</span><br><span class="line">Console.WriteLine(<span class="string">&quot;Hello, World!&quot;</span>);</span><br><span class="line">LogHelper.WriteLog(<span class="string">&quot;123&quot;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Visual_Studio快捷键</title>
      <link href="/2022/10/26/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/Visual-Studio%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
      <url>/2022/10/26/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/Visual-Studio%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      
        <content type="html"><![CDATA[<p>很多时候快捷键能够很大层次的简化自己的双手，方便自己。所以在网上找到了一些VS相关的快捷键<br>具体内容如下<br>快速构建构造函数<br>输入 ctor 然后按 TAB 键</p><p>快速构建自动属性<br>在变量那里，右击鼠标，点“重构”–“封装字段”</p><p>Visual Studio快捷键 [VS2008&#x2F;VS2005]</p><hr><p>“cw” + Tab + Tab - Console.WriteLine();</p><p>“mbox” + Tab + Tab - Messagebox.Show();</p><p>“prop” + Tab + Tab - 含有Get、Set访问器的属性块</p><p>“propg” + Tab + Tab - 只读属性快</p><p>“propfull” + Tabl + Tab - 具有完整get、set访问器的属性快</p><p>封装属性的快捷键：ctrl+R+E<br>快速属性： 输入prop 两下TAB</p><p>VS系统通用快捷键：<br>比如#region的快捷键是：ctrl + k,s</p><p>1、自动排版(类似VC6中的Alt+F8）<br>编辑.格式化选定内容 Ctrl + K，Ctrl + F 根据周围的代码行，正确缩进选定的代码行。</p><p>2、注释与去掉注释功能。</p><p>编辑.注释选定内容 Ctrl + K，Ctrl + C 使用编程语言的正确注释语法将代码的当前行标记为注释。</p><p>编辑.取消注释选定内容 Ctrl + K，Ctrl + U 从代码的当前行中移除注释语法。</p><p>将插入点移动到文档中的下一个大括号处。<br>编辑.转到大括号 Ctrl + ] 将插入点移动到文档中的下一个大括号处。</p><p>编辑.向下滚动一行 Ctrl + 向下键 将文本向下滚动一行。仅可用于文本编辑器。<br>编辑.向上滚动一行 Ctrl + 向上键 将文本向上滚动一行。仅可用于文本编辑器。</p><p>怎么找到解决方案<br>视图.解决方案资源管理器 Ctrl + Alt + L 显示解决方案资源管理器，它列出当前解决方案中的项目和文件</p><p>显示“工具箱”<br>视图.工具箱 Ctrl + Alt + X 显示“工具箱”，其中包含可包括在代码中或与代码一起使用的控件和其他项。</p><p>清除项目中的所有断点<br>调试.删除所有断点 Ctrl + Shift + F9 清除项目中的所有断点。</p><p>调试.反汇编 Ctrl + Alt + D 显示“反汇编”窗口。<br>调试.切换断点 F9 在当前行设置或移除断点。</p><p>VS2008 快捷键<br>新建项目 Ctrl+shift+N<br>新建网站 shift+Alt+N<br>文件 Ctrl+N<br>打开项目&#x2F;解决方案 Ctrl+shift+O<br>打开网站 shift+Alt+O<br>打开文件 Ctrl+O<br>保存当前文件 Ctrl+S<br>全部保存 Ctrl+Shift+S<br>添加新项 Ctrl+Shift+A<br>添加现有项 Shift+Alt+A<br>添加类 Shift+Alt+C<br>撤消 Ctrl+Z<br>重复 Ctrl+Y<br>转到 Ctrl+G<br>循环应用剪贴板中的复制项Ctrl+Shift+V<br>设置文档的格式 Ctrl+E，D<br>设置选定内容的格式Ctrl+E，F<br>转换为大写 Ctrl+Shift+U<br>转换为小写 Ctrl+U<br>删除水平空白Ctrl+E，<br>查看空白Ctrl+E,S<br>自动换行Ctrl+E,W<br>渐进式搜索Ctrl+I<br>注释选定内容Ctrl+E,C<br>取消注释选定内容Ctrl+E,U<br>快速查找 Ctrl+F<br>快速替换 Ctrl+H<br>在文件中查找 Ctrl+Shift+F<br>查找下一个 F3<br>查找上一个 Shift+F3<br>在文件中替换 Ctrl+Shift+H<br>查找符号 Alt+F12<br>切换书签 Ctrl+B，T<br>启用书签 Ctrl+B，E<br>上一书签 Ctrl+B，P<br>下一书签 Ctrl+B，N<br>清除书签 Ctrl+B，C<br>添加任务列表快捷方式Ctrl+E，T<br>切换大纲显示展开Ctrl+M，M<br>切换所有大纲显示Ctrl+M，L<br>停止大纲显示 Ctrl+M，P<br>折叠到定义 Ctrl+M，O<br>生产方法存根 Ctrl+K，M<br>列出成员 Ctrl+K，L<br>参数信息 Ctrl+K，P<br>快速信息 Ctrl+K，I<br>完成单词 Ctrl+K，W<br>插入代码段 Ctrl+K，X<br>外侧代码 Ctrl+K，S—–就是可选#region<br>代码 F7<br>设计器 Shift+F7<br>服务器资源管理器 Ctrl+W，L<br>解决方案资源管理器 Ctrl+W，S<br>类视图 Ctrl+W，c<br>代码定义窗口Ctrl+W，D<br>对象浏览器 Ctrl+W，J<br>错误列表 Ctrl+W，E<br>输出 Ctrl+W，O<br>属性窗口 Ctrl+W，P<br>任务列表 Ctrl+W，T<br>工具箱 Ctrl+W，X<br>全屏显示shift+Alt+Enter<br>向后定位 Ctrl+-<br>向前定位 Ctrl+Shift+-<br>属性页 Shift+F4<br>查找符号结果 Ctrl+W，Q<br>书签窗口 Ctrl+W，B<br>命令窗口 Ctrl+W，A<br>文档大纲 Ctrl+W，U<br>资源视图 Ctrl+W，R<br>宏资源管理器 Alt+F8<br>Web浏览器 Ctrl+W，W<br>重命名 F2<br>提取方法 Ctrl+R，M<br>封装字段 Ctrl+R，E<br>提取接口 Ctrl+R，I<br>将局部变量提升为参数 Ctrl+R,P<br>移除参数 Ctrl+R，V<br>重新排列参数 Ctrl+R，O<br>生成解决方案 F6<br>生成当前项目 Shift+F6<br>启动调试 F5<br>继续 F5<br>全部中断 Ctrl+Alt+Break<br>停止调试 Shift+F5<br>重新启动 Ctrl+Shift+F5<br>开始执行（不调试）Ctrl+F5<br>异常 Ctrl+D，E<br>逐语句 F11<br>跳出 Shift+F11<br>逐过程 F10<br>切换断点 F9<br>删除所有断点 Ctrl+Shift+F9<br>断点 Ctrl+D，B<br>即时 Ctrl+D，I<br>快速监视 Ctrl+D，Q<br>监视1 Ctrl+D，W<br>监视2 Ctrl+D+W，2<br>监视3 Ctrl+D+W，3<br>监视4 Ctrl+D+W，4<br>自动窗口Ctrl+D，A<br>局部变量 Ctrl+D，L<br>调用堆栈 Ctrl+D，C<br>线程 Ctrl+D，T<br>切换当前线程标志状态 Ctrl+8<br>仅显示标志的线程 Ctrl+9<br>模块 Ctrl+D，M<br>进程 Ctrl+D，P<br>反编译 Ctrl+Alt+D<br>寄存器 Ctrl+D，R<br>内存1 Ctrl+D，Y<br>内存2 Ctrl+Alt+M，2<br>内存3 Ctrl+Alt+M，3<br>内存4 Ctrl+Alt+M，4<br>附加到进程 Ctrl+Alt+P<br>代码段管理器 Ctrl+K，Ctrl+B<br>运行当前宏 Ctrl+Shift+P<br>记录当前宏 Ctrl+Shift+R<br>宏IDE Alt+F11<br>当前上下文中的测试 Ctrl+R，T<br>解决方案中的所有测试 Ctrl+R，A<br>如何实现 Ctrl+F1，H<br>搜索 Ctrl+F1,S<br>目录 Ctrl+F1，C<br>索引 Ctrl+F1，I<br>帮助收藏夹 Ctrl+F1，F<br>动态帮助 Ctrl+F1，D<br>索引结果 Ctrl+F1，T</p><hr><p>VS2005 常用快捷键<br>调试快捷键</p><p>F6: 生成解决方案<br>Ctrl+F6: 生成当前项目<br>F7: 查看代码<br>Shift+F7: 查看窗体设计器<br>F5: 启动调试<br>Ctrl+F5: 开始执行(不调试)<br>Shift+F5: 停止调试<br>Ctrl+Shift+F5: 重启调试<br>F9: 切换断点<br>Ctrl+F9: 启用&#x2F;停止断点<br>Ctrl+Shift+F9: 删除全部断点<br>F10: 逐过程<br>Ctrl+F10: 运行到光标处<br>F11: 逐语句</p><p>编辑快捷键</p><p>Shift+Alt+Enter: 切换全屏编辑<br>Ctrl+B,T &#x2F; Ctrl+K,K: 切换书签开关<br>Ctrl+B,N &#x2F; Ctrl+K,N: 移动到下一书签<br>Ctrl+B,P: 移动到上一书签<br>Ctrl+B,C: 清除全部标签</p><p>Ctrl+I: 渐进式搜索<br>Ctrl+Shift+I: 反向渐进式搜索<br>Ctrl+F: 查找<br>Ctrl+Shift+F: 在文件中查找<br>F3: 查找下一个<br>Shift+F3: 查找上一个<br>Ctrl+H: 替换<br>Ctrl+Shift+H: 在文件中替换<br>Alt+F12: 查找符号(列出所有查找结果)<br>Ctrl+Shift+V: 剪贴板循环</p><p>Ctrl+左右箭头键: 一次可以移动一个单词<br>Ctrl+上下箭头键: 滚动代码屏幕，但不移动光标位置。<br>Ctrl+Shift+L: 删除当前行<br>Ctrl+M,M: 隐藏或展开当前嵌套的折叠状态<br>Ctrl+M,L: 将所有过程设置为相同的隐藏或展开状态<br>Ctrl+M,P: 停止大纲显示<br>Ctrl+E,S: 查看空白<br>Ctrl+E,W: 自动换行<br>Ctrl+G: 转到指定行<br>Shift+Alt+箭头键: 选择矩形文本<br>Alt+鼠标左按钮: 选择矩形文本<br>Ctrl+Shift+U: 全部变为大写<br>Ctrl+U: 全部变为小写</p><p>代码快捷键</p><p>Ctrl+J &#x2F; Ctrl+K,L: 列出成员<br>Ctrl+Shift+空格键 &#x2F; Ctrl+K,P: 参数信息<br>Ctrl+K,I: 快速信息<br>Ctrl+E,C &#x2F; Ctrl+K,C: 注释选定内容<br>Ctrl+E,U &#x2F; Ctrl+K,U: 取消选定注释内容</p><p>Ctrl+K,M: 生成方法存根<br>Ctrl+K,X: 插入代码段<br>Ctrl+K,S: 插入外侧代码</p><p>F12: 转到所调用过程或变量的定义</p><p>窗口快捷键</p><p>Ctrl+W,W: 浏览器窗口<br>Ctrl+W,S: 解决方案管理器<br>Ctrl+W,C: 类视图<br>Ctrl+W,E: 错误列表<br>Ctrl+W,O: 输出视图<br>Ctrl+W,P: 属性窗口<br>Ctrl+W,T: 任务列表<br>Ctrl+W,X: 工具箱<br>Ctrl+W,B: 书签窗口<br>Ctrl+W,U: 文档大纲</p><p>Ctrl+D,B: 断点窗口<br>Ctrl+D,I: 即时窗口<br>Ctrl+Tab: 活动窗体切换<br>Ctrl+Shift+N: 新建项目<br>Ctrl+Shift+O: 打开项目<br>Ctrl+Shift+S: 全部保存<br>Shift+Alt+C: 新建类<br>Ctrl+Shift+A: 新建项</p>]]></content>
      
      
      <categories>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> Visual Studio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>定期清理文件与文件夹</title>
      <link href="/2022/10/26/C%20Sharp/%E5%AE%9A%E6%9C%9F%E6%B8%85%E7%90%86%E6%96%87%E4%BB%B6%E4%B8%8E%E6%96%87%E4%BB%B6%E5%A4%B9/"/>
      <url>/2022/10/26/C%20Sharp/%E5%AE%9A%E6%9C%9F%E6%B8%85%E7%90%86%E6%96%87%E4%BB%B6%E4%B8%8E%E6%96%87%E4%BB%B6%E5%A4%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="定期清理某种类型文件"><a href="#定期清理某种类型文件" class="headerlink" title="定期清理某种类型文件"></a>定期清理某种类型文件</h1><p>有的时候需要定期清理图片等。\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 定期清除文件</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// &lt;param name=&quot;fileDirect&quot;&gt;文件夹&lt;/param&gt;</span><br><span class="line">/// &lt;param name=&quot;postFix&quot;&gt;文件后缀&lt;/param&gt;</span><br><span class="line">/// &lt;param name=&quot;saveDay&quot;&gt;保存天数&lt;/param&gt;</span><br><span class="line">private static void DeleteFile(string fileDirect, string postFix, int saveDay)</span><br><span class="line">&#123;</span><br><span class="line">    DateTime nowtime = DateTime.Now; //获取当前时间</span><br><span class="line">    string[] files = Directory.GetFiles(fileDirect, postFix, SearchOption.AllDirectories);  //获取该目录下所有 .txt文件</span><br><span class="line">    foreach (string file in files)</span><br><span class="line">    &#123;</span><br><span class="line">        FileInfo fileInfo = new FileInfo(file);</span><br><span class="line">        TimeSpan t = nowtime - fileInfo.CreationTime;  //当前时间  减去 文件创建时间</span><br><span class="line">        int day = t.Days;</span><br><span class="line">        if (day &gt; saveDay)   //保存的时间 ；  单位：天</span><br><span class="line">        &#123;</span><br><span class="line">            File.Delete(file);  //删除超过时间的文件</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用方式–异步使用"><a href="#使用方式–异步使用" class="headerlink" title="使用方式–异步使用"></a>使用方式–异步使用</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">private static void RegularDeleteImage()</span><br><span class="line">&#123;</span><br><span class="line">    int saveDays = 0; //保存天数，可根据实际需求定义</span><br><span class="line">    string path = @&quot;C:\Users\Nestar\Pictures\Saved Pictures&quot;; //保存数据的路径</span><br><span class="line">    //开启一个异步线程定期检查是否可以删除文件</span><br><span class="line">    Task.Run(() =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        while (true)</span><br><span class="line">        &#123;</span><br><span class="line">            DeleteFile(path, &quot;*.jpg&quot;, saveDays);</span><br><span class="line">            Thread.Sleep(1000 * 60 * 60 * 24); //每隔24H检查一遍</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="“yyMMdd”-命名的文件夹进行删除"><a href="#“yyMMdd”-命名的文件夹进行删除" class="headerlink" title="(“yyMMdd”)命名的文件夹进行删除"></a>(“yyMMdd”)命名的文件夹进行删除</h1><p>补充一个保留文件夹名称，删除其他文件夹的方法。\n<br>本来还想说这个方案好蠢，没想到蠢人竟是我自己。\n<br>在上面使用被驳回之后，立马用到了下面的删除文件夹以及子文件夹。\n<br>上面的方案是将文件根据创建的日期进行删除，这里是根据不同日期的图片放在依据日期命名的文件夹中。\n<br>然后依据日期命名的文件夹进行删除。\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">public static void RegularCleanFile()</span><br><span class="line">&#123;</span><br><span class="line">    int saveDays = 0; //保存天数，可根据实际需求定义</span><br><span class="line">    string path = @&quot;C:\Users\Nestar\Pictures\Saved Pictures&quot;; //保存数据的路径</span><br><span class="line">    var saveFileFolderList = new List&lt;string&gt;(); //保存哪些文件夹</span><br><span class="line">    for (int i = 0; i &lt; saveDays; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        var saveFile = DateTime.Now.AddDays(-i).ToString(&quot;yyyyMMdd&quot;);//这部分需要根据需要自己定制</span><br><span class="line">        saveFileFolderList.Add(saveFile);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //开启一个异步线程定期检查是否可以删除文件</span><br><span class="line">    Task.Run(() =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        while (true)</span><br><span class="line">        &#123;</span><br><span class="line">            if (Directory.Exists(path))</span><br><span class="line">            &#123;</span><br><span class="line">                DirectoryInfo di = new DirectoryInfo(path);</span><br><span class="line">                var fsiArr = di.GetFileSystemInfos(); //获取所有的文件、文件夹</span><br><span class="line"></span><br><span class="line">                foreach (var fsi in fsiArr)</span><br><span class="line">                &#123;</span><br><span class="line">                    if (fsi is DirectoryInfo) //判断是否文件夹</span><br><span class="line">                    &#123;</span><br><span class="line">                        //判断是否在删除范畴内</span><br><span class="line">                        if (!saveFileFolderList.Exists(o =&gt; fsi.Name.Contains(o)))</span><br><span class="line">                        &#123;</span><br><span class="line">                            DirectoryInfo delDi = new DirectoryInfo(fsi.FullName);</span><br><span class="line">                            delDi.Delete(true); //删除文件夹及文件</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Thread.Sleep(1000 * 60 * 60 * 6); //每隔6H检查一遍</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>既然有删除，那自然也要有创建文件夹，经过测试\n</p><ol><li>可以一次性创建多层目录，</li><li>创建的文件夹如果已经存在不会报错，也不会删除之前的文件夹重新创建，而是没有任何动作。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DirectoryInfo directoryInfo = new DirectoryInfo($&quot;C:\\image\\&#123;DateTime.Now.ToString(&quot;yyMMdd&quot;)&#125;&quot;);</span><br><span class="line">directoryInfo.Create();</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 日常学习 </category>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 文件夹 </tag>
            
            <tag> 定期清理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-连接SQLServer</title>
      <link href="/2022/10/23/C%20Sharp/C%20Sharp%20%E8%BF%9E%E6%8E%A5SQLServer/"/>
      <url>/2022/10/23/C%20Sharp/C%20Sharp%20%E8%BF%9E%E6%8E%A5SQLServer/</url>
      
        <content type="html"><![CDATA[<h1 id="数据库的连接"><a href="#数据库的连接" class="headerlink" title="数据库的连接"></a>数据库的连接</h1><p>万一有的时候需要我去连接SQL Server，这边提前准备\n</p><p>相关的代码如下\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">static void Main(string[] args)</span><br><span class="line">&#123;</span><br><span class="line">    // 声明一个SqlConnectionStringBuilder对象</span><br><span class="line">    SqlConnectionStringBuilder scsb = new SqlConnectionStringBuilder();</span><br><span class="line">    scsb.DataSource = &quot;DESKTOP-BR0Q3FS\\SQLEXPRESS&quot;;    // 设置数据源服务器，注意这里的单斜线变双斜线了</span><br><span class="line">    //scsb.UserID = &quot;sa&quot;;     // 设置用户名</span><br><span class="line">    //scsb.Password = &quot;mima&quot;; // 设置密码</span><br><span class="line">    scsb.InitialCatalog = &quot;xiaoxieDatabase&quot;; // 设置要访问的数据库</span><br><span class="line">    //scsb.ConnectionString = &quot;SSPI&quot;;</span><br><span class="line">    scsb.IntegratedSecurity = true;</span><br><span class="line">    // 创建连接</span><br><span class="line">    SqlConnection SqlCon = new SqlConnection(scsb.ToString());</span><br><span class="line">    // 打开数据库</span><br><span class="line">    SqlCon.Open();</span><br><span class="line">    // 1、创建要执行的SQL查询语句</span><br><span class="line">    string str = &quot;select Name from Teachers where Gender = &#x27;man&#x27;&quot;;</span><br><span class="line"></span><br><span class="line">    // 2、创建用于执行SQL查询语句的对象</span><br><span class="line">    SqlCommand SqlCom = new SqlCommand(str, SqlCon);// 参数1：SQL语句字符串。参数2：已经打开的数据库</span><br><span class="line"></span><br><span class="line">    // 3、执行对象的SQL查询语句并接受结果</span><br><span class="line">    SqlDataReader Sdr = SqlCom.ExecuteReader();</span><br><span class="line"></span><br><span class="line">    // 4、读取结果的数据</span><br><span class="line">    while (Sdr.Read())</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(&quot;姓名：&quot; + Sdr[&quot;Name&quot;].ToString());</span><br><span class="line">    &#125;</span><br><span class="line">    Console.ReadLine();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工作技巧 </category>
          
          <category> 日常学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 数据库 </tag>
            
            <tag> SQL Server </tag>
            
            <tag> 连接 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Form操作-TextBox仅数字等输入，离开检测</title>
      <link href="/2022/10/09/WinForm/Form%E6%93%8D%E4%BD%9C-TextBox%E4%BB%85%E6%95%B0%E5%AD%97%E7%AD%89%E8%BE%93%E5%85%A5%EF%BC%8C%E7%A6%BB%E5%BC%80%E6%A3%80%E6%B5%8B/"/>
      <url>/2022/10/09/WinForm/Form%E6%93%8D%E4%BD%9C-TextBox%E4%BB%85%E6%95%B0%E5%AD%97%E7%AD%89%E8%BE%93%E5%85%A5%EF%BC%8C%E7%A6%BB%E5%BC%80%E6%A3%80%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="仅支持数字等输入"><a href="#仅支持数字等输入" class="headerlink" title="仅支持数字等输入"></a>仅支持数字等输入</h1><p>有的时候我们对于一些控件，希望它仅仅支持部分文档的输入。比如端口号应该只有数字或者分隔符。因此在有了在界面中设置仅支持某种输入的方法。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 设置Port只能输入数字与回车</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// &lt;param name=&quot;sender&quot;&gt;&lt;/param&gt;</span><br><span class="line">/// &lt;param name=&quot;e&quot;&gt;&lt;/param&gt;</span><br><span class="line">private void PortTextBox_KeyPress(object sender, KeyPressEventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    if (!((e.KeyChar &gt;= 48 &amp;&amp; e.KeyChar &lt;= 57) || e.KeyChar == 8))</span><br><span class="line">    &#123;</span><br><span class="line">        e.Handled = true;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="离开或者输入时的检测"><a href="#离开或者输入时的检测" class="headerlink" title="离开或者输入时的检测"></a>离开或者输入时的检测</h1><p>想了下好像没有必要<br>那就提一嘴，主要就是在控件的事件，在可视化界面中，放在属性旁边的选项，能够帮助实现部分的功能。<br>比如离开，进入，按键等。</p>]]></content>
      
      
      <categories>
          
          <category> Form操作 </category>
          
          <category> 工作技巧 </category>
          
          <category> TextBox </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Form操作 </tag>
            
            <tag> 日常学习 </tag>
            
            <tag> TextBox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XML-RPC</title>
      <link href="/2022/10/09/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/XML-RPC/"/>
      <url>/2022/10/09/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/XML-RPC/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/qq_39024280/article/details/120861419?spm=1001.2101.3001.6661.1&amp;utm_medium=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1-120861419-blog-95950589.pc_relevant_multi_platform_whitelistv3&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1-120861419-blog-95950589.pc_relevant_multi_platform_whitelistv3&amp;utm_relevant_index=1</span><br></pre></td></tr></table></figure><p>这个博客内容可以直接使用<br>一些使用心得<br>尝试了一下封装在系统类中，完全可以  </p>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
          <category> XML-RPC </category>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 工作技巧 </tag>
            
            <tag> XML-RPC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Form操作-MessageBox</title>
      <link href="/2022/10/09/WinForm/Form%E6%93%8D%E4%BD%9C-MessageBox/"/>
      <url>/2022/10/09/WinForm/Form%E6%93%8D%E4%BD%9C-MessageBox/</url>
      
        <content type="html"><![CDATA[<p>参考文章<br><a href="https://blog.csdn.net/qq_44793656/article/details/124509495">https://blog.csdn.net/qq_44793656/article/details/124509495</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/qq_44793656/article/details/124509495</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Form操作 </category>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Form操作 </tag>
            
            <tag> MessageBox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Form操作-二次确认弹窗</title>
      <link href="/2022/10/09/WinForm/Form%E6%93%8D%E4%BD%9C-%E4%BA%8C%E6%AC%A1%E7%A1%AE%E8%AE%A4%E5%BC%B9%E7%AA%97/"/>
      <url>/2022/10/09/WinForm/Form%E6%93%8D%E4%BD%9C-%E4%BA%8C%E6%AC%A1%E7%A1%AE%E8%AE%A4%E5%BC%B9%E7%AA%97/</url>
      
        <content type="html"><![CDATA[<p>在一些比较关键的功能上可以让进行二次确认，避免因为误操作而导致的损失。<br>示例代码是用于二次确认用户的界面关闭，可以在此基础上进行修改。 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">private void frmMain_FormClosing(object sender, FormClosingEventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    DialogResult Result = MessageBox.Show(&quot;程序将被关闭，请确认是否继续&quot;,&quot;警告&quot;, MessageBoxButtons.OKCancel);</span><br><span class="line">    if (Result == DialogResult.Cancel)</span><br><span class="line">    &#123;</span><br><span class="line">        e.Cancel = true;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Form操作 </category>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Form操作 </tag>
            
            <tag> 二次确认 </tag>
            
            <tag> 工作技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IP设置</title>
      <link href="/2022/10/09/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/IP%E8%AE%BE%E7%BD%AE/"/>
      <url>/2022/10/09/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/IP%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="IP校验"><a href="#IP校验" class="headerlink" title="IP校验"></a>IP校验</h1><p>检查输入是否符合IP格式，建议与IP是否未空混合使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public static bool IPCheck(string IP)</span><br><span class="line">&#123;</span><br><span class="line">    return Regex.IsMatch(IP, @&quot;^(([0-9]|[1-9][0-9]|1[0-9]&#123;2&#125;|2[0-4][0-9]|25[0-5])\.)&#123;3&#125;([0-9]|[1-9][0-9]|1[0-9]&#123;2&#125;|2[0-4][0-9]|25[0-5])$&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="获取设备当前IP"><a href="#获取设备当前IP" class="headerlink" title="获取设备当前IP"></a>获取设备当前IP</h1><p>获取当前设备的ip</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">public string GetAddressIP()</span><br><span class="line">&#123;</span><br><span class="line">    string AddressIP = string.Empty;</span><br><span class="line">    foreach (IPAddress _IPAddress in Dns.GetHostEntry(Dns.GetHostName()).AddressList)</span><br><span class="line">    &#123;</span><br><span class="line">        if (_IPAddress.AddressFamily.ToString() == &quot;InterNetwork&quot;)</span><br><span class="line">        &#123;</span><br><span class="line">            AddressIP = _IPAddress.ToString();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return AddressIP;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 工作技巧 </tag>
            
            <tag> IP设置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Form操作-菜单栏与下拉框</title>
      <link href="/2022/10/09/WinForm/Form%E6%93%8D%E4%BD%9C-%E8%8F%9C%E5%8D%95%E6%A0%8F%E4%B8%8E%E4%B8%8B%E6%8B%89%E6%A1%86/"/>
      <url>/2022/10/09/WinForm/Form%E6%93%8D%E4%BD%9C-%E8%8F%9C%E5%8D%95%E6%A0%8F%E4%B8%8E%E4%B8%8B%E6%8B%89%E6%A1%86/</url>
      
        <content type="html"><![CDATA[<p>窗口上端的菜单栏<br>MenuItemInstallService<br>记得添加一个menuScrip属性的控件<br>设置之后依次添加，见天click事件也是可以的。<br>下拉框<br>combox<br>Combox.selectIndex表示当前所选择的值的编号<br>combox.index表示编号从0开始计数，0，1，2，3，4…  </p>]]></content>
      
      
      <categories>
          
          <category> Form操作 </category>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Form操作 </tag>
            
            <tag> 菜单栏 </tag>
            
            <tag> 下拉框 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Form操作-TextBox显示服务状态</title>
      <link href="/2022/10/09/WinForm/Form%E6%93%8D%E4%BD%9C-TextBox%E6%98%BE%E7%A4%BA%E6%9C%8D%E5%8A%A1%E7%8A%B6%E6%80%81/"/>
      <url>/2022/10/09/WinForm/Form%E6%93%8D%E4%BD%9C-TextBox%E6%98%BE%E7%A4%BA%E6%9C%8D%E5%8A%A1%E7%8A%B6%E6%80%81/</url>
      
        <content type="html"><![CDATA[<h1 id="TextBox显示状态（status）"><a href="#TextBox显示状态（status）" class="headerlink" title="TextBox显示状态（status）"></a>TextBox显示状态（status）</h1><p>在界面张添加timer控件，<br>设置enable&#x3D;true这个属性是是否启用，<br>interval&#x3D;1000此处单位为毫秒，这个属性是时间间隔<br>然后在事件中选择tick，绑定需要执行的方法。<br>状态文本可以显示在TextBox。Text中，可以将TextBox.Enable&#x3D;false这样界面中文本框就不能显示了。</p>]]></content>
      
      
      <categories>
          
          <category> Form操作 </category>
          
          <category> 工作技巧 </category>
          
          <category> TextBox </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Form操作 </tag>
            
            <tag> 日常学习 </tag>
            
            <tag> TextBox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>管理员权限运行程序</title>
      <link href="/2022/10/09/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E8%BF%90%E8%A1%8C%E7%A8%8B%E5%BA%8F/"/>
      <url>/2022/10/09/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E8%BF%90%E8%A1%8C%E7%A8%8B%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<p>在工作中由于使用的系统进程，这个需要管理员权限才可以实现对于进程的访问。因此打包出来的程序也是需要系统权限的验证。  </p><h1 id="两种方案"><a href="#两种方案" class="headerlink" title="两种方案"></a>两种方案</h1><h2 id="方案1-通过应用程序服务清单进行权限设置"><a href="#方案1-通过应用程序服务清单进行权限设置" class="headerlink" title="方案1-通过应用程序服务清单进行权限设置"></a>方案1-通过应用程序服务清单进行权限设置</h2><p>这个设置会在exe上有管理员标志。运行程序时会索取管理员权限。需要注意的的是添加应用程序服务清单是在你的启动program，如果在别的program中添加不起作用。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- UAC 清单选项</span><br><span class="line">     如果想要更改 Windows 用户帐户控制级别，请使用</span><br><span class="line">     以下节点之一替换 requestedExecutionLevel 节点。n</span><br><span class="line">&lt;requestedExecutionLevel  level=&quot;asInvoker&quot; uiAccess=&quot;false&quot; /&gt;</span><br><span class="line">&lt;requestedExecutionLevel  level=&quot;requireAdministrator&quot; uiAccess=&quot;false&quot; /&gt;</span><br><span class="line">&lt;requestedExecutionLevel  level=&quot;highestAvailable&quot; uiAccess=&quot;false&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    指定 requestedExecutionLevel 元素将禁用文件和注册表虚拟化。</span><br><span class="line">    如果你的应用程序需要此虚拟化来实现向后兼容性，则删除此</span><br><span class="line">    元素。</span><br><span class="line">--&gt;</span><br><span class="line">&lt;requestedExecutionLevel level=&quot;requireAdministrator&quot; uiAccess=&quot;false&quot; /&gt;</span><br></pre></td></tr></table></figure><h2 id="方案2-手动索取管理员权限"><a href="#方案2-手动索取管理员权限" class="headerlink" title="方案2-手动索取管理员权限"></a>方案2-手动索取管理员权限</h2><p>此方案是在程序启动时检查是否管理员权限启动，如果不是就提示用户需要管理员权限启动，然后关闭程序。如果时管理员权限启动，则正常启动程序。<br>这里提供了一种如何在程序即将运行时，申请管理员权限的方案。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Diagnostics;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Reflection;</span><br><span class="line">using System.Security.Principal;</span><br><span class="line">using System.ServiceProcess;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Threading.Tasks;</span><br><span class="line">using System.Windows.Forms;</span><br><span class="line"></span><br><span class="line">namespace XmlRpcApp</span><br><span class="line">&#123;</span><br><span class="line">    static class Program</span><br><span class="line">    &#123;</span><br><span class="line">        [STAThread]</span><br><span class="line">        static void Main()</span><br><span class="line">        &#123;</span><br><span class="line">            var wi = WindowsIdentity.GetCurrent();</span><br><span class="line">            var wp = new WindowsPrincipal(wi);</span><br><span class="line"></span><br><span class="line">            bool runAsAdmin = wp.IsInRole(WindowsBuiltInRole.Administrator);</span><br><span class="line"></span><br><span class="line">            if (!runAsAdmin)</span><br><span class="line">            &#123;</span><br><span class="line">                // It is not possible to launch a ClickOnce app as administrator directly,</span><br><span class="line">                // so instead we launch the app as administrator in a new process.</span><br><span class="line">                var processInfo = new ProcessStartInfo(Assembly.GetExecutingAssembly().CodeBase);</span><br><span class="line"></span><br><span class="line">                // The following properties run the new process as administrator</span><br><span class="line">                processInfo.UseShellExecute = true;</span><br><span class="line">                processInfo.Verb = &quot;runas&quot;;</span><br><span class="line"></span><br><span class="line">                // Start the new process</span><br><span class="line">                try</span><br><span class="line">                &#123;</span><br><span class="line">                    Process.Start(processInfo);</span><br><span class="line">                &#125;</span><br><span class="line">                catch (Exception)</span><br><span class="line">                &#123;</span><br><span class="line">                    // The user did not allow the application to run as administrator</span><br><span class="line">                    MessageBox.Show(&quot;This program requires administrator privileges to run&quot;);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                // Shut down the current process</span><br><span class="line">                Application.Exit();</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                // We are running as administrator</span><br><span class="line">                Application.EnableVisualStyles();</span><br><span class="line">                Application.SetCompatibleTextRenderingDefault(false);</span><br><span class="line">                Application.Run(new ClientApp());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考文章链接如下所示</p>]]></content>
      
      
      <categories>
          
          <category> 工作技巧 </category>
          
          <category> 管理员权限 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 工作技巧 </tag>
            
            <tag> 管理员权限程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修改命名空间</title>
      <link href="/2022/10/09/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/%E4%BF%AE%E6%94%B9%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4/"/>
      <url>/2022/10/09/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/%E4%BF%AE%E6%94%B9%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4/</url>
      
        <content type="html"><![CDATA[<p>参考链接<br><a href="https://www.jb51.net/article/252677.htm">https://www.jb51.net/article/252677.htm</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.jb51.net/article/252677.htm</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 修改命名空间 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>批处理.bat返回上一层目录</title>
      <link href="/2022/10/09/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/%E6%89%B9%E5%A4%84%E7%90%86-bat%E8%BF%94%E5%9B%9E%E4%B8%8A%E4%B8%80%E5%B1%82%E7%9B%AE%E5%BD%95/"/>
      <url>/2022/10/09/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/%E6%89%B9%E5%A4%84%E7%90%86-bat%E8%BF%94%E5%9B%9E%E4%B8%8A%E4%B8%80%E5%B1%82%E7%9B%AE%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>批处理目前看到的应用只有win的。bat文件中<br>这次遇见的问题是我文件自动导出到下一层，但是我需要使用上一层的某个exe，这个就是需要对于批处理文件的路径有一定的认识<br>我需要C：\ batch \路径。我如何才能获得这条道路？ 它工作正常如果我给绝对路径 -  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%windir%\Microsoft.NET\Framework\v4.0.30319\InstallUtil.exe C:\batch\bin\ERecruitGenerateReportsWindowsService.exe</span><br></pre></td></tr></table></figure><p>您尝试使用%<del>1在目录结构中上升一级是创造性的并且语法完全无效。正确的语法同样简单 - 使用..\。 由于%</del>dp0以\结尾，因此不需要前导\。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%windir%\Microsoft.NET\Framework\v4.0.30319\InstallUtil.exe %~dp0..\bin\ERecruitGenerateReportsWindowsService.exe</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
          <category> 工作技巧 </category>
          
          <category> 批处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 工作技巧 </tag>
            
            <tag> 批处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AutoResetEvent的线程同步</title>
      <link href="/2022/10/09/C%20Sharp/AutoResetEvent%E4%B8%8EWaitone%E4%B8%8Eset/"/>
      <url>/2022/10/09/C%20Sharp/AutoResetEvent%E4%B8%8EWaitone%E4%B8%8Eset/</url>
      
        <content type="html"><![CDATA[<h1 id="AutoResetEvent的线程同步"><a href="#AutoResetEvent的线程同步" class="headerlink" title="AutoResetEvent的线程同步"></a>AutoResetEvent的线程同步</h1><p>简单说一下。这个是比较基础的线程同步方法。基础就表示这玩意实际使用体验来说并不如一些高级一些的方法。比如Task的使用。它们会更方便理解，也更加容易实现。</p><p>首先理解AutoresetEvent的作用：线程之间的同步，告知别的线程这个已经完成。</p><p>使用方法：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">AutoResetEvent a1 = <span class="keyword">new</span> AutoResetEvent(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">new</span> Task.Run(()=&gt;&#123;</span><br><span class="line">    a1.WaitOne();</span><br><span class="line">    Console.log(<span class="string">&quot;Task 2 is OK&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">new</span> Task.Run(()=&gt;&#123;</span><br><span class="line">    Task.Delay(<span class="number">1000</span>);</span><br><span class="line">    a1.Set();</span><br><span class="line">    Console.log(<span class="string">&quot;Task 1 is OK&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 预计结果如下</span></span><br><span class="line"><span class="comment">// Task 1 is OK</span></span><br><span class="line"><span class="comment">// Task 2 is OK</span></span><br></pre></td></tr></table></figure><p>虽然2比1先执行，但是2需要等待1来给让阻塞状态取消。所以可以实现线程之间的传递消息。</p><p>其中可以实现操作的地方很多。</p><ul><li>比如这个<a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.threading.waithandle.close?view=net-8.0">WaitOne()</a>方法。可以实现超时的处理。可以设置超时后返回True或者False。这样在面对超时的也好处理。</li><li>WaitOne()在有多个的时候，一次Set()只会有一处解除阻塞状态。其他保持不变。</li><li><code>AutoResetEvent a1 = new AutoResetEvent(true)</code>或者不传入的时候，默认是true。则第一次<a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.threading.waithandle.close?view=net-8.0">WaitOne()</a>不会触发阻塞</li></ul><p>看了一些说明，似乎是可以用很多有意思的地方。</p><p>在多线程的环境中，比如生产者消费者模型种，消费者需要等待生产者先生产出产品。所以需要一个信号量来表示产品生产成功。此时可以使用这个来实现。</p><p>AutoResetEvent a1 &#x3D; new AutoResetEvent(false);<br>不传入false默认为true，不会阻塞线程，所以必须传false。<br>WaitOne(int)； WaitOne(int,bool)； WaitOne(timespan,bool)；<br>第二个参数传true代表超时后由set()设置不阻塞线程，如果传入false，如:WaitOne(2000,false);当超过两秒后线程就解除阻塞了，也就是等第二次在进入此线程时候会直接执行并不会阻塞线程。<br>WaitOne返回值为true代表当前线程不阻塞，返回为false代表当前线程被阻塞。<br>WaitOne第二个参数：如果等待之前先退出上下文的同步域（如果在同步上下文中），并在稍后重新获取它(需要其他地方调用Set方法)，则为 true；否则为 false。<br>原文链接：<a href="https://blog.csdn.net/Liumotor/article/details/107085239">https://blog.csdn.net/Liumotor/article/details/107085239</a>  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/Liumotor/article/details/107085239</span><br></pre></td></tr></table></figure><p>仔细想了下为什么会用到这个知识。应该是面对不能够确定处理时间，但是事件的触发又是不受到控制的。在用户去手动处理一些内容的时候，避免用户再次接到新的弹窗，影响用户的操作。因此需要阻塞当前线程，然后去处理之前线程提出的问题，等到问题处理完毕之后，恢复线程的运行。很巧妙的设定。  </p>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何获取列的构造方法以及对应的参数列表</title>
      <link href="/2022/10/09/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E5%88%97%E7%9A%84%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95%E4%BB%A5%E5%8F%8A%E5%AF%B9%E5%BA%94%E7%9A%84%E5%8F%82%E6%95%B0%E5%88%97%E8%A1%A8/"/>
      <url>/2022/10/09/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E5%88%97%E7%9A%84%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95%E4%BB%A5%E5%8F%8A%E5%AF%B9%E5%BA%94%E7%9A%84%E5%8F%82%E6%95%B0%E5%88%97%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<p>顾名思义，仅仅知道类的名字的时候去构造函数会很困难，通过这种方法可以获取对应的构造函数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Type type = typeof(MethodTest);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 输入参数：BindingFlags.Public，获取所有公开的构造函数</span><br><span class="line">Console.WriteLine(&quot;输入参数：BindingFlags.Public | BindingFlags.NonPublic，获取所有公开yu的构造函数：&quot;);</span><br><span class="line">ConstructorInfo[] infoArray2 = type.GetConstructors(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Static | BindingFlags.Instance);</span><br><span class="line">foreach (ConstructorInfo info in infoArray2)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(&quot;这是一个公开的构造方法&#123;0&#125;&quot;, info.IsPublic);</span><br><span class="line">    Console.WriteLine(&quot;这是一个静态的构造方法&#123;0&#125;&quot;, info.IsStatic);</span><br><span class="line">    foreach(ParameterInfo a in info.GetParameters())</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(a.ParameterType.ToString());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">Console.WriteLine();</span><br></pre></td></tr></table></figure><p>上面是对应的关键代码，下面是完整代码，演示如何去实现。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Reflection;</span><br><span class="line">using System.Runtime.InteropServices;</span><br><span class="line">using System.Threading.Tasks;</span><br><span class="line">using UnderAutomation.UniversalRobots.XmlRpc;</span><br><span class="line"></span><br><span class="line">namespace ReflectMethod</span><br><span class="line">&#123;</span><br><span class="line">    class Program</span><br><span class="line">    &#123;</span><br><span class="line">        static void Main(string[] args)</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            Type type = typeof(MethodTest);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            // 输入参数：BindingFlags.Public，获取所有公开的构造函数</span><br><span class="line">            Console.WriteLine(&quot;输入参数：BindingFlags.Public | BindingFlags.NonPublic，获取所有公开yu的构造函数：&quot;);</span><br><span class="line">            ConstructorInfo[] infoArray2 = type.GetConstructors(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Static | BindingFlags.Instance);</span><br><span class="line">            foreach (ConstructorInfo info in infoArray2)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(&quot;这是一个公开的构造方法&#123;0&#125;&quot;, info.IsPublic);</span><br><span class="line">                Console.WriteLine(&quot;这是一个静态的构造方法&#123;0&#125;&quot;, info.IsStatic);</span><br><span class="line">                foreach(ParameterInfo a in info.GetParameters())</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(a.ParameterType.ToString());</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Console.WriteLine();</span><br><span class="line"></span><br><span class="line">            //// 输入参数：BindingFlags.Public，获取所有公开的构造函数</span><br><span class="line">            //Console.WriteLine(&quot;输入参数：BindingFlags.Public | BindingFlags.Instance，获取所有公开的构造函数：&quot;);</span><br><span class="line">            //ConstructorInfo[] infoArray3 = type.GetConstructors(BindingFlags.Public | BindingFlags.Instance);</span><br><span class="line">            //foreach (ConstructorInfo info in infoArray3)</span><br><span class="line">            //&#123;</span><br><span class="line">            //    Console.Write(info.IsStatic);</span><br><span class="line">            //    Console.Write(info.GetParameters().ToString());</span><br><span class="line">            //&#125;</span><br><span class="line"></span><br><span class="line">            //Console.WriteLine();</span><br><span class="line"></span><br><span class="line">            //Console.WriteLine(&quot;输入参数：BindingFlags.Static | BindingFlags.NonPublic，获取所有静态的构造函数：&quot;);</span><br><span class="line">            //ConstructorInfo[] infoArray4 = type.GetConstructors(BindingFlags.Static | BindingFlags.NonPublic);</span><br><span class="line">            //foreach (ConstructorInfo info in infoArray4)</span><br><span class="line">            //&#123;</span><br><span class="line">            //    Console.Write(info.IsStatic);</span><br><span class="line">            //    Console.Write(info.GetParameters().ToString());</span><br><span class="line">            //&#125;</span><br><span class="line"></span><br><span class="line">            //Console.WriteLine();</span><br><span class="line"></span><br><span class="line">            //Console.WriteLine(&quot;输入参数：BindingFlags.NonPublic | BindingFlags.Instance，获取所有非公开的构造函数：&quot;);</span><br><span class="line">            //ConstructorInfo[] infoArray5 = type.GetConstructors(BindingFlags.NonPublic | BindingFlags.Instance);</span><br><span class="line">            //foreach (ConstructorInfo info in infoArray5)</span><br><span class="line">            //&#123;</span><br><span class="line">            //    Console.Write(info.IsStatic);</span><br><span class="line">            //    Console.Write(info.GetParameters().ToString());</span><br><span class="line">            //&#125;</span><br><span class="line"></span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">            ////反射获取 命名空间+类名</span><br><span class="line">            //string className = &quot;ReflectMethod.MethodTest&quot;;</span><br><span class="line">            //string methodName = &quot;Sleep&quot;;</span><br><span class="line">            //int a;</span><br><span class="line">            //a = 10;</span><br><span class="line">            ////Type[] types = &#123; typeof(string), typeof(string) &#125;;</span><br><span class="line">            //Type[] types = new Type[a];</span><br><span class="line">            ////传递参数</span><br><span class="line">            //Object[] paras = new Object[] &#123; &quot;name&quot;,&quot;18&quot; &#125;;</span><br><span class="line">            //Type t = Type.GetType(className);</span><br><span class="line">            //object obj = Activator.CreateInstance(t);</span><br><span class="line"></span><br><span class="line">            ////直接调用</span><br><span class="line">            //MethodInfo method = t.GetMethod(methodName,types);</span><br><span class="line">            //method.Invoke(obj, paras);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    class MethodTest</span><br><span class="line">    &#123;</span><br><span class="line">        string name;</span><br><span class="line">        public MethodTest(string name)</span><br><span class="line">        &#123;</span><br><span class="line">            this.name = name;</span><br><span class="line">        &#125;</span><br><span class="line">        int age;</span><br><span class="line">        public MethodTest(int age)</span><br><span class="line">        &#123;</span><br><span class="line">            this.age = age;</span><br><span class="line">        &#125;</span><br><span class="line">        public void Sleep(string name,int age)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine($&quot;You have bean man,you must sleep alone,&#123;name&#125;&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        public void Sleep(string name, string age)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine($&quot;You have bean &#123;age&#125; old,you must sleep alone,&#123;name&#125;&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一些参数的说明<br>暂时掠过<br>通过方法名与参数获取对应的方法，不调用  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">//传递参数</span><br><span class="line">string className = &quot;ConsoleApp2.ClassSample&quot;;</span><br><span class="line">string methodName = request.MethodName;</span><br><span class="line"></span><br><span class="line">var t = Type.GetType(className);</span><br><span class="line">object obj = Activator.CreateInstance(t);</span><br><span class="line">try</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    #region 查找对应方法</span><br><span class="line">    MethodInfo[] info = t.GetMethods();</span><br><span class="line">    for (int i = 0; i &lt; info.Length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        var md = info[i];</span><br><span class="line">        //方法名</span><br><span class="line">        string mothodName = md.Name;</span><br><span class="line">        //参数集合</span><br><span class="line">        ParameterInfo[] paramInfos = md.GetParameters();</span><br><span class="line">        //方法名相同且参数个数一样</span><br><span class="line">        if (mothodName == methodName &amp;&amp; paramInfos.Length == paras.Length)</span><br><span class="line">        &#123;</span><br><span class="line">            md.Invoke(obj, paras);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    #endregion</span><br><span class="line">&#125;</span><br><span class="line">catch (Exception ex)</span><br><span class="line">&#123;</span><br><span class="line">    throw ex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
          <category> 工作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 工作技巧 </tag>
            
            <tag> 类的构造函数与参数列表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win服务的创建与卸载</title>
      <link href="/2022/10/09/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/Win%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%88%9B%E5%BB%BA%E4%B8%8E%E5%8D%B8%E8%BD%BD/"/>
      <url>/2022/10/09/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/Win%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%88%9B%E5%BB%BA%E4%B8%8E%E5%8D%B8%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<p>win服务的创建，参考链接  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.cnblogs.com/xiketang/p/16518053.html</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/xiketang/p/16518053.html">https://www.cnblogs.com/xiketang/p/16518053.html</a><br>可以参考这个链接中的环境配置  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/weixin_43783990/article/details/123001345</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/weixin_43783990/article/details/123001345">https://blog.csdn.net/weixin_43783990/article/details/123001345</a><br>win服务的删除，参考方法<br>第一种：通过Dos命令来 删除&#x2F;卸载服务  </p><ol><li>开始 - 运行 -“cmd”。  </li><li>进入Dos命令行，输入命令：<br>sc delete VMUSBArbService<br>注意：VMUSBArbService是服务名称。<br>当然：也可以通过：sc –help 查看sc命令参数等信息等。<br>第二种方法：直接修改注册表 删除&#x2F;卸载服务  </li><li>开始 - 运行 - “regedit”。  </li><li>在“HKEY_LOCAL_MACHINESYSTEMCurrentControlSetServices”中删除相应的 键值   即可！<br>额外的小tips<br>win+r cmd  services.msc<br>查看目前正在运行的服务<br>安装的目录文件路径<br>C:\Windows\Microsoft.NET\Framework\v4.0.30319</li></ol><p>在新建项目中选择，Windows服务<br>在service.cs中添加两个服务，一个serviceProcessInstaller<br>一个是serviceInstall,<br>然后设置他们对应的属性。<br>servicePrcessInstaller主要是设置Account，设置成为LocalSystem<br>这个比较重要<br>serviceInstall设置ServiceName，这个是服务名称<br>DisplayName，这个是展示的名称<br>StartType这个是触发方式<br>1.Description：表示服务说明（描述服务是干什么的）；<br>2.DisplayName：表示友好名称，可以理解为服务名的别名；<br>3.ServiceName：表示服务名，此为真正的服务名，与DisplayName是有区别的哦，是系统识别的依据；<br>这三个属性在WIN7及更高版本操作系统中，同属性但表示却不同：<br>本地服务列表中：（即：services.msc）<br>名称列显示的是DisplayName，<br>描述列显示的是Description。  </p><p>在WINDOWS任务管理器中的服务选项卡列表中：<br>名称列显示的是ServiceName，<br>描述列显示的是DisplayName。<br>本人之前就是被这三个属性给搞混了，出现安装成功，在任务管理器的服务列表中可以看到，但在服务列表中怎么也找不到，其实是将ServiceName与DisplayName搞错了。  </p><p>在生成的Onstart与Onclose中填入你想要开始与结束的时候触发的方法。<br>tips：服务需要结合管理员权限一节，这样运行不会出现因为管理员权限方面的问题。<br>还有如果是在path地方出现问题，考虑是因为自己的运行的城西x64或者x86的环境的问题。  </p>]]></content>
      
      
      <categories>
          
          <category> 工作技巧 </category>
          
          <category> Win服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工作技巧 </tag>
            
            <tag> Win服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>根据方法名与参数列表调用对应方法</title>
      <link href="/2022/10/09/C%20Sharp/%E6%A0%B9%E6%8D%AE%E6%96%B9%E6%B3%95%E5%90%8D%E4%B8%8E%E5%8F%82%E6%95%B0%E5%88%97%E8%A1%A8%E8%B0%83%E7%94%A8%E5%AF%B9%E5%BA%94%E6%96%B9%E6%B3%95/"/>
      <url>/2022/10/09/C%20Sharp/%E6%A0%B9%E6%8D%AE%E6%96%B9%E6%B3%95%E5%90%8D%E4%B8%8E%E5%8F%82%E6%95%B0%E5%88%97%E8%A1%A8%E8%B0%83%E7%94%A8%E5%AF%B9%E5%BA%94%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>顾名思义，有的时候会使用RPC技术来实现一些方法的远程调用。有时候因为是使用其他人编写好的方法，让自己不能像xmlrpc.net描述的那种进行直接调用，但是可以获得需要调用的方法名称与参数列表，以及对应的值。面对这样的情况，就有了以下的代码。<br>这里是主要的实现方法<br>值得注意的点有  </p><ol><li>getmethod后面如果不设置types那样如果面对有重载的函数就会直接报错</li><li>activator。createInstanc（），第一个参数是类的名称，后面的参数是实例化类所需要的参数。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//反射获取 命名空间+类名</span><br><span class="line">string className = &quot;ReflectMethod.MethodTest&quot;;</span><br><span class="line">string methodName = &quot;Sleep&quot;;</span><br><span class="line">Type[] types = &#123; typeof(string), typeof(string) &#125;;</span><br><span class="line">//Type[] types = new Type[a];</span><br><span class="line">//传递参数</span><br><span class="line">Object[] paras = new Object[] &#123; &quot;name&quot;, &quot;18&quot; &#125;;</span><br><span class="line">Type t = Type.GetType(className);</span><br><span class="line">object obj = Activator.CreateInstance(t,1);</span><br><span class="line">//直接调用</span><br><span class="line">MethodInfo method = t.GetMethod(methodName, types);</span><br><span class="line">method.Invoke(obj, paras);</span><br><span class="line">Console.ReadKey();</span><br></pre></td></tr></table></figure>下面是用于验证的方法。<br>验证上面的方案是否成功。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">class MethodTest</span><br><span class="line">&#123;</span><br><span class="line">    string name;</span><br><span class="line">    public MethodTest(string name)</span><br><span class="line">    &#123;</span><br><span class="line">        this.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    int age;</span><br><span class="line">    public MethodTest(int age)</span><br><span class="line">    &#123;</span><br><span class="line">        this.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    public void Sleep(string name,int age)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine($&quot;You have bean man,you must sleep alone,&#123;name&#125;&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    public void Sleep(string name, string age)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine($&quot;You have bean &#123;age&#125; old,you must sleep alone,&#123;name&#125;&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 实用小技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 部分内容的总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Navicat破解</title>
      <link href="/2022/10/09/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/Navicat%E7%A0%B4%E8%A7%A3/"/>
      <url>/2022/10/09/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/Navicat%E7%A0%B4%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>参考文档：<br><a href="https://www.cnblogs.com/wjdzh/p/16523956.html#_label1">https://www.cnblogs.com/wjdzh/p/16523956.html#_label1</a><br>安装包我的百度网盘，经过实际体验可以破解。  </p>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OFFICE破解</title>
      <link href="/2022/10/09/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/OFFICE%E7%A0%B4%E8%A7%A3/"/>
      <url>/2022/10/09/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/OFFICE%E7%A0%B4%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>可以用过OFFICE tools进行下载office<br>然后通过HEUkms这个软件进行破解升级<br>实际效果win11升级激活码激活成功。<br>office 激活，下载office的软件。office tool plus<br>下载后负责激活的软件heu kms。<br>heu kms的GitHub官网是<br><a herf="https://github.com/zbezj/HEU_KMS_Activator"></a> </p>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>无法启动计算机上的服务</title>
      <link href="/2022/10/09/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%E8%AE%A1%E7%AE%97%E6%9C%BA-%E4%B8%8A%E7%9A%84%E6%9C%8D%E5%8A%A1/"/>
      <url>/2022/10/09/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%E8%AE%A1%E7%AE%97%E6%9C%BA-%E4%B8%8A%E7%9A%84%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="问题描述1"><a href="#问题描述1" class="headerlink" title="问题描述1"></a>问题描述1</h1><p>无法启动计算机”.”上的服务****<br>内部异常<br>Win32Exception:服务没有及时响应启动或控制请求。  </p><h2 id="问题发生场景"><a href="#问题发生场景" class="headerlink" title="问题发生场景"></a>问题发生场景</h2><p>创建win服务，安装与卸载正常，一旦点开start就会报错。<br>今天遇见了这个问题。花了两天时间排查了一遍。经过排查，寻找到了原因。<br>主要的原因就是系统类的start的时候首先要加载类本身。但是因为类本身具有的某个变量，实例化了，但是实例化的过程有错误。这就导致类的加载失败，引起启动服务异常。  </p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><ol><li>将类中的实例改成仅仅声明，而不去实例。&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;觉得是符合代码规范的。实际上错误还在。需要结合下面的方案一起使用。</li><li>将原本的错误进行修改，实例化类的错误原因进行找出并修改，问题很有可能是空赋值即对于null属性进行操作而导致的问题。</li></ol><h1 id="问题描述2"><a href="#问题描述2" class="headerlink" title="问题描述2"></a>问题描述2</h1><p>Win服务start的时候快速打开然后立刻关闭。  </p><h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><p>这个与上面原因基本一致，只不过这个实例变量存在于start方法中，方法响应快速，将原本应该打开的实例化的类因为原来的代码错误，快速被清理掉，引起服务的快速关闭。</p><h2 id="解决方案-1"><a href="#解决方案-1" class="headerlink" title="解决方案"></a>解决方案</h2><p>将原本的错误进行修改，实例化类的错误原因进行找出并修改，问题很有可能是空赋值即对于null属性进行操作而导致的问题。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ol><li>需要养成良好的编码习惯，在class中仅仅声明而不去实例化。<br>注意初始化类时的一些基本变量的赋值是否会为null，是否支持null。</li><li>初始化为空的问题一种表现形式：在开始的时候因为赋值为空，不能够执行，或者执行报错。<br>再经过某些操作后，如赋值等。问题不出现，程序运行正常。<br>再重新生成解决方案后，问题依旧存在。</li></ol>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
          <category> 平时学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 事件 </tag>
            
            <tag> 工作问题 </tag>
            
            <tag> 解决问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#事件学习-学习日志（1）</title>
      <link href="/2022/09/21/C%20Sharp/C%20Sharp%20%E4%BA%8B%E4%BB%B6%E5%AD%A6%E4%B9%A0-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%881%EF%BC%89/"/>
      <url>/2022/09/21/C%20Sharp/C%20Sharp%20%E4%BA%8B%E4%BB%B6%E5%AD%A6%E4%B9%A0-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%881%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="事件模型的五个组成部分"><a href="#事件模型的五个组成部分" class="headerlink" title="事件模型的五个组成部分"></a>事件模型的五个组成部分</h2><ol><li>事件的拥有者（event source,对象）</li><li>事件成员（event，成员）</li><li>事件的响应者（event subscriber，对象）</li><li>事件处理器（event handle，成员）——-本质上是一个回调方法</li><li>事件订阅–把事件处理器与事件关联在一起，本质上是一种以委托类型为基础的“约定”。</li></ol><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ol><li>事件处理器是成员方法</li><li>挂接事件处理器的时候，可以使用委托实例，也可以直接使用方法名，这是个“语法糖”</li><li>事件处理器对事件的订阅不是随意的，匹配与否由生命事件时所使用的委托类型来检测</li><li>事件可以是同步调用也可以是异步调用。</li></ol><p>事件的几种情况</p><h1 id="当时间的拥有者与事件的响应者不同的时候"><a href="#当时间的拥有者与事件的响应者不同的时候" class="headerlink" title="当时间的拥有者与事件的响应者不同的时候"></a>当时间的拥有者与事件的响应者不同的时候</h1><p>示例代码<br>这个代码主要是使用了Timer类中的timer.elapsed作为事件的成员，作用是在一定的事件后触发事件处理器<br>最后需要加一个ReadLine不然会直接退出。<br>Intercal属性的作用是设置事件触发的间隔时间，这里设置的一秒钟。<br>主体部分</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">internal class Program</span><br><span class="line">&#123;</span><br><span class="line">    static void Main(string[] args)</span><br><span class="line">    &#123;</span><br><span class="line">        Timer timer = new Timer();</span><br><span class="line">        timer.Interval = 1000;</span><br><span class="line">        Boy boy = new Boy();</span><br><span class="line">        timer.Elapsed += Boy.Action;</span><br><span class="line">        timer.Start();</span><br><span class="line">        Console.ReadLine();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Boy类</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">internal class Boy</span><br><span class="line">&#123;</span><br><span class="line">    public Boy()</span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    internal static void Action(object sender, ElapsedEventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(&quot;jack&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>另一种的形式的实现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">static void Main(string[] args)</span><br><span class="line">&#123;</span><br><span class="line">    //# region 事件的拥有者与响应者不同</span><br><span class="line">    //Timer timer = new Timer();</span><br><span class="line">    //timer.Interval = 1000;</span><br><span class="line">    //Boy boy = new Boy();</span><br><span class="line">    //timer.Elapsed += Boy.Action;</span><br><span class="line">    //timer.Start();</span><br><span class="line">    //Console.ReadLine();</span><br><span class="line">    //# endregion</span><br><span class="line"></span><br><span class="line">    #region 事件的处理者是事件的拥有者字段</span><br><span class="line">    Form form = new Form();</span><br><span class="line">    Controller controller = new Controller(form);</span><br><span class="line">    form.ShowDialog();</span><br><span class="line">    #endregion</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>事件的拥有者</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">class Controller &#123;</span><br><span class="line">    private Form from;</span><br><span class="line">    public Controller(Form form)</span><br><span class="line">    &#123;</span><br><span class="line">        if (form != null)</span><br><span class="line">        &#123;</span><br><span class="line">            from = form;</span><br><span class="line">            this.from.Click += this.fromClicked;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void fromClicked(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        this.from.Text = DateTime.Now.ToString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="当事件的处理者与事件的拥有者是同一个"><a href="#当事件的处理者与事件的拥有者是同一个" class="headerlink" title="当事件的处理者与事件的拥有者是同一个"></a>当事件的处理者与事件的拥有者是同一个</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">static void Main(string[] args)</span><br><span class="line">&#123;</span><br><span class="line">    #region 事件的处理者是事件的拥有者字段</span><br><span class="line">    MyForm form = new MyForm();</span><br><span class="line">    form.Click += form.FormClicked;</span><br><span class="line">    form.ShowDialog();</span><br><span class="line">    #endregion</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>事件的拥有者与响应者都是form，此处选择继承的原因是form类是微软写死的，自己无法构成事件的相应，<br>但是你可以通过将继承，然后修改自己继承后的类，实现之前没有实现的功能。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">internal class Program</span><br><span class="line">&#123;</span><br><span class="line">    static void Main(string[] args)</span><br><span class="line">    &#123;</span><br><span class="line">        //# region 事件的拥有者与响应者不同</span><br><span class="line">        //Timer timer = new Timer();</span><br><span class="line">        //timer.Interval = 1000;</span><br><span class="line">        //Boy boy = new Boy();</span><br><span class="line">        //timer.Elapsed += Boy.Action;</span><br><span class="line">        //timer.Start();</span><br><span class="line">        //Console.ReadLine();</span><br><span class="line">        //# endregion</span><br><span class="line">        #region 事件的处理者是事件的拥有者字段</span><br><span class="line">        MyForm form = new MyForm();</span><br><span class="line">        form.Click += form.FormClicked;</span><br><span class="line">        form.ShowDialog();</span><br><span class="line">        #endregion</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="事件的响应者是事件的拥有者某个成员"><a href="#事件的响应者是事件的拥有者某个成员" class="headerlink" title="事件的响应者是事件的拥有者某个成员"></a>事件的响应者是事件的拥有者某个成员</h1><p>此处的例子中事件的响应者是按钮，事件的拥有者是form</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">static void Main(string[] args)</span><br><span class="line">&#123;</span><br><span class="line">    #region 事件的处理者是事件的拥有者字段</span><br><span class="line">    MyForm form = new MyForm();</span><br><span class="line">    form.Click += form.FormClicked;</span><br><span class="line">    form.ShowDialog();</span><br><span class="line">    #endregion</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是对应的form的设计</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">internal class MyForm:Form</span><br><span class="line">&#123;</span><br><span class="line">    private TextBox textBox;</span><br><span class="line">    private Button button;</span><br><span class="line">    public MyForm()</span><br><span class="line">    &#123;</span><br><span class="line">        this.textBox = new TextBox();</span><br><span class="line">        this.button = new Button();</span><br><span class="line">        this.Controls.Add(this.textBox);</span><br><span class="line">        this.Controls.Add(this.button);</span><br><span class="line">        this.button.Click += this.ButtonCliked;</span><br><span class="line">        this.button.Top = 20;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void ButtonCliked(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        this.Text = DateTime.Now.ToString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">```</span><br></pre></td></tr></table></figure><pre><code></code></pre>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
          <category> 日常学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 基础学习 </tag>
            
            <tag> 事件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>耦合与内聚学习-学习日志（4）</title>
      <link href="/2022/09/14/C%20Sharp/C%20Sharp%20%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%884%EF%BC%89/"/>
      <url>/2022/09/14/C%20Sharp/C%20Sharp%20%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%884%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>软件要做到高内聚，低耦合。<br>内聚就是一个模块内部各成分之间相关联的成都的度量<br>耦合就是程序结构中哥哥模块的相互关联的度量  </p><h2 id="内聚的分类：由高到低"><a href="#内聚的分类：由高到低" class="headerlink" title="内聚的分类：由高到低"></a>内聚的分类：由高到低</h2><p>内聚的分类：由高到低<br>功能内聚：知模块内的所有元素共同作用完成一个功能，缺一不可。<br>顺序内聚：一个模块中的哥哥处理元素都密切像关于同一个功能且必须顺序执行，迁移功能元素的输出就是下一个功能元素的输入。<br>通信内聚：模块内所有处理元素都在同一个数据结构中。<br>过程内聚：一个模块完成多个任务，这些任务必须按照指定的过程执行。<br>瞬时内聚：把需要同时执行的任务或者动作组合在一起（例如初始化模块）<br>逻辑内聚：模块完成逻辑上相关的一组任务。<br>偶然内聚：一个模块内的各个处理元素之间没有任何联系或者有松散的联系  </p><h2 id="耦合的分类：由高到低"><a href="#耦合的分类：由高到低" class="headerlink" title="耦合的分类：由高到低"></a>耦合的分类：由高到低</h2><p>耦合的分类：由高到低<br>内容耦合：一个模块直接使用另一个模块的内部数据，或者通过非正常入口转入另个一模块内部是，这种耦合关系叫做内容耦合<br>公共耦合:一组模块访问一个公共的数据环境，如全局数据变量<br>外部耦合：一组模块访问一个公共变量，这里指的是基本数据类型而不是数据结构躲着说是对象。<br>控制耦合：一个模块调用另一个模块的时候，传递的是控制变量，被调用模块通过该控制变量的值选择执行模块内莫伊功能，那么也就是说被调用的模块应该具有多个功能。<br>标记耦合：耦合模块之间以数据结构传递（比如在java中，传递就是一个对象）<br>数据耦合：耦合模块之间有调用关系，传递的是简单数据类型的值。<br>无直接耦合：两个模块之间没有直接的关系，他们从属于不同模块的控制与调用，它们之间不传递任何信息。  </p>]]></content>
      
      
      <categories>
          
          <category> 日常学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础学习 </tag>
            
            <tag> 软件工程 </tag>
            
            <tag> 内聚 </tag>
            
            <tag> 耦合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#语法学习-学习日志（3）</title>
      <link href="/2022/09/12/C%20Sharp/C%20Sharp%20%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%883%EF%BC%89/"/>
      <url>/2022/09/12/C%20Sharp/C%20Sharp%20%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%883%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>前言，此处代码使用VS2022，。net6的模式，全部都是在主函数的个实例，所以可以直接实例化一些类。<br>一些工作中遇见的不懂得语法进行学习<br>主要分为1.反射，2.特性，3.委托，4.？？与？。等，5.where<br>6.class类一些基础特点，7.as的作用。</p><h1 id="一、委托"><a href="#一、委托" class="headerlink" title="一、委托"></a>一、委托</h1><p>委托两类：C#类提供的，自定义委托</p><h2 id="C-提供的委托（参数可有可无与返回值一定没有）action"><a href="#C-提供的委托（参数可有可无与返回值一定没有）action" class="headerlink" title="C#提供的委托（参数可有可无与返回值一定没有）action"></a>C#提供的委托（参数可有可无与返回值一定没有）action</h2><p>自定义个类与方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">class Calculator</span><br><span class="line">&#123;</span><br><span class="line">public void Report()</span><br><span class="line">&#123;</span><br><span class="line">Console.WriteLinr(&quot;I have 3 methods&quot;);</span><br><span class="line">&#125;</span><br><span class="line">public int ADD(int a,int b)</span><br><span class="line">&#123;</span><br><span class="line">int result = a+b;</span><br><span class="line">return result;</span><br><span class="line">&#125;</span><br><span class="line">public int SUB(int a,int b)</span><br><span class="line">&#123;</span><br><span class="line">int result = a-b;</span><br><span class="line">return result;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用方法<br>三种调用结果相同<br>第一种没有使用委托<br>后两种可以是基本相同</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">static void Main(string &#123;&#125; args)</span><br><span class="line">&#123;</span><br><span class="line">Calulator calculator new Calculator();</span><br><span class="line">//acton只想方法</span><br><span class="line">Action action = new Action(calculator.Report);</span><br><span class="line">//以下三种方法调用结果相同</span><br><span class="line">//直接调用</span><br><span class="line">calculator.Report();</span><br><span class="line">//使用委托间接调用</span><br><span class="line">action.Invoke();</span><br><span class="line">//Invoke也可以省略掉</span><br><span class="line">action();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-提供的委托（有参数与返回值）function"><a href="#C-提供的委托（有参数与返回值）function" class="headerlink" title="C#提供的委托（有参数与返回值）function"></a>C#提供的委托（有参数与返回值）function</h2><p>调用方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">static void Main(string &#123;&#125; args)</span><br><span class="line">&#123;</span><br><span class="line">Calulator calculator new Calculator();</span><br><span class="line">Func&lt;int,int,int&gt; fun1 = new Fun&lt;int,int,int&gt;(calculator.ADD);</span><br><span class="line">Func&lt;int,int,int&gt; fun2 = new Fun&lt;int,int,int&gt;(calculator.AUB);</span><br><span class="line"></span><br><span class="line">int x=100;</span><br><span class="line">int y = 200;</span><br><span class="line">int z = 0;</span><br><span class="line">z = fun1(x,y);</span><br><span class="line">Console.WriteLine(z);</span><br><span class="line">z=fun2(x,y);</span><br><span class="line">Console.WriteLine(z);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-自定义委托"><a href="#C-自定义委托" class="headerlink" title="C#自定义委托"></a>C#自定义委托</h2><p>委托就是一种类<br>注意声明委托的位置（一般写在命名空间下），可能会引起嵌套类<br>委托与所封装的方法必须“类型兼容”<br>返回值与参数列表的数据类型需要一致<br>以下是委托的声明</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public delegate int Calc(int x, int y);</span><br></pre></td></tr></table></figure><p>以下是实现委托的类  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">clas Calculator</span><br><span class="line">&#123;</span><br><span class="line">public int Add(int a, int b)</span><br><span class="line">&#123;</span><br><span class="line">retutn a+b;</span><br><span class="line">&#125;</span><br><span class="line">public int Sub(int a,int b)</span><br><span class="line">&#123;</span><br><span class="line">return a-b;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以下是委托的具体实现<br>具不具有Invoke都是一样的。 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">class Program</span><br><span class="line">&#123;</span><br><span class="line">static void Main(string[] args)</span><br><span class="line">&#123;</span><br><span class="line">Calculator calculator = new Calculator():</span><br><span class="line">Calc calc1= new Calc(calculator.Add(int a,int b));</span><br><span class="line">Calc calc2= new Calc(calculator.Sub(int a,int b));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int a=10;</span><br><span class="line">int b=30;</span><br><span class="line">int c=0;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">c=calc1.Invoke(a,b);</span><br><span class="line">Console.WriteLine(c);</span><br><span class="line">c=calc2.Invoke(a,b);</span><br><span class="line">Console.WriteLine(c);</span><br><span class="line"></span><br><span class="line">c=calc2(a,b);</span><br><span class="line">Console.WriteLine(c);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="委托的一般使用"><a href="#委托的一般使用" class="headerlink" title="委托的一般使用"></a>委托的一般使用</h2><p>一般使用方法把方法当作参数传给另一个方法<br>这又可以分为两种用法<br>方法1 模板方法<br>借用指定的外部方法来产生结果</p><ol><li>相当于“填空题”</li><li>常位于代码中部</li><li>常用于委托有返回值<br>方法2 回调方法（callback），调用指定的外部方法</li><li>相当于“流水线”</li><li>常位于代码末尾</li><li>常委托无返回值</li></ol><h3 id="模板方法的例子"><a href="#模板方法的例子" class="headerlink" title="模板方法的例子"></a>模板方法的例子</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">/*这个部分主要是对于委托的一些使用测试，</span><br><span class="line"> * 四个类，产品类product-具有产品的名称属性</span><br><span class="line"> * 包装类box-将产品包装起来，返回一个产品类的参数</span><br><span class="line"> * 进行包装类warrybox-具有一个方法wProduct 参数（是一个返回类型为Product类型的，参数为空的方法），返回值是（box类型）</span><br><span class="line"> * 产品工厂类ProductFactory-具有两个无参数，返回类型为product类型的方法；</span><br><span class="line"> * 主函数中引用了两个func1，func2分别采用两个方法。</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//此处是实例化两个类的实例，他们都是一个非静态函数，需要实例化才能调用对应的方法。虽然好像没有真的使用，但是可能真的指示</span><br><span class="line">//也是需要的。</span><br><span class="line">WaryProduct a=new WaryProduct();</span><br><span class="line">ProductFactory b = new ProductFactory();</span><br><span class="line"></span><br><span class="line">Func&lt;Product&gt; fun1 = new Func&lt;Product&gt;(b.Pizza);</span><br><span class="line">Func&lt;Product&gt; fun2 = new Func&lt;Product&gt;(b.Cola);</span><br><span class="line"></span><br><span class="line">Box box1 = a.wProduct(fun1);</span><br><span class="line">Console.WriteLine(box1.product.name);</span><br><span class="line">Box box2 = a.wProduct(fun2);</span><br><span class="line">Console.WriteLine(box2.product.name);</span><br><span class="line">class Product</span><br><span class="line">&#123;</span><br><span class="line">    public string name &#123; get; set; &#125;</span><br><span class="line">&#125;</span><br><span class="line">class Box</span><br><span class="line">&#123;</span><br><span class="line">    public Product product &#123; get; set; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class WaryProduct</span><br><span class="line">&#123;</span><br><span class="line">    public Box wProduct(Func&lt;Product&gt; getProduct)</span><br><span class="line">    &#123;</span><br><span class="line">        Product product = getProduct();</span><br><span class="line">        Box box = new Box();</span><br><span class="line">        box.product = product;</span><br><span class="line">        return box;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class ProductFactory</span><br><span class="line">&#123;</span><br><span class="line">    public Product Pizza()</span><br><span class="line">    &#123;</span><br><span class="line">        Product product = new Product();</span><br><span class="line">        product.name = &quot;pizza&quot;;</span><br><span class="line">        return product;</span><br><span class="line">    &#125;</span><br><span class="line">    public Product Cola()</span><br><span class="line">    &#123;</span><br><span class="line">        Product product = new Product();</span><br><span class="line">        product.name = &quot;Cola&quot;;</span><br><span class="line">        return product;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="回调方法的使用"><a href="#回调方法的使用" class="headerlink" title="回调方法的使用"></a>回调方法的使用</h3><p>对比上一种的使用，回调方法主要是在某种情况下的调用，例如pizza的价格大于50时，执行回调方法。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">// See https://aka.ms/new-console-template for more information</span><br><span class="line">/*这个部分主要是对于委托的一些使用测试，</span><br><span class="line"> * 四个类，产品类product-具有产品的名称属性</span><br><span class="line"> * 包装类box-将产品包装起来，返回一个产品类的参数</span><br><span class="line"> * 进行包装类warrybox-具有一个方法wProduct 参数（是一个返回类型为Product类型的，参数为空的方法），返回值是（box类型）</span><br><span class="line"> * 产品工厂类ProductFactory-具有两个无参数，返回类型为product类型的方法；</span><br><span class="line"> * 主函数中引用了两个func1，func2分别采用两个方法。</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//此处是实例化两个类的实例，他们都是一个非静态函数，需要实例化才能调用对应的方法。虽然好像没有真的使用，但是可能真的指示</span><br><span class="line">//也是需要的。</span><br><span class="line">WaryProduct a=new WaryProduct();</span><br><span class="line">ProductFactory b = new ProductFactory();</span><br><span class="line"></span><br><span class="line">Logger c = new Logger();</span><br><span class="line"></span><br><span class="line">Func&lt;Product&gt; fun1 = new Func&lt;Product&gt;(b.Pizza);</span><br><span class="line">Func&lt;Product&gt; fun2 = new Func&lt;Product&gt;(b.Cola);</span><br><span class="line">Action&lt;Product&gt; fun3 = new Action&lt;Product&gt;(c.Log);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Box box1 = a.wProduct(fun1, fun3);</span><br><span class="line">Console.WriteLine(box1.product.name);</span><br><span class="line">Box box2 = a.wProduct(fun2, fun3);</span><br><span class="line">Console.WriteLine(box2.product.name);</span><br><span class="line">class Product</span><br><span class="line">&#123;</span><br><span class="line">    public string name &#123; get; set; &#125;</span><br><span class="line">    public int price &#123; get; set; &#125;</span><br><span class="line">&#125;</span><br><span class="line">class Box</span><br><span class="line">&#123;</span><br><span class="line">    public Product product &#123; get; set; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Logger</span><br><span class="line">&#123;</span><br><span class="line">    public void Log(Product product)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(&quot;Product &#123;0&#125; is created at &#123;1&#125; ,its price is &#123;2&#125;&quot;</span><br><span class="line">            , product.name, DateTime.UtcNow, product.price);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class WaryProduct</span><br><span class="line">&#123;</span><br><span class="line">    public Box wProduct(Func&lt;Product&gt; getProduct,Action&lt;Product&gt; LogCallBack)</span><br><span class="line">    &#123;</span><br><span class="line">        Product product = getProduct();</span><br><span class="line">        Box box = new Box();</span><br><span class="line">        box.product = product;</span><br><span class="line">        if (box.product.price &gt; 50)</span><br><span class="line">            LogCallBack(box.product);</span><br><span class="line">        return box;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class ProductFactory</span><br><span class="line">&#123;</span><br><span class="line">    public Product Pizza()</span><br><span class="line">    &#123;</span><br><span class="line">        Product product = new Product();</span><br><span class="line">        product.name = &quot;pizza&quot;;</span><br><span class="line">        product.price = 60;</span><br><span class="line">        return product;</span><br><span class="line">    &#125;</span><br><span class="line">    public Product Cola()</span><br><span class="line">    &#123;</span><br><span class="line">        Product product = new Product();</span><br><span class="line">        product.name = &quot;Cola&quot;;</span><br><span class="line">        product.price=40;</span><br><span class="line">        return product;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="多播委托"><a href="#多播委托" class="headerlink" title="多播委托"></a>多播委托</h2><p>MulticastDelegate<br>多播委托就是用一个委托执行多个委托，执行顺序是根据添加顺序<br>单播委托就是普通形态<br>例如下面这种代码  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">// See https://aka.ms/new-console-template for more information</span><br><span class="line"></span><br><span class="line">Student stu1 = new Student() &#123; Id = 1, PenColor = ConsoleColor.Yellow &#125;;</span><br><span class="line">Student stu2 = new Student() &#123; Id = 2, PenColor = ConsoleColor.Green &#125;;</span><br><span class="line">Student stu3 = new Student() &#123; Id = 3, PenColor = ConsoleColor.Red &#125;;</span><br><span class="line"></span><br><span class="line">Action action1 = new Action(stu1.DoHomeWork);</span><br><span class="line">Action action2 = new Action(stu2.DoHomeWork);</span><br><span class="line">Action action3 = new Action(stu3.DoHomeWork);</span><br><span class="line">action1.Invoke();</span><br><span class="line">action2.Invoke();</span><br><span class="line">action3.Invoke();</span><br><span class="line">class Student</span><br><span class="line">&#123;</span><br><span class="line">    public int Id &#123; get; set; &#125;</span><br><span class="line">    public ConsoleColor PenColor &#123; get; set; &#125;</span><br><span class="line">    public void DoHomeWork()</span><br><span class="line">    &#123;</span><br><span class="line">        Console.ForegroundColor = this.PenColor;</span><br><span class="line">        for(int i = 0; i &lt; 5; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(&quot;Student &#123;0&#125; doing homework &#123;1&#125; hour(s)&quot;,this.Id,i);</span><br><span class="line">            Thread.Sleep(1000);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多播委托举例  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">// See https://aka.ms/new-console-template for more information</span><br><span class="line"></span><br><span class="line">Student stu1 = new Student() &#123; Id = 1, PenColor = ConsoleColor.Yellow &#125;;</span><br><span class="line">Student stu2 = new Student() &#123; Id = 2, PenColor = ConsoleColor.Green &#125;;</span><br><span class="line">Student stu3 = new Student() &#123; Id = 3, PenColor = ConsoleColor.Red &#125;;</span><br><span class="line"></span><br><span class="line">Action action1 = new Action(stu1.DoHomeWork);</span><br><span class="line">Action action2 = new Action(stu2.DoHomeWork);</span><br><span class="line">Action action3 = new Action(stu3.DoHomeWork);</span><br><span class="line">action1 += action2;</span><br><span class="line">action1 += action3;</span><br><span class="line">action1();</span><br><span class="line">class Student</span><br><span class="line">&#123;</span><br><span class="line">    public int Id &#123; get; set; &#125;</span><br><span class="line">    public ConsoleColor PenColor &#123; get; set; &#125;</span><br><span class="line">    public void DoHomeWork()</span><br><span class="line">    &#123;</span><br><span class="line">        Console.ForegroundColor = this.PenColor;</span><br><span class="line">        for(int i = 0; i &lt; 5; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(&quot;Student &#123;0&#125; doing homework &#123;1&#125; hour(s)&quot;,this.Id,i);</span><br><span class="line">            Thread.Sleep(1000);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="委托的高级使用-隐式异步调用"><a href="#委托的高级使用-隐式异步调用" class="headerlink" title="委托的高级使用-隐式异步调用"></a>委托的高级使用-隐式异步调用</h2><p>每一个运行的程序都是一个进程<br>每一个进程可以有一个或者多个线程（therd）<br>同步调用是在同一个线程内<br>异步调用的底层机理是多线程<br>串行&#x3D;&#x3D;同步&#x3D;&#x3D;单线程，并行&#x3D;&#x3D;异步&#x3D;&#x3D;多线程<br>同步调用可以是间接调用，也可以是直接调用。上面这个例子就是间接调用，属于同步调用。<br>BegunInvoke(param1,param2)<br>param1是回调函数，第二个参数通常为null<br>此处运行失败，好像是这个版本VS不支持隐式的异步调用。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Student stu1 = new Student() &#123; Id = 1, PenColor = ConsoleColor.Yellow &#125;;</span><br><span class="line">Student stu2 = new Student() &#123; Id = 2, PenColor = ConsoleColor.Green &#125;;</span><br><span class="line">Student stu3 = new Student() &#123; Id = 3, PenColor = ConsoleColor.Red &#125;;</span><br><span class="line"></span><br><span class="line">Action action1 = new Action(stu1.DoHomeWork);</span><br><span class="line">Action action2 = new Action(stu2.DoHomeWork);</span><br><span class="line">Action action3 = new Action(stu3.DoHomeWork);</span><br><span class="line"></span><br><span class="line">action1.BeginInvoke(null,null);</span><br><span class="line">class Student</span><br><span class="line">&#123;</span><br><span class="line">    public int Id &#123; get; set; &#125;</span><br><span class="line">    public ConsoleColor PenColor &#123; get; set; &#125;</span><br><span class="line">    public void DoHomeWork()</span><br><span class="line">    &#123;</span><br><span class="line">        Console.ForegroundColor = this.PenColor;</span><br><span class="line">        for(int i = 0; i &lt; 5; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(&quot;Student &#123;0&#125; doing homework &#123;1&#125; hour(s)&quot;,this.Id,i);</span><br><span class="line">            Thread.Sleep(1000);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="委托的高级使用-显式异步调用Thread"><a href="#委托的高级使用-显式异步调用Thread" class="headerlink" title="委托的高级使用-显式异步调用Thread"></a>委托的高级使用-显式异步调用Thread</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">// See https://aka.ms/new-console-template for more information</span><br><span class="line"></span><br><span class="line">Student stu1 = new Student() &#123; Id = 1, PenColor = ConsoleColor.Yellow &#125;;</span><br><span class="line">Student stu2 = new Student() &#123; Id = 2, PenColor = ConsoleColor.Green &#125;;</span><br><span class="line">Student stu3 = new Student() &#123; Id = 3, PenColor = ConsoleColor.Red &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Thread thread1 = new Thread(new ThreadStart(stu1.DoHomeWork));</span><br><span class="line">Thread thread2 = new Thread(new ThreadStart(stu2.DoHomeWork));</span><br><span class="line">Thread thread3 = new Thread(new ThreadStart(stu3.DoHomeWork));</span><br><span class="line">thread1.Start();</span><br><span class="line">thread2.Start();</span><br><span class="line">thread3.Start();</span><br><span class="line">class Student</span><br><span class="line">&#123;</span><br><span class="line">    public int Id &#123; get; set; &#125;</span><br><span class="line">    public ConsoleColor PenColor &#123; get; set; &#125;</span><br><span class="line">    public void DoHomeWork()</span><br><span class="line">    &#123;</span><br><span class="line">        Console.ForegroundColor = this.PenColor;</span><br><span class="line">        for(int i = 0; i &lt; 5; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(&quot;Student &#123;0&#125; doing homework &#123;1&#125; hour(s)&quot;,this.Id,i);</span><br><span class="line">            Thread.Sleep(1000);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="委托的高级使用-显式异步调用Task"><a href="#委托的高级使用-显式异步调用Task" class="headerlink" title="委托的高级使用-显式异步调用Task"></a>委托的高级使用-显式异步调用Task</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">// See https://aka.ms/new-console-template for more information</span><br><span class="line"></span><br><span class="line">Student stu1 = new Student() &#123; Id = 1, PenColor = ConsoleColor.Yellow &#125;;</span><br><span class="line">Student stu2 = new Student() &#123; Id = 2, PenColor = ConsoleColor.Green &#125;;</span><br><span class="line">Student stu3 = new Student() &#123; Id = 3, PenColor = ConsoleColor.Red &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Task task1 = new Task(new Action(stu1.DoHomeWork));</span><br><span class="line">Task task2 = new Task(new Action(stu2.DoHomeWork));</span><br><span class="line">Task task3 = new Task(new Action(stu3.DoHomeWork));</span><br><span class="line">task1.Start();</span><br><span class="line">task2.Start();</span><br><span class="line">task3.Start();</span><br><span class="line">class Student</span><br><span class="line">&#123;</span><br><span class="line">    public int Id &#123; get; set; &#125;</span><br><span class="line">    public ConsoleColor PenColor &#123; get; set; &#125;</span><br><span class="line">    public void DoHomeWork()</span><br><span class="line">    &#123;</span><br><span class="line">        Console.ForegroundColor = this.PenColor;</span><br><span class="line">        for(int i = 0; i &lt; 5; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(&quot;Student &#123;0&#125; doing homework &#123;1&#125; hour(s)&quot;,this.Id,i);</span><br><span class="line">            Thread.Sleep(1000);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="小知识点"><a href="#小知识点" class="headerlink" title="小知识点"></a>小知识点</h1><p>Datetime.now与Datetime.Utcnow的区别在于前一个带有时区  </p><h2 id="委托的缺陷"><a href="#委托的缺陷" class="headerlink" title="委托的缺陷"></a>委托的缺陷</h2><ol><li>方法级别的紧耦合，工作中要慎之又慎</li><li>使可读性下降，debug的难度增加</li><li>把委托回调，异步调用和多线程纠缠在一起，会让代码变得难以维护与阅读</li><li>委托使用不当有可能造成内存泄漏和程序性能下降</li></ol><h2 id="接口在一定的层次上代替委托"><a href="#接口在一定的层次上代替委托" class="headerlink" title="接口在一定的层次上代替委托"></a>接口在一定的层次上代替委托</h2><p>java没有委托，但是具有接口。依旧可以完成所有任务。接口比委托更加使用的上舒服  </p><h1 id="二、反射"><a href="#二、反射" class="headerlink" title="二、反射"></a>二、反射</h1><h1 id="三、特性"><a href="#三、特性" class="headerlink" title="三、特性"></a>三、特性</h1><p>delegate——-相当于函数指针的升级版</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h1 id="一、类class"><a href="#一、类class" class="headerlink" title="一、类class"></a>一、类class</h1><p>class.fun()———-这个是调用使用了方法<br>class.fun ———–指示到这个方法</p>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
          <category> 日常学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 基础学习 </tag>
            
            <tag> 委托 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#继承学习-学习日志（2）</title>
      <link href="/2022/09/05/C%20Sharp/C%20Sharp%20%E7%BB%A7%E6%89%BF%E5%AD%A6%E4%B9%A0-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%882%EF%BC%89/"/>
      <url>/2022/09/05/C%20Sharp/C%20Sharp%20%E7%BB%A7%E6%89%BF%E5%AD%A6%E4%B9%A0-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%882%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>学习继承<br>面向对象的三大特性，封装继承多态</p><h1 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h1><h2 id="继承的好处"><a href="#继承的好处" class="headerlink" title="继承的好处"></a>继承的好处</h2><ol><li>优化代码结构</li><li>提高代码的复用性</li><li>为多态提供前提</li></ol><h2 id="继承语法格式"><a href="#继承语法格式" class="headerlink" title="继承语法格式"></a>继承语法格式</h2><p>子类继承父类，用用”：“冒号关键字符<br>class 子类：父类<br>{<br>    &#x2F;&#x2F;类成员<br>}<br>This关键字表示当前类<br>Base是上传到父类来处理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">//父类</span><br><span class="line">class Hero</span><br><span class="line">&#123;</span><br><span class="line">private string heroName;</span><br><span class="line">private inr attack;</span><br><span class="line">//父类的构造方法</span><br><span class="line">public Hero () &#123;&#125;</span><br><span class="line">public Hero (string m_heroName.int m_attack)</span><br><span class="line">&#123;</span><br><span class="line">this.heroName=m_heroName;</span><br><span class="line">this.attack=m_attack;</span><br><span class="line">&#125;</span><br><span class="line">//父类的方法</span><br><span class="line">public string HeroName</span><br><span class="line">&#123;</span><br><span class="line">get &#123;return HeroName;&#125;</span><br><span class="line">set &#123;heroName=value;&#125;</span><br><span class="line">&#125;</span><br><span class="line">public int Attack</span><br><span class="line">&#123;</span><br><span class="line">get &#123;return Attack;&#125;</span><br><span class="line">set &#123;attack=value;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">//子类</span><br><span class="line">class Luka:Hero</span><br><span class="line">&#123;</span><br><span class="line">public Luka()&#123;&#125;</span><br><span class="line">public Luka(string m_heroName.int m_attack):base(string m_heroName.int m_attack)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">public void Suishidaji()</span><br><span class="line">&#123;</span><br><span class="line">Console.WriteLine(&quot;随时打击&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="子类继承父类的关系"><a href="#子类继承父类的关系" class="headerlink" title="子类继承父类的关系"></a>子类继承父类的关系</h2><p>父类中的字段，用private修饰的字段，我们在子类中无法访问<br>public修饰，子类可以访问。通过<em>base.字段名</em>的方式访问<br>大部分（80%是private）<br>父类中的属性，用private修饰的属性，我们在子类中无法访问<br>public修饰，子类可以访问。通过<em>base.属性名</em>的方式访问<br>大部分（80%是public）<br>父类中的普通方法，用private修饰的普通方法，我们在子类中无法访问<br>public修饰，子类可以访问。通过<em>base.方法名</em>的方式访问  </p><p>父类中的构造方法，用private修饰的字段，我们在子类中无法访问<br>public修饰，子类可以访问。通过<em>base（）</em>的方式访问<br>大部分（99%是public）</p>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
          <category> 日常学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 基础学习 </tag>
            
            <tag> 类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Basler语法学习</title>
      <link href="/2022/09/05/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/Basler%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/09/05/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/Basler%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>Basler语法学习</p><h1 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h1><h2 id="基础设备"><a href="#基础设备" class="headerlink" title="基础设备"></a>基础设备</h2><h3 id="basler设备的查找"><a href="#basler设备的查找" class="headerlink" title="basler设备的查找"></a>basler设备的查找</h3><h3 id="第一个设备的操作"><a href="#第一个设备的操作" class="headerlink" title="第一个设备的操作"></a>第一个设备的操作</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"> //声明一个设备</span><br><span class="line">  PYLON_DEVICE_HANDLE hDev = new PYLON_DEVICE_HANDLE();          /* Handle for the pylon device. */</span><br><span class="line">  try</span><br><span class="line">            &#123;</span><br><span class="line">                uint numDevices;    /* Number of devices available. */</span><br><span class="line"></span><br><span class="line">#if DEBUG</span><br><span class="line">                /* This is a special debug setting needed only for GigE cameras.</span><br><span class="line">                See &#x27;Building Applications with pylon&#x27; in the programmer&#x27;s guide. */</span><br><span class="line">                Environment.SetEnvironmentVariable(&quot;PYLON_GIGE_HEARTBEAT&quot;, &quot;300000&quot; /*ms*/);</span><br><span class="line">#endif</span><br><span class="line">                /* Before using any pylon methods, the pylon runtime must be initialized. */</span><br><span class="line">                //Pylon初始化</span><br><span class="line">                Pylon.Initialize();</span><br><span class="line">                /* Enumerate all camera devices. You must call</span><br><span class="line">                Pylon.EnumerateDevices() before creating a device. </span><br><span class="line">                 枚举设备获得设备数量*/</span><br><span class="line">                numDevices = Pylon.EnumerateDevices();</span><br><span class="line">                if (0 == numDevices)</span><br><span class="line">                &#123;</span><br><span class="line">                    throw new Exception(&quot;No devices found.&quot;);</span><br><span class="line">                &#125;</span><br><span class="line">                /*hDev设为第一个设备的引用 Get a handle for the first device found.  */</span><br><span class="line">                hDev = Pylon.CreateDeviceByIndex(0);</span><br><span class="line">                /*在使用设备前打开此设备 </span><br><span class="line">                cPylonAccessModeControl==1 Write access to device features is allowed.</span><br><span class="line">                cPylonAccessModeStream = 2 Stream grabber access is allowed. </span><br><span class="line">                ´Ë´¦Ê¹ÓÃÎ»»òÔËËã£¬¸ù¾ÝÔËËãµÄ½á¹ûµÃµ½ÏàÓ¦µÄÄ£Ê½¡£</span><br><span class="line">                PYLONC_ACCESS_MODE_CONTROL - Allows to read or write camera parameters to configure the camera. </span><br><span class="line">                PYLONC_ACCESS_MODE_STREAM - Allows to read image data from the camera&#x27;s stream grabber object. </span><br><span class="line">                PYLONC_ACCESS_MODE_EVENT - Allows to read event data from the camera&#x27;s stream grabber object. </span><br><span class="line">                PYLONC_ACCESS_MODE_EXCLUSIVE - Allows exclusive access. When this flag is specified no other application may access the camera. </span><br><span class="line">                PYLONC_ACCESS_MODE_MONITOR - Allows only read access. This flag cannot be combined with any other flags. </span><br><span class="line">                It is typically used in Multicast/Broadcast applications with GigE cameras. You can pass one or more flags. </span><br><span class="line">                If you pass more than one flag you can combine them using the &#x27;or&#x27; operator. </span><br><span class="line">                Before using the device, it must be opened. Open it for configuring</span><br><span class="line">                parameters and for grabbing images. */</span><br><span class="line">                Pylon.DeviceOpen(hDev, Pylon.cPylonAccessModeControl | Pylon.cPylonAccessModeStream);</span><br><span class="line">                /* Print out the name of the camera we are using. */</span><br><span class="line">                &#123;</span><br><span class="line">                    bool isReadable;</span><br><span class="line">                    isReadable = Pylon.DeviceFeatureIsReadable(hDev, &quot;DeviceModelName&quot;);</span><br><span class="line">                    if (isReadable)</span><br><span class="line">                    &#123;</span><br><span class="line">                        string name = Pylon.DeviceFeatureToString(hDev, &quot;DeviceModelName&quot;);</span><br><span class="line">                        Console.WriteLine(&quot;Using camera &#123;0&#125;&quot;, name);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br></pre></td></tr></table></figure><h3 id="多个设备的批量设置"><a href="#多个设备的批量设置" class="headerlink" title="多个设备的批量设置"></a>多个设备的批量设置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line">        const uint MAX_NUM_DEVICES = 2;</span><br><span class="line">        const uint NUM_BUFFERS = 1;        /* Number of buffers used for grabbing. */</span><br><span class="line">        const uint GIGE_PACKET_SIZE = 1500; /* Size of one Ethernet packet. */</span><br><span class="line">        const uint GIGE_PROTOCOL_OVERHEAD = 36;   /* Total number of bytes of protocol overhead. */</span><br><span class="line">        const uint AllGroupMask = 0xffffffff;</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">        /// The main entry point for the application.</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        static void Main()</span><br><span class="line">        &#123;</span><br><span class="line">            /* Use a random number as the device key. */</span><br><span class="line">            uint DeviceKey = (uint)(new Random()).Next(int.MaxValue);</span><br><span class="line">            /* In this sample all cameras belong to the same group. */</span><br><span class="line">            const uint GroupKey = 0x24;</span><br><span class="line">            PYLON_DEVICE_HANDLE[] hDev = new PYLON_DEVICE_HANDLE[MAX_NUM_DEVICES];        /* Handles for the pylon devices. */</span><br><span class="line">            for (int deviceIndex = 0; deviceIndex &lt; MAX_NUM_DEVICES; ++deviceIndex)</span><br><span class="line">            &#123;</span><br><span class="line">                hDev[deviceIndex] = new PYLON_DEVICE_HANDLE();</span><br><span class="line">            &#125;</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                uint numDevicesEnumerated;    /* Number of the devices connected to this PC. */</span><br><span class="line">                uint numDevicesToUse;         /* Number of the devices to use in this sample. */</span><br><span class="line">                bool isAvail;                 /* Used for checking feature availability. */</span><br><span class="line">                bool isReady;                 /* Used as an output parameter. */</span><br><span class="line">                int i;                        /* Counter. */</span><br><span class="line">                uint deviceIndex;             /* Index of device used in the following variables. */</span><br><span class="line">                PYLON_WAITOBJECTS_HANDLE wos; /* Wait objects. */</span><br><span class="line"></span><br><span class="line">                /* These are camera specific variables: */</span><br><span class="line">                PYLON_STREAMGRABBER_HANDLE[] hGrabber = new PYLON_STREAMGRABBER_HANDLE[MAX_NUM_DEVICES]; /* Handle for the pylon stream grabber. */</span><br><span class="line">                PYLON_WAITOBJECT_HANDLE[]    hWait = new PYLON_WAITOBJECT_HANDLE[MAX_NUM_DEVICES];       /* Handle used for waiting for a grab to be finished. */</span><br><span class="line">                uint[]                       payloadSize = new uint[MAX_NUM_DEVICES];                    /* Size of an image frame in bytes. */</span><br><span class="line">                uint[]                       nStreams = new uint[MAX_NUM_DEVICES];                       /* The number of streams provided by the device. */</span><br><span class="line">                PYLON_STREAMBUFFER_HANDLE[]  hBuffer = new PYLON_STREAMBUFFER_HANDLE[MAX_NUM_DEVICES];</span><br><span class="line">                PylonBuffer&lt;Byte&gt;[]          buffer = new PylonBuffer&lt;Byte&gt;[MAX_NUM_DEVICES];</span><br><span class="line">#if DEBUG</span><br><span class="line">                /* This is a special debug setting needed only for GigE cameras.</span><br><span class="line">                See &#x27;Building Applications with pylon&#x27; in the Programmer&#x27;s Guide. */</span><br><span class="line">                Environment.SetEnvironmentVariable(&quot;PYLON_GIGE_HEARTBEAT&quot;, &quot;300000&quot; /*ms*/);</span><br><span class="line">#endif</span><br><span class="line">                /* Before using any pylon methods, the pylon runtime must be initialized. */</span><br><span class="line">                Pylon.Initialize();</span><br><span class="line">                /* Enumerate all camera devices. You must call</span><br><span class="line">                PylonEnumerateDevices() before creating a device. */</span><br><span class="line">                numDevicesEnumerated = Pylon.EnumerateDevices();</span><br><span class="line">                if (numDevicesEnumerated == 0)</span><br><span class="line">                &#123;</span><br><span class="line">                    Pylon.Terminate();</span><br><span class="line"></span><br><span class="line">                    Console.Error.WriteLine(&quot;No devices found!&quot;);</span><br><span class="line">                    Console.Error.WriteLine(&quot;\nPress enter to exit.&quot;);</span><br><span class="line">                    Console.ReadLine();</span><br><span class="line">                    return;</span><br><span class="line">                &#125;</span><br><span class="line">                /* Create wait objects. This must be done outside of the loop. */</span><br><span class="line">                wos = Pylon.WaitObjectsCreate();</span><br><span class="line">                /* Open cameras and set parameter */</span><br><span class="line">                deviceIndex = 0;</span><br><span class="line">                for (uint enumeratedDeviceIndex = 0; enumeratedDeviceIndex &lt; numDevicesEnumerated; ++enumeratedDeviceIndex)</span><br><span class="line">                &#123;</span><br><span class="line">                    /* only open GigE devices */</span><br><span class="line">                    PYLON_DEVICE_INFO_HANDLE hDI = Pylon.GetDeviceInfoHandle(enumeratedDeviceIndex);</span><br><span class="line">                    if (Pylon.DeviceInfoGetPropertyValueByName(hDI, Pylon.cPylonDeviceInfoDeviceClassKey) != &quot;BaslerGigE&quot;)</span><br><span class="line">                    &#123;</span><br><span class="line">                        continue;</span><br><span class="line">                    &#125;</span><br><span class="line">                    /* Get handles for the devices. */</span><br><span class="line">                    hDev[deviceIndex] = Pylon.CreateDeviceByIndex((uint)enumeratedDeviceIndex);</span><br><span class="line">                    /* Before using the device, it must be opened. Open it for configuring</span><br><span class="line">                    parameters and for grabbing images. */</span><br><span class="line">                    Pylon.DeviceOpen(hDev[deviceIndex], Pylon.cPylonAccessModeControl | Pylon.cPylonAccessModeStream);</span><br><span class="line">                    /* Print out the name of the camera we are using. */</span><br><span class="line">                    Console.WriteLine(&quot;Using camera &#x27;&#123;0&#125;&#x27;&quot;, Pylon.DeviceInfoGetPropertyValueByName(hDI, Pylon.cPylonDeviceInfoModelNameKey));</span><br><span class="line">                    isAvail = Pylon.DeviceFeatureIsReadable(hDev[deviceIndex], &quot;ActionControl&quot;);</span><br><span class="line">                    if (!isAvail)</span><br><span class="line">                    &#123;</span><br><span class="line">                        throw new Exception(&quot;Device doesn&#x27;t support the Action Command&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line">                    /* Configure the first action */</span><br><span class="line">                    Pylon.DeviceSetIntegerFeature(hDev[deviceIndex], &quot;ActionSelector&quot;, 1);</span><br><span class="line">                    Pylon.DeviceSetIntegerFeature(hDev[deviceIndex], &quot;ActionDeviceKey&quot;, DeviceKey);</span><br><span class="line">                    Pylon.DeviceSetIntegerFeature(hDev[deviceIndex], &quot;ActionGroupKey&quot;, GroupKey);</span><br><span class="line">                    Pylon.DeviceSetIntegerFeature(hDev[deviceIndex], &quot;ActionGroupMask&quot;, AllGroupMask);</span><br><span class="line">                    /* Set the pixel format to Mono8, where gray values will be output as 8 bit values for each pixel. */</span><br><span class="line">                    /* ... Check first to see if the device supports the Mono8 format. */</span><br><span class="line">                    isAvail = Pylon.DeviceFeatureIsAvailable(hDev[deviceIndex], &quot;EnumEntry_PixelFormat_Mono8&quot;);</span><br><span class="line">                    if (!isAvail)</span><br><span class="line">                    &#123;</span><br><span class="line">                        /* Feature is not available. */</span><br><span class="line">                        throw new Exception(&quot;Device doesn&#x27;t support the Mono8 pixel format.&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line">                    /* ... Set the pixel format to Mono8. */</span><br><span class="line">                    Pylon.DeviceFeatureFromString(hDev[deviceIndex], &quot;PixelFormat&quot;, &quot;Mono8&quot;);</span><br><span class="line">                    /* Disable acquisition start trigger if available */</span><br><span class="line">                    isAvail = Pylon.DeviceFeatureIsAvailable(hDev[deviceIndex], &quot;EnumEntry_TriggerSelector_AcquisitionStart&quot;);</span><br><span class="line">                    if (isAvail)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Pylon.DeviceFeatureFromString(hDev[deviceIndex], &quot;TriggerSelector&quot;, &quot;AcquisitionStart&quot;);</span><br><span class="line">                        Pylon.DeviceFeatureFromString(hDev[deviceIndex], &quot;TriggerMode&quot;, &quot;Off&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line">                    /* Disable line1 trigger if available */</span><br><span class="line">                    isAvail = Pylon.DeviceFeatureIsAvailable(hDev[deviceIndex], &quot;EnumEntry_TriggerSelector_Line1&quot;);</span><br><span class="line">                    if (isAvail)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Pylon.DeviceFeatureFromString(hDev[deviceIndex], &quot;TriggerSelector&quot;, &quot;Line1&quot;);</span><br><span class="line">                        Pylon.DeviceFeatureFromString(hDev[deviceIndex], &quot;TriggerMode&quot;, &quot;Off&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line">                    /* Enable frame start trigger with first action */</span><br><span class="line">                    Pylon.DeviceFeatureFromString(hDev[deviceIndex], &quot;TriggerSelector&quot;, &quot;FrameStart&quot;);</span><br><span class="line">                    Pylon.DeviceFeatureFromString(hDev[deviceIndex], &quot;TriggerMode&quot;, &quot;On&quot;);</span><br><span class="line">                    Pylon.DeviceFeatureFromString(hDev[deviceIndex], &quot;TriggerSource&quot;, &quot;Action1&quot;);</span><br><span class="line">                    /* For GigE cameras, we recommend increasing the packet size for better</span><br><span class="line">                        performance. When the network adapter supports jumbo frames, set the packet</span><br><span class="line">                        size to a value &gt; 1500, e.g., to 8192. In this sample, we only set the packet size</span><br><span class="line">                        to 1500.</span><br><span class="line">                        We also set the Inter-Packet and the Frame Transmission delay</span><br><span class="line">                        so the switch can line up packets better.</span><br><span class="line">                    */</span><br><span class="line">                    Pylon.DeviceSetIntegerFeature(hDev[deviceIndex], &quot;GevSCPSPacketSize&quot;, GIGE_PACKET_SIZE);</span><br><span class="line">                    Pylon.DeviceSetIntegerFeature(hDev[deviceIndex], &quot;GevSCPD&quot;, (GIGE_PACKET_SIZE + GIGE_PROTOCOL_OVERHEAD) * (MAX_NUM_DEVICES - 1));</span><br><span class="line">                    Pylon.DeviceSetIntegerFeature(hDev[deviceIndex], &quot;GevSCFTD&quot;, (GIGE_PACKET_SIZE + GIGE_PROTOCOL_OVERHEAD) * deviceIndex);</span><br><span class="line">                    /* one device opened */</span><br><span class="line">                    ++deviceIndex;</span><br><span class="line">                &#125;</span><br></pre></td></tr></table></figure><h3 id="显示设备名称"><a href="#显示设备名称" class="headerlink" title="显示设备名称"></a>显示设备名称</h3><p> 显示设备的名称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">/* Print out the name of the camera we are using. */</span><br><span class="line">               &#123;</span><br><span class="line">                   bool isReadable;</span><br><span class="line">                   isReadable = Pylon.DeviceFeatureIsReadable(hDev, &quot;DeviceModelName&quot;);</span><br><span class="line">                   if (isReadable)</span><br><span class="line">                   &#123;</span><br><span class="line">                       string name = Pylon.DeviceFeatureToString(hDev, &quot;DeviceModelName&quot;);</span><br><span class="line">                       Console.WriteLine(&quot;Using camera &#123;0&#125;&quot;, name);</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br></pre></td></tr></table></figure><h3 id="设置拍摄图片模式"><a href="#设置拍摄图片模式" class="headerlink" title="设置拍摄图片模式"></a>设置拍摄图片模式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">/* Set the pixel format to Mono8, where gray values will be output as 8 bit values for each pixel. */</span><br><span class="line">                /* ... Check first to see if the device supports the Mono8 format. */</span><br><span class="line">                isAvail = Pylon.DeviceFeatureIsAvailable(hDev, &quot;EnumEntry_PixelFormat_Mono8&quot;);</span><br><span class="line">                if (!isAvail)</span><br><span class="line">                &#123;</span><br><span class="line">                    /* Feature is not available. */</span><br><span class="line">                    throw new Exception(&quot;Device doesn&#x27;t support the Mono8 pixel format.&quot;);</span><br><span class="line">                &#125;</span><br><span class="line">                /* ... Set the pixel format to Mono8. */</span><br><span class="line">                Pylon.DeviceFeatureFromString(hDev, &quot;PixelFormat&quot;, &quot;Mono8&quot;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="设置拍摄采集模式"><a href="#设置拍摄采集模式" class="headerlink" title="设置拍摄采集模式"></a>设置拍摄采集模式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">/* Check the available camera trigger mode(s) to select the appropriate one: acquisition start trigger mode (used by previous cameras;</span><br><span class="line">                do not confuse with acquisition start command) or frame start trigger mode (equivalent to previous acquisition start trigger mode). */</span><br><span class="line">                isAvailAcquisitionStart = Pylon.DeviceFeatureIsAvailable(hDev, &quot;EnumEntry_TriggerSelector_AcquisitionStart&quot;);</span><br><span class="line">                isAvailFrameStart = Pylon.DeviceFeatureIsAvailable(hDev, &quot;EnumEntry_TriggerSelector_FrameStart&quot;);</span><br><span class="line">                /* Check to see if the camera implements the acquisition start trigger mode only.</span><br><span class="line">                优先是frame start （此时只有在半双工的时候才能打开frame burst帧突发），其次选择Acquisition Start。两种模式不能并存</span><br><span class="line">                */</span><br><span class="line">                if (isAvailAcquisitionStart &amp;&amp; !isAvailFrameStart)</span><br><span class="line">                &#123;</span><br><span class="line">                    /* Camera uses the acquisition start trigger as the only trigger mode. */</span><br><span class="line">                    Pylon.DeviceFeatureFromString(hDev, &quot;TriggerSelector&quot;, &quot;AcquisitionStart&quot;);</span><br><span class="line">                    Pylon.DeviceFeatureFromString(hDev, &quot;TriggerMode&quot;, &quot;On&quot;);</span><br><span class="line">                    triggerSelectorValue = &quot;AcquisitionStart&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">                else</span><br><span class="line">                &#123;</span><br><span class="line">                    /* Camera may have the acquisition start trigger mode and the frame start trigger mode implemented.</span><br><span class="line">                    In this case, the acquisition trigger mode must be switched off. */</span><br><span class="line">                    if (isAvailAcquisitionStart)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Pylon.DeviceFeatureFromString(hDev, &quot;TriggerSelector&quot;, &quot;AcquisitionStart&quot;);</span><br><span class="line">                        Pylon.DeviceFeatureFromString(hDev, &quot;TriggerMode&quot;, &quot;Off&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line">                    /* Disable frame burst start trigger if available */</span><br><span class="line">                    isAvail = Pylon.DeviceFeatureIsAvailable(hDev, &quot;EnumEntry_TriggerSelector_FrameBurstStart&quot;);</span><br><span class="line">                    if (isAvail)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Pylon.DeviceFeatureFromString(hDev, &quot;TriggerSelector&quot;, &quot;FrameBurstStart&quot;);</span><br><span class="line">                        Pylon.DeviceFeatureFromString(hDev, &quot;TriggerMode&quot;, &quot;Off&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    /* To trigger each single frame by software or external hardware trigger: Enable the frame start trigger mode. */</span><br><span class="line">                    Pylon.DeviceFeatureFromString(hDev, &quot;TriggerSelector&quot;, &quot;FrameStart&quot;);</span><br><span class="line">                    Pylon.DeviceFeatureFromString(hDev, &quot;TriggerMode&quot;, &quot;On&quot;);</span><br><span class="line">                &#125;</span><br><span class="line">                /* Note: the trigger selector must be set to the appropriate trigger mode</span><br><span class="line">                before setting the trigger source or issuing software triggers.</span><br><span class="line">                Frame start trigger mode for newer cameras, acquisition start trigger mode for previous cameras. </span><br><span class="line">                软件触发*/</span><br><span class="line">                Pylon.DeviceFeatureFromString(hDev, &quot;TriggerSelector&quot;, triggerSelectorValue);</span><br><span class="line">                /* Enable software triggering. </span><br><span class="line">                持续采集*/</span><br><span class="line">                /* ... Select the software trigger as the trigger source. */</span><br><span class="line">                Pylon.DeviceFeatureFromString(hDev, &quot;TriggerSource&quot;, &quot;Software&quot;);</span><br><span class="line">                /* When using software triggering, the Continuous frame mode should be used. Once</span><br><span class="line">                   acquisition is started, the camera sends one image each time a software trigger is</span><br><span class="line">                   issued. */</span><br><span class="line">                Pylon.DeviceFeatureFromString(hDev, &quot;AcquisitionMode&quot;, &quot;Continuous&quot;);</span><br></pre></td></tr></table></figure><h3 id="设置拍摄数据包大小"><a href="#设置拍摄数据包大小" class="headerlink" title="设置拍摄数据包大小"></a>设置拍摄数据包大小</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">/* For GigE cameras, we recommend increasing the packet size for better</span><br><span class="line">   performance. If the network adapter supports jumbo frames, set the packet</span><br><span class="line">   size to a value &gt; 1500, e.g., to 8192. In this sample, we only set the packet size</span><br><span class="line">   to 1500. */</span><br><span class="line">/* ... Check first to see if the GigE camera packet size parameter is supported and if it is writable. */</span><br><span class="line">isAvail = Pylon.DeviceFeatureIsWritable(hDev, &quot;GevSCPSPacketSize&quot;);</span><br><span class="line">if (isAvail)</span><br><span class="line">&#123;</span><br><span class="line">    /* ... The device supports the packet size feature. Set a value. */</span><br><span class="line">    Pylon.DeviceSetIntegerFeature(hDev, &quot;GevSCPSPacketSize&quot;, 1500);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="设置拍摄块"><a href="#设置拍摄块" class="headerlink" title="设置拍摄块"></a>设置拍摄块</h3><p>摄像机可以生成关于每个图像的特定信息，例如帧</p><p>计数器、时间戳和CRC校验和，作为数据“块”附加到图像数据。此示例演示了如何启用块功能，以及如何获取</p><p>以及如何处理附加数据。当相机处于块模式时，它传输数据块</p><p>其被划分成块。第一块总是图像数据。当块特征被启用时，</p><p>图像数据块之后是包含由块特征生成的信息的块。<br>本示例还演示了如何使用软件触发器。使用两个缓冲器。一旦缓冲器被填充，</p><p>在处理接收到的缓冲器之前触发下一帧的获取。这种方法允许：</p><p>在前一图像的处理进行的同时执行图像获取。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">/* Before enabling individual chunks, the chunk mode in general must be activated. */</span><br><span class="line">isAvail = Pylon.DeviceFeatureIsWritable(hDev, &quot;ChunkModeActive&quot;);</span><br><span class="line">if (!isAvail)</span><br><span class="line">&#123;</span><br><span class="line">    throw new Exception(&quot;The device doesn&#x27;t support the chunk mode.&quot;);</span><br><span class="line">&#125;</span><br><span class="line">/* Activate the chunk mode. */</span><br><span class="line">Pylon.DeviceSetBooleanFeature(hDev, &quot;ChunkModeActive&quot;, true);</span><br><span class="line">/* Enable some individual chunks... */</span><br><span class="line">/* ... The frame counter chunk feature. */</span><br><span class="line">/* Is the chunk feature available? */</span><br><span class="line">isAvail = Pylon.DeviceFeatureIsAvailable(hDev, &quot;EnumEntry_ChunkSelector_Framecounter&quot;);</span><br><span class="line">if (isAvail)</span><br><span class="line">&#123;</span><br><span class="line">    /* Select the frame counter chunk feature. */</span><br><span class="line">    Pylon.DeviceFeatureFromString(hDev, &quot;ChunkSelector&quot;, &quot;Framecounter&quot;);</span><br><span class="line">    /* Can the chunk feature be activated? */</span><br><span class="line">    isAvail = Pylon.DeviceFeatureIsWritable(hDev, &quot;ChunkEnable&quot;);</span><br><span class="line">    if (isAvail)</span><br><span class="line">    &#123;</span><br><span class="line">        /* Activate the chunk feature. */</span><br><span class="line">        Pylon.DeviceSetBooleanFeature(hDev, &quot;ChunkEnable&quot;, true);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="设置块chunks的内容"><a href="#设置块chunks的内容" class="headerlink" title="设置块chunks的内容"></a>设置块chunks的内容</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">//设置循环冗余校验（Cyclic Redundancy Check， CRC）是一种根据网络数据包或计算机文件等数据产生简短固定位数校验码的一种信道编码技术，</span><br><span class="line">主要用来检测或校验数据传输或者保存后可能出现的错误。它是利用除法及余数的原理来作错误侦测的。</span><br><span class="line">                /* ... The CRC checksum chunk feature. */</span><br><span class="line">                /*  Note: Enabling the CRC checksum chunk feature is not a prerequisite for using</span><br><span class="line">                   chunks. Chunks can also be handled when the CRC checksum chunk feature is disabled. */</span><br><span class="line">                isAvail = Pylon.DeviceFeatureIsAvailable(hDev, &quot;EnumEntry_ChunkSelector_PayloadCRC16&quot;);</span><br><span class="line">                if (isAvail)</span><br><span class="line">                &#123;</span><br><span class="line">                    /* Select the CRC checksum chunk feature. */</span><br><span class="line">                    Pylon.DeviceFeatureFromString(hDev, &quot;ChunkSelector&quot;, &quot;PayloadCRC16&quot;);</span><br><span class="line">                    /* Can the chunk feature be activated? */</span><br><span class="line">                    isAvail = Pylon.DeviceFeatureIsWritable(hDev, &quot;ChunkEnable&quot;);</span><br><span class="line">                    if (isAvail)</span><br><span class="line">                    &#123;</span><br><span class="line">                        /* Activate the chunk feature. */</span><br><span class="line">                        Pylon.DeviceSetBooleanFeature(hDev, &quot;ChunkEnable&quot;, true);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br></pre></td></tr></table></figure><h4 id="设置块解析器chunk-parser"><a href="#设置块解析器chunk-parser" class="headerlink" title="设置块解析器chunk parser"></a>设置块解析器chunk parser</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/* The data block containing the image chunk and the other chunks has a self-descriptive layout.</span><br><span class="line">   A chunk parser is used to extract the appended chunk data from the grabbed image frame.</span><br><span class="line">   Create a chunk parser. */</span><br><span class="line">hChunkParser = Pylon.DeviceCreateChunkParser(hDev);</span><br><span class="line">if (!hChunkParser.IsValid)</span><br><span class="line">&#123;</span><br><span class="line">    /* The transport layer doesn&#x27;t provide a chunk parser. */</span><br><span class="line">    throw new Exception(&quot;No chunk parser available.&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="设置并分配拍摄流与缓冲区"><a href="#设置并分配拍摄流与缓冲区" class="headerlink" title="设置并分配拍摄流与缓冲区"></a>设置并分配拍摄流与缓冲区</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">/* Image grabbing is done using a stream grabber.</span><br><span class="line">                  A device may be able to provide different streams. A separate stream grabber must</span><br><span class="line">                  be used for each stream. In this sample, we create a stream grabber for the default</span><br><span class="line">                  stream, i.e., the first stream ( index == 0 ).</span><br><span class="line">                  */</span><br><span class="line">                /* Get the number of streams supported by the device and the transport layer. */</span><br><span class="line">                nStreams = Pylon.DeviceGetNumStreamGrabberChannels(hDev);</span><br><span class="line">                if (nStreams &lt; 1)</span><br><span class="line">                &#123;</span><br><span class="line">                    throw new Exception(&quot;The transport layer doesn&#x27;t support image streams.&quot;);</span><br><span class="line">                &#125;</span><br><span class="line">                /* Create and open a stream grabber for the first channel. */</span><br><span class="line">                hGrabber = Pylon.DeviceGetStreamGrabber(hDev, 0);</span><br><span class="line">                Pylon.StreamGrabberOpen(hGrabber);</span><br><span class="line">                /* Get a handle for the stream grabber&#x27;s wait object. The wait object</span><br><span class="line">                   allows waiting for buffers to be filled with grabbed data. */</span><br><span class="line">                hWait = Pylon.StreamGrabberGetWaitObject(hGrabber);</span><br><span class="line">                /* Determine the required size of the grab buffer. Since activating chunks will increase the</span><br><span class="line">                   payload size and thus the required buffer size, do this after enabling the chunks. */</span><br><span class="line">                payloadSize = checked((uint)Pylon.DeviceGetIntegerFeature(hDev, &quot;PayloadSize&quot;));</span><br><span class="line">                /* We must tell the stream grabber the number and size of the buffers</span><br><span class="line">                    we are using. */</span><br><span class="line">                /* .. We will not use more than NUM_BUFFERS for grabbing. */</span><br><span class="line">                Pylon.StreamGrabberSetMaxNumBuffer(hGrabber, NUM_BUFFERS);</span><br><span class="line">                /* .. We will not use buffers bigger than payloadSize bytes. */</span><br><span class="line">                Pylon.StreamGrabberSetMaxBufferSize(hGrabber, payloadSize);</span><br><span class="line">                /*  Allocate the resources required for grabbing. After this, critical parameters</span><br><span class="line">                    that impact the payload size must not be changed until FinishGrab() is called. */</span><br><span class="line">                Pylon.StreamGrabberPrepareGrab(hGrabber);</span><br><span class="line">                 /*</span><br><span class="line">                将缓冲区输入流抓取器的输入队列。对于每个缓冲区，API允许传递整数作为附加上下文信息。</span><br><span class="line">                抓取完成后，该整数将返回不变。在我们的示例中，我们使用缓冲区的索引作为上下文信息。</span><br><span class="line">                Before using the buffers for grabbing, they must be registered at</span><br><span class="line">                   the stream grabber. For each registered buffer, a buffer handle</span><br><span class="line">                   is returned. After registering, these handles are used instead of the</span><br><span class="line">                   buffer objects pointers. The buffer objects are held in a dictionary,</span><br><span class="line">                   that provides access to the buffer using a handle as key.</span><br><span class="line">                 */</span><br><span class="line">                buffers = new Dictionary&lt;PYLON_STREAMBUFFER_HANDLE, PylonBuffer&lt;Byte&gt;&gt;();</span><br><span class="line">                for (i = 0; i &lt; NUM_BUFFERS; ++i)</span><br><span class="line">                &#123;</span><br><span class="line">                    PylonBuffer&lt;Byte&gt; buffer = new PylonBuffer&lt;byte&gt;(payloadSize, true);</span><br><span class="line">                    PYLON_STREAMBUFFER_HANDLE handle = Pylon.StreamGrabberRegisterBuffer(hGrabber, ref buffer);</span><br><span class="line">                    buffers.Add(handle, buffer);</span><br><span class="line">                &#125;</span><br><span class="line">                /* Feed the buffers into the stream grabber&#x27;s input queue. For each buffer, the API</span><br><span class="line">                   allows passing in an integer as additional context information. This integer</span><br><span class="line">                   will be returned unchanged when the grab is finished. In our example, we use the index of the</span><br><span class="line">                   buffer as context information. */</span><br><span class="line">                i = 0;</span><br><span class="line">                foreach (KeyValuePair&lt;PYLON_STREAMBUFFER_HANDLE, PylonBuffer&lt;Byte&gt;&gt; pair in buffers)</span><br><span class="line">                &#123;</span><br><span class="line">                    Pylon.StreamGrabberQueueBuffer(hGrabber, pair.Key, i++);</span><br><span class="line">                &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Basler </category>
          
          <category> .Net </category>
          
      </categories>
      
      
        <tags>
            
            <tag> basler </tag>
            
            <tag> .NET </tag>
            
            <tag> c# </tag>
            
            <tag> 基础语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#基础学习-1</title>
      <link href="/2022/09/04/C%20Sharp/C%20Sharp%20%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0-1/"/>
      <url>/2022/09/04/C%20Sharp/C%20Sharp%20%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0-1/</url>
      
        <content type="html"><![CDATA[<p>前言：<br>自己真正的编写自己的学习博客</p><h1 id="方法的类型"><a href="#方法的类型" class="headerlink" title="方法的类型"></a>方法的类型</h1><h2 id="普通方法"><a href="#普通方法" class="headerlink" title="普通方法"></a>普通方法</h2><p>方法就是函数。普通方法就是函数。在类中就是对于方法的“行为”进行描述。<br></p><h3 id="普通方法的语法格式"><a href="#普通方法的语法格式" class="headerlink" title="普通方法的语法格式"></a>普通方法的语法格式</h3><p>访问修饰符 返回值 方法名（参数列表）<br><br>{<br>    方法的具体功能<br>}  </p><p>class Person<br>{<br>    private string name;<br>    private int age;<br>    public string Name<br>    {<br>        get{return name};<br>        set{name&#x3D;value};<br>    }<br>    &#x2F;&#x2F;后面都可以使用Name进行取值与赋值<br>}<br>Person p1&#x3D;new Person();<br>p1.Name&#x3D;”zhangsan”;<br>name2&#x3D;p1.Name;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">## 构造方法</span><br><span class="line">构造方法可以队实例化出来的对象进行初始化&lt;br&gt;</span><br><span class="line">### 构造方法的语法格式</span><br><span class="line">public 类名()&lt;br&gt;</span><br><span class="line">&#123;  </span><br><span class="line">构造函数代码  </span><br><span class="line">&#125;  </span><br><span class="line">1. 构造方法要用public修饰  </span><br><span class="line">2. 构造方法没有返回值，切连void也不能写  </span><br><span class="line">3. 构造方法的方法名必须与类名一样  </span><br><span class="line">4. 构造方法可以有重载  </span><br><span class="line">5. 构造方法如果没有编写过会自动增加一个空的构造方法，但是手动编写有参或者无参数的构造方法后就不会自动添加了</span><br></pre></td></tr></table></figure><p>class Person<br>{<br>    &#x2F;&#x2F;无参数的构造方法<br>    public Person()<br>    {<br>        zhanwei<br>    }<br>    &#x2F;&#x2F;两个参数的构造方法<br>    public Person(string name,int age)<br>    {<br>        this.name&#x3D;name;<br>        this.age&#x3D;atge;<br>    }<br>}<br>&#x2F;&#x2F;如何使用<br>Person p2&#x3D;new Person();<br>Person p3&#x3D;new Person(“monkey”,18);</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">### This关键字</span><br><span class="line">this 表示类内部的那个变量</span><br><span class="line"></span><br><span class="line">## 析构方法</span><br><span class="line">析构方法是常常用于清理一个对象与构造方法差不多是相反的东西</span><br><span class="line"></span><br><span class="line">### 析构方法的语法</span><br><span class="line">～类名()  </span><br><span class="line">&#123;  </span><br><span class="line">析构方法代码体;  </span><br><span class="line">&#125;  </span><br><span class="line">1. 析构方法没有任何参数</span><br><span class="line">2. 析构方法没有返回值与访问修饰符</span><br><span class="line">3. 析构方法由系统自动调用</span><br><span class="line">4. 析构方法可以不屑。</span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;构造语法<br>&#x2F;&#x2F;以后补充</p><pre><code></code></pre>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
          <category> 日常学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 基础学习 </tag>
            
            <tag> 类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>diyi</title>
      <link href="/2022/08/21/hexo/diyi/"/>
      <url>/2022/08/21/hexo/diyi/</url>
      
        <content type="html"><![CDATA[<p>自己完成的第一篇博客的认证<br>下面来测试一下各种markdown的基本语法</p><h1 id="第一部分-level-1"><a href="#第一部分-level-1" class="headerlink" title="第一部分 level 1"></a>第一部分 level 1</h1><p>输入 “mdi + tab” 会自动插入下面的图片标记<br>输入 “mdl + tab” 会自动生成下面的链接标记<br>是需要自己保存才会用自动改变吧  </p><p>怎么感觉使用有点卡顿吧<br>能够确定是需要保存才会展现出来,<br><br>两边的反应速度好像基本一致  </p><h2 id="倾斜-level-2"><a href="#倾斜-level-2" class="headerlink" title="倾斜 level 2"></a>倾斜 level 2</h2><p>展现<em>新的</em>一行<br></p><h2 id="加粗-level-2"><a href="#加粗-level-2" class="headerlink" title="加粗 level 2"></a>加粗 level 2</h2><p>新的<strong>展现</strong>一行</p><h2 id="引用语法-level-2"><a href="#引用语法-level-2" class="headerlink" title="引用语法 level 2"></a>引用语法 level 2</h2><blockquote><p>yinyong<br>deiwfh</p><blockquote><p>bfejsbf</p><blockquote><p>kdfe<br>dwad<br>fkefb<br>fbrehk<br>dfbjhwe</p></blockquote></blockquote></blockquote><h2 id="代码块展示-level-2"><a href="#代码块展示-level-2" class="headerlink" title="代码块展示 level 2"></a>代码块展示 level 2</h2><p>&#96;</p><html>    <head>        nishuoyiwoshuoyi    </head></html>`  <h2 id="围栏式代码块展示-level-2"><a href="#围栏式代码块展示-level-2" class="headerlink" title="围栏式代码块展示 level 2"></a>围栏式代码块展示 level 2</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">    nishuoyiwoshuoyi</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>这是一类分割线前</p><hr><p>这是一类分割线后，二类分割线后</p><hr><p>二类分割线后</p><h2 id="列表语法"><a href="#列表语法" class="headerlink" title="列表语法"></a>列表语法</h2><ol><li>Cheiese</li><li>English</li><li>France</li></ol><h2 id="链接语法"><a href="#链接语法" class="headerlink" title="链接语法"></a>链接语法</h2><p>这是一个链接<a href="https://zh.wikipedia.org/zh-tw/%E5%88%9D%E9%9F%B3%E6%9C%AA%E4%BE%86" title="miku殿下来了">守护最好的殿下</a></p><h2 id="图片语法"><a href="#图片语法" class="headerlink" title="图片语法"></a>图片语法</h2><p>一个带链接的图片（!<a href="%E5%9B%BE%E7%89%87%E9%93%BE%E6%8E%A5" title="图片title">图片alt</a>）<br><a href="https://markdown.com.cn/"><img src="/assets/img/shiprock.jpg" alt="沙漠中的岩石图片" title="Shiprock"></a></p><p>##最后友情提示可以直接使用html的语法</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ASP.NET Core Web API返回格式</title>
      <link href="/2022/02/04/C%20Sharp/ASP.NET%20Core%20Web%20API%E7%9A%84%E8%BF%94%E5%9B%9E%E6%A0%BC%E5%BC%8F/"/>
      <url>/2022/02/04/C%20Sharp/ASP.NET%20Core%20Web%20API%E7%9A%84%E8%BF%94%E5%9B%9E%E6%A0%BC%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="ASP-NET-Core-Web-API错误返回"><a href="#ASP-NET-Core-Web-API错误返回" class="headerlink" title="ASP.NET Core Web API错误返回"></a>ASP.NET Core Web API错误返回</h2><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为考虑到使用一些状态码来简单提要错误类型。所以在返回类型上需要注意一下。</p><p>附赠：返回码大全 <a href="https://cloud.tencent.com/developer/article/2025896">关于HTTP 状态码不要再问我了，都在这了 。。。返回什么就去解决什么，不要盯着状态码找不到解决办法。。。-腾讯云开发者社区-腾讯云 (tencent.com)</a></p><p>常见的返回类型大概有三种。</p><ul><li><code>Specific type</code></li><li><code>IActionResult</code></li><li><code>ActionResult&lt;T&gt;</code></li></ul><h2 id="1-返回指定类型（Specific-type）"><a href="#1-返回指定类型（Specific-type）" class="headerlink" title="1. 返回指定类型（Specific type）"></a>1. 返回指定类型（Specific type）</h2><p>最简单的API会返回原生的或者复杂的数据类型（比如，string 或者自定义对象类型）。考虑如下的Action方法，其返回了一个自定义的Author对象的集合。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">HttpGet</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Author&gt; <span class="title">Get</span>()</span> =&gt;</span><br><span class="line">    _repository.GetAuthors();</span><br><span class="line">csharp复制代码[HttpGet]</span><br><span class="line"><span class="function"><span class="keyword">public</span> IEnumerable&lt;Author&gt; <span class="title">Get</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">return</span> _repository.GetAuthors();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从 NetCore 3.0 开始，你不仅可以定义同步形式的 <code>IEnumerable&lt;Author&gt;</code>方法，也可以定义异步形式的 <code>IAsyncEnumerable&lt;T&gt;</code>方法，不同点在于后者是一个异步模式的集合，好处就是不会导致同步迭代，<code>既不阻塞数据库，也不阻塞主线程</code>。</p><p>下面的代码展示了如何改造 Get 方法，两个方法返回都是<code>不阻塞</code>的。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">HttpGet</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> IEnumerable&lt;Author&gt; <span class="title">Get</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> authors = _repository.GetAuthors();<span class="comment">// 需要等待authors全部查询完成，才会进入下一步迭代，但是返回时又做了一个判断筛选，返回是不阻塞的</span></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">var</span> author <span class="keyword">in</span> authors) <span class="comment">// 适合数据库量大时，只做全部查询，然后通过foreach筛选，yield迭代返回</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(author.isMale)&#123;</span><br><span class="line">             <span class="keyword">yield</span> <span class="keyword">return</span> author;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[<span class="meta">HttpGet</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> IAsyncEnumerable&lt;Author&gt; <span class="title">Get</span>() <span class="comment">//异步迭代，既不会阻塞数据库，也不阻塞主线程</span></span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">var</span> authors = GetAuthorsAsync(); <span class="comment">// 使用GetAuthorsAsync异步方法，不用authors查询完毕，就会进入下一步迭代返回authors</span></span><br><span class="line">   <span class="keyword">await</span> <span class="keyword">foreach</span> (<span class="keyword">var</span> author <span class="keyword">in</span> authors)</span><br><span class="line">   &#123;</span><br><span class="line">        <span class="keyword">yield</span> <span class="keyword">return</span> author;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-返回-IActionResult-实例"><a href="#2-返回-IActionResult-实例" class="headerlink" title="2. 返回 IActionResult 实例"></a>2. 返回 IActionResult 实例</h2><p>如果你要返回 <code>data + httpcode</code> 的双重需求，那么 IActionResult 就是你要找的东西，下面的代码片段展示了如何去实现。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">HttpGet</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> IActionResult <span class="title">Get</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span> (authors == <span class="literal">null</span>)</span><br><span class="line">      <span class="keyword">return</span> NotFound(<span class="string">&quot;No records&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> Ok(authors); <span class="comment">// 必须有Ok等方法包装</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的代码有 <code>Ok</code>，<code>NotFound</code> 两个方法，对应着 OKResult，NotFoundResult， Http Code 对应着 200，404。当然还有其他的如：CreatedResult, NoContentResult, BadRequestResult, UnauthorizedResult, 和 UnsupportedMediaTypeResult，都是 IActionResult 的子类。</p><h2 id="3-返回-ActionResult-实例"><a href="#3-返回-ActionResult-实例" class="headerlink" title="3. 返回 ActionResult&lt;T&gt; 实例"></a>3. 返回 <code>ActionResult&lt;T&gt;</code> 实例</h2><p><code>ActionResult&lt;T&gt;</code>包装了前面这种模式：可以返回 IActionResult（data + httpcode），也可以返回指定类型T</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">HttpGet</span>]</span><br><span class="line"><span class="keyword">public</span> ActionResult&lt;IEnumerable&lt;Author&gt;&gt; Get()</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span> (authors == <span class="literal">null</span>)</span><br><span class="line">       <span class="keyword">return</span> NotFound(<span class="string">&quot;No records&quot;</span>);</span><br><span class="line">   <span class="keyword">return</span> authors;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>和之前<code>IActionResult</code>的 Get 方法相比，这里如果不需要返回httpCode，则直接返回 <code>authors</code> ，而不需要再用 <code>OK(authors)</code> 包装，是一个非常好的简化，而<code>IActionResult</code>必须要使用Ok等包装一下返回。</p><p>接下来再把 Get 方法异步化：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">HttpGet</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;ActionResult&lt;IEnumerable&lt;Author&gt;&gt;&gt; Get()</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">var</span> data = <span class="keyword">await</span> GetAuthors();</span><br><span class="line">   <span class="keyword">if</span> (data == <span class="literal">null</span>)</span><br><span class="line">        <span class="keyword">return</span> NotFound(<span class="string">&quot;No record&quot;</span>);</span><br><span class="line">   <span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果你有一些定制化需求，可以实现一个自定义的 ActionResult 类，做法就是实现 IActionResult 中的 ExecuteResultAsync 方法即可。</p>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/01/31/hexo/hello-world/"/>
      <url>/2022/01/31/hexo/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
